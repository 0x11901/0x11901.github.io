[{"title":"Entity–component–system","url":"/2019/02/14/Entity–component–system/","content":"\n<center>![](https://upload-images.jianshu.io/upload_images/1431816-9548d61116b8c93f.gif)</center>\n\n[Entity–component–system](https://en.wikipedia.org/wiki/Entity%E2%80%93component%E2%80%93system) (ECS) 是在游戏架构中广泛采用的一种架构。在游戏中，每个物体是一个 Entity（实体），比如，敌人、子弹、车辆等。每个实体具有一个或多个组件，赋予这个实体不同的行为或功能。所以，一个实体的行为可以在游戏运行时通过加减组件进行改变。ECS 经常和数据驱动模式一起使用。\n\n## 游戏行业中设计模式的演变\n\n_设计模式产生的动机，往往源于尝试解决一些存在的问题。游戏开发领域技术架构的宏观目标，大体包括以下目标：_\n\n- **适合快速迭代**。无论是上线前的敏捷开发流程还是上线后根据市场反馈的调整，迭代都是基本需求。\n- **易于保证产品质量**。良好的架构，可以降低 Bug 和 Crash 出现概率。\n- **开发效率**。重要性不必多说。即使是更重视游戏质量的公司，越高的开发效率也有助于更短的时间打造出质量更高的游戏。\n- **运行效率**。大部分游戏对实时响应和运行流畅度都有很高的要求，同时游戏中又存在大量吃性能的模块（比如渲染、物理、AI 等）。\n- **协作扩展性**。能够在开发团队扩张时尽可能无痛，同时方便支持美术、策划、音效等非程序同事的开发需求。\n\n**不适合这个版本的上个世纪开发模式：**\n\n注重于实现相关算法、功能和逻辑，代码只要能实现功能就行，怎么直观怎么来。比如\n\n```cpp\nclass Player {\n    int    hp;\n    Model *model;\n    void   move();\n    void   attack();\n};\n```\n\n类似这样完全没有或很少架构设计的代码，在项目规模增大后，很快变得臃肿、难以扩展和维护。\n为了实现代码复用这一终极理想。有人提出可以借鉴他山之石——GoF 提出的设计模式，来提高代码的可维护性和可扩展性。例如曾经在国内风靡一时的游戏引擎 [OGRE](https://blog.csdn.net/xoyojank/article/details/2146435)\n\n然而，历史无情的车轮已经将其淘汰。同时也告诉了我们：\n\n- 设计模式的 [六大原则](http://www.uml.org.cn/sjms/201211023.asp) 大部分仍值得遵循。\n- 基于 Java 的设计模式，未必适合其它语言和领域。\n- C++ 是游戏开发领域最主要的语言，可以 OOP 但并不那么 OO，比如缺少语言层面纯粹的 interface，也缺少 GC、反射等特性。照抄 Java 的设计模式未免有些东施尿频，而且难以实现 C++ 所推崇的零代价抽象。（template 笑而不语）\n- 局部使用 OOP 设计模式来实现模块，并暴露简单接口，是可以起到提升代码质量和逼格的效果。然而在架构层面滥用，往往只是把逻辑中的复杂度转移到架构复杂度上。\n- 滥用设计模式导致的复杂架构，并不对可读性和可维护性有帮助。比如原本 C style 只要一个文件顺序读下来就能了解清楚的模块，滥用设计模式的 OOP 实现，阅读代码时有可能需要在十几个文件中来回跳转，还需要人脑去正确保证阅读代码的上下文...\n- 过多的抽象导致过多的中间层次，却只是把耦合一层一层传递。直到最后结合反射 + IoC 框架 + 数据驱动，才算有了靠谱的解决方案。然而一提到反射，C++ 表示我的蛋蛋有点疼。\n\n那么，有没有办法简化和沉淀出游戏开发领域较通用的模式？\n\n**现代 Entity Component System**\n\n- **Entity**：代表游戏中的实体，是 Component 的容器。本身并无数据和逻辑。\n- **Component**：代表实体 “有什么”，一个或多个 Component 组成了游戏中的逻辑实体。只有数据，不涉及逻辑。\n- **System**：对 Component 集中进行逻辑操作的部分。一个 System 可以操作一类或多类 Component。同一个 Component 在不同的 System 中，可以关联不同的逻辑。\n\n![](https://pic1.zhimg.com/80/v2-6d7ab7a37b87b711a8f548531d445c48_hd.jpg)\n\n近年来以 ECS 为基础架构逐渐成为国际游戏开发领域的主流趋势，其中以「[守望先锋](http://gad.qq.com/article/detail/28682)」最为著名。\n\n采用 ECS 的范式进行开发，思路上跟传统的开发模式有较大的差别：\n\n- Entity 是个抽象的概念，并不直接映射为具体的事物：比如可以不存在 Player 类，而是由多个相关 Component 所组成的 Entity 代表了 Player。如 Entity {MovementComponent, RenderComponent, StateMachineComponent, ...} 等等。\n- 行为通过对 Component 实施操作来表达。比如简单重力系统的实现，可以遍历所有 Movement Component 实施位移，而不是遍历所有 玩家、怪物、场景物件，或者它们统一的基类。\n- 剥离数据和行为，数据存储于 Component 中，而 Component 的相关行为，和涉及多个 Component 的交互和耦合，由 System 进行实施。\n\n### 简单的例子：\n\n重复一下区别：\n\n1. OOP 的核心思想是：我是什么——我是一个角色对象，我是一个子弹对象。\n2. ECS 的核心思想是：我有什么——我有 render，我有 move，我有 motion。\n\n就拿子弹和角色来说，如果我们是一个很简单的射击游戏，例如 FC 上的坦克大战 [Battle City](<https://en.wikipedia.org/wiki/Battle_City_(video_game)>)\n\n<center>![](https://upload.wikimedia.org/wikipedia/zh/a/ab/Battle_City_video_game.jpg)</center>\n\n如果用 OOP 的方式做，它里面有角色（坦克）对象和子弹对象，伪代码\n\n```c#\nclass tank {\n    // 这里仅说一些有代表性的，就不细节设计了\n    public tank ()\n    public Vector2 move (direction) // 有一个 move 方法来移动坦克，在这个方法里\n    // 面，我们根据面向、速度等因素来让坦克的坐标发生位移，同时我们让坦克的动作发生了\n    // 变化。注意：我们把坦克的渲染其实也放在了这里，所谓的渲染包括了移动时候播放的动画等。\n    public bullet fire () // 我们通过这个来让坦克开火，产生子弹\n    public void kill () // 我们通过这个来让坦克在 HP 小于等于 0 的时候死亡。\n}\n\nclass bullet {\n    public bullet () {}\n    public Vector2 move (direction) // 子弹也会根据方向移动，这毫无疑问。注意，\n    // 我们把子弹的渲染也放在了这里，所谓渲染包括了子弹移动的时候贴出他的位置。\n    public void hit () // 子弹命中了什么东西之后要调用这个，用来消除子弹。\n}\n```\n\n我相信不用写 game，大多人也知道这个 game 要怎么写，毕竟这么简单的游戏。\n\n那么我们来看看 ECS 是怎么做这个的？伪代码\n\n```c#\nmoveComponent {\n    enum direction // 移动方向，不做进一步解释了\n    float moveSpeed // 移动速度，我想你也明白\n}\n\npositionComponent {\n    float x; // 位于地图的坐标，不解释了\n    float y;\n}\n\nfunction moveSystem (entities) { // 这个 system 只关心带有 positionComponent 和\n//moveComponent 的 entity，所以 entities 里面的所有 entity 都必然有个 moveComponent\n// 和 positionComponent\n    for (entity in entities) {\n        // 这里就不详细写了， 执行的事情就是根据 moveComponent 中的 direction 和\n        // moveSpeed， 为 positionComponent 中的 x, y 重新赋值。\n    }\n}\n\nrenderComponent {\n    string resource; // 贴图的信息，可以是资源名，等等，老做游戏了你应该理解这个\n}\n\nfunction renderSystem (entities) {\n    // 这个系统的工作，就是根据自己关心的带有 positionComponent 和 renderComponent\n    // 的对象，来进行渲染工作。\n}\n\ncollisionComponent {\n    rect body; //FC 的坦克大战中，所有的子弹和坦克，其实都是矩形的。\n    int side; // 可以理解为阵营，同一阵营的互相忽略碰撞，当然写在这里面并不是最好的\n    // 方案，具体要看需求，目前的需求下这还算凑合。\n    hitEntities : array<entity>; // 用于记录碰撞到的 entity\n}\n\ntankComponent {\n    // 证明这是一个 tank，并且记录坦克需要的数据\n    int hp\n}\n\nbulletComponent {\n    // 证明这是一个子弹，并记录子弹需要的信息\n    int power\n    bool hitSomeThing\n}\n\nfunction collisionSystem (entities) {\n    // 这个 system 关心的是 collisionComponent 和 positionComponent，他的工作就是\n    // 根据 position 和 collisionComponent.rect 来判断 2 个 entity 是否碰撞，如果碰\n    // 撞，则将彼此加入到对方的 collisionComponent.hitEntities 数组中去。\n}\n\nfunction damageSystem (entities) {\n    // 这是一个很有意思的 system，他只关心带有 collisionComponent，然后会根据\n    //collisionComponent.hitEntities 中的 entity 提供的信息配合被捕捉的 entity 的\n    // 其他 component（比如 tankComponent 和 bulletComponent）进行特殊处理。\n    // 这个 system 的工作之一：如果这个 entity 并没有 tankComponent，同时还没有\n    // bulletComponent，for 循环执行 continue，检查下一个 entity。\n    // 如果这个 entity 拥有 tankComponent，证明这是坦克，则遍历\n    // collisionComponent.hitEntities，根据其中带有 bulletComponent 的 entity\n    // 进行处理，你可以同时销毁他们全部，并且都对这个坦克进行伤害，也可以根据被认为是\n    // 子弹（带有 bulletComponent 的 entity）的个数特殊处理，比如被 3 个子弹命中则 hp 提\n    // 高 10000 等，根据设计需求来实现。\n    // 值得注意的是：即使 entity.tankComponent.hp<=0，也不由我来进行下一步操作，\n    // 我就是一个 damageSystem，我负责的就是 damage（造成伤害），造成伤害的后果，管我鸟事儿。\n}\n\nfunction tankDestroySystem (entities) {\n    // 我只关心带有 tankComponent 的 entity，我的任务是如果\n    // entity.tankComponent.hp<=0，则将他们杀死。\n}\n\nfunction bulletDestroySystem (entities) {\n    // 和 tankDestroySystem 差不多，但我只负责对\n    // bulletComponent.hitSomeThing==true 的对象进行 dispose()\n}\n```\n\n这就是一个典型的 ECS 的游戏写法，他没有坦克对象，子弹对象，但是他有坦克和子弹\n\n```c#\ntankEntity = entities.new ()\n    .add (new positionComponent (x, y))\n    .add (new renderComponent (xxxx))\n    .add (new collisionComponent (rect (x, x, x, x), y)\n    .add (new tankComponent (x)) bulletEntity = entities.new ()\n    .add (new positionComponent (x, y))\n    .add (new renderComponent (xxxx))\n    .add (new collisionComponent (rect (x, x, x, x), y)\n    .add (new bulletComponent (x))\n```\n\n你会发现，子弹和坦克唯一的区别就是一个是子弹，一个是坦克。你可能要问，为什么没有 moveComponent？因为 moveComponent 只有在移动的时候才需要添加上去，当移动完毕，就可以把它移除掉，这对于效率来说，还算是一种优化。\n\n到这里，我们是不是可以思考另外一个问题——在一个 3 岁小孩子眼里，画出来的羊和活着的羊有什么区别？区别就是：活着的羊会动，他有 motionComponent 和 moveComponent。当然话题收回来，现在，我们发现游戏中还没有设计地形，对，没有地形玩什么？\n\nOOP 方式：\n\n```c#\nclass ObstacleGrid {\n    // tilebased 游戏，地图格当然不能没有，当然这种游戏需要的只是会阻挡的地形格子信息而已。\n    string resource; // 贴图资源\n    bool breakable; // 能否被子弹击穿\n    Vector2 position; // 位置\n    //.....\n    public void\n    break () // 被子弹销毁了\n}\n```\n\n看起来加一个对象不复杂，但是当地图上有了这些 obstacleGrids 之后，你要在 game 中 coding 什么呢？很多，比如坦克移动的时候，你不能穿越他，再比如子弹命中他的时候…… 等等等等。\n\nECS 方式，我们要做的事情很清晰：\n\n```c#\nwallComponent {\n    // 证明我是阻挡地形，别在意名字的细节……\n    bool breakable;\n}\n\nfunction obstacleSystem (entities) {\n    // 这个 system 关心的，只有带有 wallComponent 和 collisionComponent 的 entity，\n    // 根据 collisionComponent.hitEntities 进行对应的处理，相信你动动脑子能想明白。\n    // 这里有一个独特与 oop 的地方，如果我（墙壁 entity）阻挡了坦克或者子弹，我要做的是\n    // 对对方 entity.remove(moveComponent)，导致对方不能发生移动。\n}\n```\n\n阻挡地形：\n\n```C#\nobstacleGrid = entities.new ()\n    .add (new positionComponent (x, y))\n    .add (new renderComponent (xxxx))\n    .add (new collisionComponent (rect (x, x, x, x), y)\n    .add (new wallComponent (x))\n```\n\n看到这里，发现为啥他和子弹和坦克如此接近？是不是能突然冒出一个有意思的想法？如果产品一拍脑门说，我的阻挡地形也会移动！是不是 OOP 很懵逼？但 ECS 就很好处理了？\n\n##ECS 对游戏开发领域的意义：\n\n- **模式简单**。如果还是觉得复杂，推荐看看 GoF 的《设计模式》。\n- **概念统一**。不再需要庞大臃肿的 OOP 继承体系和大量中间抽象，有助于迅速把握系统全貌。同时，统一的概念也有利于实现 ** 数据驱动 **。\n- **结构清晰**。Component 即数据，System 即行为。Component 扁平的表达有助于实现 Component 间的正交。而封装数据和行为的做法，不仔细设计就会导致 Component 越来越臃肿。\n- **容易组合**，高度复用。Component 具有高度可插拔、可复用的特性。而 System 主要关心的是 Component 而不是 Entity，通过 Component 来组装新的 Entity，对 System 来说是无痛的。\n- **扩展性强**。增加 Component 和 System，不需要对原有代码框架进行改动。\n- **利于实现面向数据编程（[DOP](https://stackoverflow.com/questions/4122696/what-is-data-oriented-programming)）**。对于游戏开发领域来说，面向数据编程是个很重要的思路。天然亲和数据驱动的开发模式，有助于实现以编辑器为核心的工作流程。\n- **性能更好优化**。接上条，相比 OOP 来说，DOP 有更大的性能优化空间。\n\n## Unity 中的 Entity–component 模式\n\n经过上次用 Unity 制作打箱子的案例，大家应该知道了 Unity 的 Entity–component 模式是怎么回事。（在 Unity3D 中，Entity 叫 GameObject）。\n\n其优点：\n\n- 组件复用。体现了 ECS 的基本思想之一，Entity 由 Component 组成，而不是具体逻辑对象。设计得好的 Component 是可以高度复用的。\n- 数据驱动。场景创建、游戏实体创建，主要源于数据而不是硬编码。以此为基础，引擎实现了以编辑器为中心的开发模式。\n- 编辑器为中心。用户可在编辑器中可视化地编辑和配置 Entity 和 Component 的关系，修改属性和配置数据。在有成熟 Component 集合的情况下，新的关卡和玩法的开发，都可以完全不需要改动代码，由策划通过编辑器实现。\n\n看起来，Unity 已经在很大程度上解决了游戏设计领域通用模式的问题。然而，其 Entity–component 模式仍然存在一些问题：Component 仍然延续了一些 OOP 的思路。比如：\n\n- Component 是数据和行为的封装。虽然此概念容易导致的问题可以通过其它方式避免，但以不加思考照着最自然的方式去做，往往会造成 Component 后期的膨胀。比如 Component 需要支持不同的行为就定义了不同的函数和相关变量；Component 之间有互相依赖的话逻辑该写在哪个 Component 中；多个 Component 逻辑上互相依赖之后，就难以实现单个 Component 级别的复用，最后的引用链有可能都涉及了代码库中大部分 Component 等等。\n- Component 是支持多态的引用语义。这意味着单个 Component 需要单独在堆上分配，难以实现对同类型多个 Component 进行数据局部性友好的存储方式。这样的存储方式好处在于，批量处理可以减少 cache miss 和内存换页的情况。\n\n因此可以说 Unity 中 Entity–component 模式并为脱离 OO 思想。"},{"title":"关于编译型语言代码优化的一点迷思","url":"/2018/08/01/关于编译型语言代码优化的一点迷思/","content":"\n最近经常看见一些人分享自己撸码的经验，比如曾经习惯把 if 语句改成三目运算符，以减少代码行数。现在习惯把相同的 if 判断合并在一起，以减少 if 判断的次数，提高效率。\n\n多年以前笔者也是这样想的，但是随着年龄的增长，窃以为在编译型语言中，这样做的意义并不大，而且有时甚至可能会降低代码可读性。\n\n## 例子\n\n有如下两份代码：\n\n```cpp\n#include <array>\n#include <iostream>\n\nint main()\n{\n    std::array<int, 122> array{ 2700, 2314, 8429, 7726, 4817, 8716, 3598, 6255, 5056, 8653, 8571, 5028, 1259, 3315,\n                                2896, 1411, 3847, 879,  7353, 8056, 8765, 2344, 6349, 4156, 8350, 4164, 4783, 6800,\n                                8887, 267,  4478, 6327, 58,   7961, 756,  5654, 9546, 5132, 247,  5514, 7098, 1156,\n                                795,  2502, 367,  5330, 2261, 8692, 2460, 4823, 8968, 4976, 1929, 1051, 9249, 9713,\n                                2803, 1743, 3681, 93,   4967, 2245, 198,  896,  6372, 4413, 2615, 6130, 5766, 5306,\n                                1236, 888,  8050, 7080, 3460, 3473, 1720, 3913, 3449, 8420, 1814, 1261, 1368, 167,\n                                7938, 4483, 4843, 4682, 3301, 4038, 709,  8655, 598,  3857, 6285, 2961, 6817, 1031,\n                                4007, 1392, 5717, 5837, 5695, 9511, 8891, 7883, 7035, 2349, 5752, 3139, 2442, 3966,\n                                2007, 9205, 8434, 5065, 3795, 6890, 2715, 1,    5106, 5083 };\n\n    auto x = 5330;\n\n    for (const auto &element : array)\n    {\n        if (element> 1000)\n        {\n            std::cout << \"\";\n        }\n    }\n\n    for (const auto &element : array)\n    {\n        if (element> 1000)\n        {\n            if (element == x)\n            {\n                std::cout << \"hello, world\" << std::endl;\n            }\n        }\n    }\n\n    return 0;\n}\n```\n\n```cpp\n#include <array>\n#include <iostream>\n\nint main()\n{\n    std::array<int, 122> array{ 2700, 2314, 8429, 7726, 4817, 8716, 3598, 6255, 5056, 8653, 8571, 5028, 1259, 3315,\n                                2896, 1411, 3847, 879,  7353, 8056, 8765, 2344, 6349, 4156, 8350, 4164, 4783, 6800,\n                                8887, 267,  4478, 6327, 58,   7961, 756,  5654, 9546, 5132, 247,  5514, 7098, 1156,\n                                795,  2502, 367,  5330, 2261, 8692, 2460, 4823, 8968, 4976, 1929, 1051, 9249, 9713,\n                                2803, 1743, 3681, 93,   4967, 2245, 198,  896,  6372, 4413, 2615, 6130, 5766, 5306,\n                                1236, 888,  8050, 7080, 3460, 3473, 1720, 3913, 3449, 8420, 1814, 1261, 1368, 167,\n                                7938, 4483, 4843, 4682, 3301, 4038, 709,  8655, 598,  3857, 6285, 2961, 6817, 1031,\n                                4007, 1392, 5717, 5837, 5695, 9511, 8891, 7883, 7035, 2349, 5752, 3139, 2442, 3966,\n                                2007, 9205, 8434, 5065, 3795, 6890, 2715, 1,    5106, 5083 };\n\n    auto x = 5330;\n\n    for (const auto &element : array)\n    {\n        if (element> 1000)\n        {\n            std::cout << \"\";\n            if (element == x)\n            {\n                std::cout << \"hello, world\" << std::endl;\n            }\n        }\n    }\n\n    return 0;\n}\n```\n\n从代码角度看第二份代码应该优于第一份代码。\n\n使用 LLVM 生成两份代码的对应汇编如下：\n\n```assembly\n\t.section\t__TEXT,__text,regular,pure_instructions\n\t.macosx_version_min 10, 13\n\t.globl\t_main                   ## -- Begin function main\n\t.p2align\t4, 0x90\n_main:                                  ## @main\n\t.cfi_startproc\n## BB#0:\n\tpushq\t%rbp\nLcfi0:\n\t.cfi_def_cfa_offset 16\nLcfi1:\n\t.cfi_offset %rbp, -16\n\tmovq\t%rsp, %rbp\nLcfi2:\n\t.cfi_def_cfa_register %rbp\n\tsubq\t$640, %rsp              ## imm = 0x280\n\tleaq\t-544(%rbp), %rax\n\tleaq\tl__ZZ4mainE5array(%rip), %rcx\n\tmovl\t$488, %edx              ## imm = 0x1E8\n                                        ## kill: %RDX<def> %EDX<kill>\n\tmovl\t$0, -52(%rbp)\n\tmovq\t%rax, %rsi\n\tmovq\t%rsi, %rdi\n\tmovq\t%rcx, %rsi\n\tmovq\t%rax, -624(%rbp)        ## 8-byte Spill\n\tcallq\t_memcpy\n\tmovl\t$5330, -548(%rbp)       ## imm = 0x14D2\n\tmovq\t-624(%rbp), %rax        ## 8-byte Reload\n\tmovq\t%rax, -560(%rbp)\n\tmovq\t-560(%rbp), %rcx\n\tmovq\t%rcx, -48(%rbp)\n\tmovq\t-48(%rbp), %rcx\n\tmovq\t%rcx, -568(%rbp)\n\tmovq\t-560(%rbp), %rcx\n\tmovq\t%rcx, -24(%rbp)\n\tmovq\t-24(%rbp), %rcx\n\taddq\t$488, %rcx              ## imm = 0x1E8\n\tmovq\t%rcx, -576(%rbp)\nLBB0_1:                                 ## =>This Inner Loop Header: Depth=1\n\tmovq\t-568(%rbp), %rax\n\tcmpq\t-576(%rbp), %rax\n\tje\tLBB0_6\n## BB#2:                                ##   in Loop: Header=BB0_1 Depth=1\n\tmovq\t-568(%rbp), %rax\n\tmovq\t%rax, -584(%rbp)\n\tmovq\t-584(%rbp), %rax\n\tcmpl\t$1000, (%rax)           ## imm = 0x3E8\n\tjle\tLBB0_4\n## BB#3:                                ##   in Loop: Header=BB0_1 Depth=1\n\tmovq\t__ZNSt3__14coutE@GOTPCREL(%rip), %rdi\n\tleaq\tL_.str(%rip), %rsi\n\tcallq\t__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc\n\tmovq\t%rax, -632(%rbp)        ## 8-byte Spill\nLBB0_4:                                 ##   in Loop: Header=BB0_1 Depth=1\n\tjmp\tLBB0_5\nLBB0_5:                                 ##   in Loop: Header=BB0_1 Depth=1\n\tmovq\t-568(%rbp), %rax\n\taddq\t$4, %rax\n\tmovq\t%rax, -568(%rbp)\n\tjmp\tLBB0_1\nLBB0_6:\n\tleaq\t-544(%rbp), %rax\n\tmovq\t%rax, -592(%rbp)\n\tmovq\t-592(%rbp), %rax\n\tmovq\t%rax, -16(%rbp)\n\tmovq\t-16(%rbp), %rax\n\tmovq\t%rax, -600(%rbp)\n\tmovq\t-592(%rbp), %rax\n\tmovq\t%rax, -8(%rbp)\n\tmovq\t-8(%rbp), %rax\n\taddq\t$488, %rax              ## imm = 0x1E8\n\tmovq\t%rax, -608(%rbp)\nLBB0_7:                                 ## =>This Inner Loop Header: Depth=1\n\tmovq\t-600(%rbp), %rax\n\tcmpq\t-608(%rbp), %rax\n\tje\tLBB0_14\n## BB#8:                                ##   in Loop: Header=BB0_7 Depth=1\n\tmovq\t-600(%rbp), %rax\n\tmovq\t%rax, -616(%rbp)\n\tmovq\t-616(%rbp), %rax\n\tcmpl\t$1000, (%rax)           ## imm = 0x3E8\n\tjle\tLBB0_12\n## BB#9:                                ##   in Loop: Header=BB0_7 Depth=1\n\tmovq\t-616(%rbp), %rax\n\tmovl\t(%rax), %ecx\n\tcmpl\t-548(%rbp), %ecx\n\tjne\tLBB0_11\n## BB#10:                               ##   in Loop: Header=BB0_7 Depth=1\n\tmovq\t__ZNSt3__14coutE@GOTPCREL(%rip), %rdi\n\tleaq\tL_.str.1(%rip), %rsi\n\tcallq\t__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc\n\tleaq\t__ZNSt3__14endlIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_(%rip), %rsi\n\tmovq\t%rax, -32(%rbp)\n\tmovq\t%rsi, -40(%rbp)\n\tmovq\t-32(%rbp), %rdi\n\tcallq\t*-40(%rbp)\n\tmovq\t%rax, -640(%rbp)        ## 8-byte Spill\nLBB0_11:                                ##   in Loop: Header=BB0_7 Depth=1\n\tjmp\tLBB0_12\nLBB0_12:                                ##   in Loop: Header=BB0_7 Depth=1\n\tjmp\tLBB0_13\nLBB0_13:                                ##   in Loop: Header=BB0_7 Depth=1\n\tmovq\t-600(%rbp), %rax\n\taddq\t$4, %rax\n\tmovq\t%rax, -600(%rbp)\n\tjmp\tLBB0_7\nLBB0_14:\n\txorl\t%eax, %eax\n\taddq\t$640, %rsp              ## imm = 0x280\n\tpopq\t%rbp\n\tretq\n\t.cfi_endproc\n                                        ## -- End function\n\t.globl\t__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc ## -- Begin function _ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc\n\t.weak_definition\t__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc\n\t.p2align\t4, 0x90\n__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc: ## @_ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc\n\t.cfi_startproc\n## BB#0:\n\tpushq\t%rbp\nLcfi3:\n\t.cfi_def_cfa_offset 16\nLcfi4:\n\t.cfi_offset %rbp, -16\n\tmovq\t%rsp, %rbp\nLcfi5:\n\t.cfi_def_cfa_register %rbp\n\tsubq\t$32, %rsp\n\tmovq\t%rdi, -8(%rbp)\n\tmovq\t%rsi, -16(%rbp)\n\tmovq\t-8(%rbp), %rdi\n\tmovq\t-16(%rbp), %rsi\n\tmovq\t-16(%rbp), %rax\n\tmovq\t%rdi, -24(%rbp)         ## 8-byte Spill\n\tmovq\t%rax, %rdi\n\tmovq\t%rsi, -32(%rbp)         ## 8-byte Spill\n\tcallq\t__ZNSt3__111char_traitsIcE6lengthEPKc\n\tmovq\t-24(%rbp), %rdi         ## 8-byte Reload\n\tmovq\t-32(%rbp), %rsi         ## 8-byte Reload\n\tmovq\t%rax, %rdx\n\tcallq\t__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m\n\taddq\t$32, %rsp\n\tpopq\t%rbp\n\tretq\n\t.cfi_endproc\n                                        ## -- End function\n\t.private_extern\t__ZNSt3__14endlIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_ ## -- Begin function _ZNSt3__14endlIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_\n\t.globl\t__ZNSt3__14endlIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_\n\t.weak_definition\t__ZNSt3__14endlIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_\n\t.p2align\t4, 0x90\n__ZNSt3__14endlIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_: ## @_ZNSt3__14endlIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_\nLfunc_begin0:\n\t.cfi_startproc\n\t.cfi_personality 155, ___gxx_personality_v0\n\t.cfi_lsda 16, Lexception0\n## BB#0:\n\tpushq\t%rbp\nLcfi6:\n\t.cfi_def_cfa_offset 16\nLcfi7:\n\t.cfi_offset %rbp, -16\n\tmovq\t%rsp, %rbp\nLcfi8:\n\t.cfi_def_cfa_register %rbp\n\tsubq\t$144, %rsp\n\tmovq\t%rdi, -72(%rbp)\n\tmovq\t-72(%rbp), %rdi\n\tmovq\t(%rdi), %rax\n\tmovq\t-24(%rax), %rax\n\tmovq\t%rdi, %rcx\n\taddq\t%rax, %rcx\n\tmovq\t%rcx, -32(%rbp)\n\tmovb\t$10, -33(%rbp)\n\tmovq\t-32(%rbp), %rsi\n\tleaq\t-48(%rbp), %rax\n\tmovq\t%rdi, -80(%rbp)         ## 8-byte Spill\n\tmovq\t%rax, %rdi\n\tmovq\t%rax, -88(%rbp)         ## 8-byte Spill\n\tcallq\t__ZNKSt3__18ios_base6getlocEv\n\tmovq\t-88(%rbp), %rax         ## 8-byte Reload\n\tmovq\t%rax, -24(%rbp)\n\tmovq\t-24(%rbp), %rdi\nLtmp0:\n\tmovq\t__ZNSt3__15ctypeIcE2idE@GOTPCREL(%rip), %rsi\n\tcallq\t__ZNKSt3__16locale9use_facetERNS0_2idE\nLtmp1:\n\tmovq\t%rax, -96(%rbp)         ## 8-byte Spill\n\tjmp\tLBB2_1\nLBB2_1:\n\tmovb\t-33(%rbp), %al\n\tmovq\t-96(%rbp), %rcx         ## 8-byte Reload\n\tmovq\t%rcx, -8(%rbp)\n\tmovb\t%al, -9(%rbp)\n\tmovq\t-8(%rbp), %rdx\n\tmovq\t(%rdx), %rsi\n\tmovq\t56(%rsi), %rsi\n\tmovsbl\t-9(%rbp), %edi\nLtmp2:\n\tmovl\t%edi, -100(%rbp)        ## 4-byte Spill\n\tmovq\t%rdx, %rdi\n\tmovl\t-100(%rbp), %r8d        ## 4-byte Reload\n\tmovq\t%rsi, -112(%rbp)        ## 8-byte Spill\n\tmovl\t%r8d, %esi\n\tmovq\t-112(%rbp), %rdx        ## 8-byte Reload\n\tcallq\t*%rdx\nLtmp3:\n\tmovb\t%al, -113(%rbp)         ## 1-byte Spill\n\tjmp\tLBB2_3\nLBB2_2:\nLtmp4:\n\tleaq\t-48(%rbp), %rdi\n\tmovl\t%edx, %ecx\n\tmovq\t%rax, -56(%rbp)\n\tmovl\t%ecx, -60(%rbp)\n\tcallq\t__ZNSt3__16localeD1Ev\n\tmovq\t-56(%rbp), %rdi\n\tcallq\t__Unwind_Resume\nLBB2_3:\n\tleaq\t-48(%rbp), %rdi\n\tcallq\t__ZNSt3__16localeD1Ev\n\tmovq\t-80(%rbp), %rdi         ## 8-byte Reload\n\tmovb\t-113(%rbp), %al         ## 1-byte Reload\n\tmovsbl\t%al, %esi\n\tcallq\t__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc\n\tmovq\t-72(%rbp), %rdi\n\tmovq\t%rax, -128(%rbp)        ## 8-byte Spill\n\tcallq\t__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv\n\tmovq\t-72(%rbp), %rdi\n\tmovq\t%rax, -136(%rbp)        ## 8-byte Spill\n\tmovq\t%rdi, %rax\n\taddq\t$144, %rsp\n\tpopq\t%rbp\n\tretq\nLfunc_end0:\n\t.cfi_endproc\n\t.section\t__TEXT,__gcc_except_tab\n\t.p2align\t2\nGCC_except_table2:\nLexception0:\n\t.byte\t255                     ## @LPStart Encoding = omit\n\t.byte\t155                     ## @TType Encoding = indirect pcrel sdata4\n\t.byte\t41                      ## @TType base offset\n\t.byte\t3                       ## Call site Encoding = udata4\n\t.byte\t39                      ## Call site table length\nLset0 = Lfunc_begin0-Lfunc_begin0       ## >> Call Site 1 <<\n\t.long\tLset0\nLset1 = Ltmp0-Lfunc_begin0              ##   Call between Lfunc_begin0 and Ltmp0\n\t.long\tLset1\n\t.long\t0                       ##     has no landing pad\n\t.byte\t0                       ##   On action: cleanup\nLset2 = Ltmp0-Lfunc_begin0              ## >> Call Site 2 <<\n\t.long\tLset2\nLset3 = Ltmp3-Ltmp0                     ##   Call between Ltmp0 and Ltmp3\n\t.long\tLset3\nLset4 = Ltmp4-Lfunc_begin0              ##     jumps to Ltmp4\n\t.long\tLset4\n\t.byte\t0                       ##   On action: cleanup\nLset5 = Ltmp3-Lfunc_begin0              ## >> Call Site 3 <<\n\t.long\tLset5\nLset6 = Lfunc_end0-Ltmp3                ##   Call between Ltmp3 and Lfunc_end0\n\t.long\tLset6\n\t.long\t0                       ##     has no landing pad\n\t.byte\t0                       ##   On action: cleanup\n\t.p2align\t2\n                                        ## -- End function\n\t.section\t__TEXT,__text,regular,pure_instructions\n\t.globl\t__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## -- Begin function _ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m\n\t.weak_definition\t__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m\n\t.p2align\t4, 0x90\n__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m: ## @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m\nLfunc_begin1:\n\t.cfi_startproc\n\t.cfi_personality 155, ___gxx_personality_v0\n\t.cfi_lsda 16, Lexception1\n## BB#0:\n\tpushq\t%rbp\nLcfi9:\n\t.cfi_def_cfa_offset 16\nLcfi10:\n\t.cfi_offset %rbp, -16\n\tmovq\t%rsp, %rbp\nLcfi11:\n\t.cfi_def_cfa_register %rbp\n\tsubq\t$384, %rsp              ## imm = 0x180\n\tmovq\t%rdi, -184(%rbp)\n\tmovq\t%rsi, -192(%rbp)\n\tmovq\t%rdx, -200(%rbp)\n\tmovq\t-184(%rbp), %rsi\nLtmp5:\n\tleaq\t-216(%rbp), %rdi\n\tcallq\t__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_\nLtmp6:\n\tjmp\tLBB3_1\nLBB3_1:\n\tleaq\t-216(%rbp), %rax\n\tmovq\t%rax, -176(%rbp)\n\tmovq\t-176(%rbp), %rax\n\tmovb\t(%rax), %cl\n\tmovb\t%cl, -249(%rbp)         ## 1-byte Spill\n## BB#2:\n\tmovb\t-249(%rbp), %al         ## 1-byte Reload\n\ttestb\t$1, %al\n\tjne\tLBB3_3\n\tjmp\tLBB3_26\nLBB3_3:\n\tleaq\t-248(%rbp), %rax\n\tmovq\t-184(%rbp), %rcx\n\tmovq\t%rax, -160(%rbp)\n\tmovq\t%rcx, -168(%rbp)\n\tmovq\t-160(%rbp), %rax\n\tmovq\t-168(%rbp), %rcx\n\tmovq\t%rax, -144(%rbp)\n\tmovq\t%rcx, -152(%rbp)\n\tmovq\t-144(%rbp), %rax\n\tmovq\t-152(%rbp), %rcx\n\tmovq\t(%rcx), %rdx\n\tmovq\t-24(%rdx), %rdx\n\taddq\t%rdx, %rcx\n\tmovq\t%rcx, -136(%rbp)\n\tmovq\t-136(%rbp), %rcx\n\tmovq\t%rcx, -128(%rbp)\n\tmovq\t-128(%rbp), %rcx\n\tmovq\t40(%rcx), %rcx\n\tmovq\t%rcx, (%rax)\n\tmovq\t-192(%rbp), %rsi\n\tmovq\t-184(%rbp), %rax\n\tmovq\t(%rax), %rcx\n\tmovq\t-24(%rcx), %rcx\n\taddq\t%rcx, %rax\n\tmovq\t%rax, -88(%rbp)\n\tmovq\t-88(%rbp), %rax\n\tmovl\t8(%rax), %edi\n\tmovq\t%rsi, -264(%rbp)        ## 8-byte Spill\n\tmovl\t%edi, -268(%rbp)        ## 4-byte Spill\n## BB#4:\n\tmovl\t-268(%rbp), %eax        ## 4-byte Reload\n\tandl\t$176, %eax\n\tcmpl\t$32, %eax\n\tjne\tLBB3_6\n## BB#5:\n\tmovq\t-192(%rbp), %rax\n\taddq\t-200(%rbp), %rax\n\tmovq\t%rax, -280(%rbp)        ## 8-byte Spill\n\tjmp\tLBB3_7\nLBB3_6:\n\tmovq\t-192(%rbp), %rax\n\tmovq\t%rax, -280(%rbp)        ## 8-byte Spill\nLBB3_7:\n\tmovq\t-280(%rbp), %rax        ## 8-byte Reload\n\tmovq\t-192(%rbp), %rcx\n\taddq\t-200(%rbp), %rcx\n\tmovq\t-184(%rbp), %rdx\n\tmovq\t(%rdx), %rsi\n\tmovq\t-24(%rsi), %rsi\n\taddq\t%rsi, %rdx\n\tmovq\t-184(%rbp), %rsi\n\tmovq\t(%rsi), %rdi\n\tmovq\t-24(%rdi), %rdi\n\taddq\t%rdi, %rsi\n\tmovq\t%rsi, -72(%rbp)\n\tmovq\t-72(%rbp), %rsi\n\tmovq\t%rax, -288(%rbp)        ## 8-byte Spill\n\tmovq\t%rcx, -296(%rbp)        ## 8-byte Spill\n\tmovq\t%rdx, -304(%rbp)        ## 8-byte Spill\n\tmovq\t%rsi, -312(%rbp)        ## 8-byte Spill\n\tcallq\t__ZNSt3__111char_traitsIcE3eofEv\n\tmovq\t-312(%rbp), %rcx        ## 8-byte Reload\n\tmovl\t144(%rcx), %esi\n\tmovl\t%eax, %edi\n\tcallq\t__ZNSt3__111char_traitsIcE11eq_int_typeEii\n\ttestb\t$1, %al\n\tjne\tLBB3_8\n\tjmp\tLBB3_13\nLBB3_8:\n\tmovq\t-312(%rbp), %rax        ## 8-byte Reload\n\tmovq\t%rax, -32(%rbp)\n\tmovb\t$32, -33(%rbp)\n\tmovq\t-32(%rbp), %rsi\nLtmp8:\n\tleaq\t-48(%rbp), %rdi\n\tcallq\t__ZNKSt3__18ios_base6getlocEv\nLtmp9:\n\tjmp\tLBB3_9\nLBB3_9:\n\tleaq\t-48(%rbp), %rax\n\tmovq\t%rax, -24(%rbp)\n\tmovq\t-24(%rbp), %rdi\nLtmp10:\n\tmovq\t__ZNSt3__15ctypeIcE2idE@GOTPCREL(%rip), %rsi\n\tcallq\t__ZNKSt3__16locale9use_facetERNS0_2idE\nLtmp11:\n\tmovq\t%rax, -320(%rbp)        ## 8-byte Spill\n\tjmp\tLBB3_10\nLBB3_10:\n\tmovb\t-33(%rbp), %al\n\tmovq\t-320(%rbp), %rcx        ## 8-byte Reload\n\tmovq\t%rcx, -8(%rbp)\n\tmovb\t%al, -9(%rbp)\n\tmovq\t-8(%rbp), %rdx\n\tmovq\t(%rdx), %rsi\n\tmovq\t56(%rsi), %rsi\n\tmovsbl\t-9(%rbp), %edi\nLtmp12:\n\tmovl\t%edi, -324(%rbp)        ## 4-byte Spill\n\tmovq\t%rdx, %rdi\n\tmovl\t-324(%rbp), %r8d        ## 4-byte Reload\n\tmovq\t%rsi, -336(%rbp)        ## 8-byte Spill\n\tmovl\t%r8d, %esi\n\tmovq\t-336(%rbp), %rdx        ## 8-byte Reload\n\tcallq\t*%rdx\nLtmp13:\n\tmovb\t%al, -337(%rbp)         ## 1-byte Spill\n\tjmp\tLBB3_12\nLBB3_11:\nLtmp14:\n\tmovl\t%edx, %ecx\n\tmovq\t%rax, -56(%rbp)\n\tmovl\t%ecx, -60(%rbp)\n\tleaq\t-48(%rbp), %rdi\n\tcallq\t__ZNSt3__16localeD1Ev\n\tmovq\t-56(%rbp), %rax\n\tmovl\t-60(%rbp), %ecx\n\tmovq\t%rax, -352(%rbp)        ## 8-byte Spill\n\tmovl\t%ecx, -356(%rbp)        ## 4-byte Spill\n\tjmp\tLBB3_21\nLBB3_12:\n\tleaq\t-48(%rbp), %rdi\n\tcallq\t__ZNSt3__16localeD1Ev\n\tmovb\t-337(%rbp), %al         ## 1-byte Reload\n\tmovsbl\t%al, %ecx\n\tmovq\t-312(%rbp), %rdi        ## 8-byte Reload\n\tmovl\t%ecx, 144(%rdi)\nLBB3_13:\n\tmovq\t-312(%rbp), %rax        ## 8-byte Reload\n\tmovl\t144(%rax), %ecx\n\tmovb\t%cl, %dl\n\tmovb\t%dl, -357(%rbp)         ## 1-byte Spill\n## BB#14:\n\tmovq\t-248(%rbp), %rdi\nLtmp15:\n\tmovb\t-357(%rbp), %al         ## 1-byte Reload\n\tmovsbl\t%al, %r9d\n\tmovq\t-264(%rbp), %rsi        ## 8-byte Reload\n\tmovq\t-288(%rbp), %rdx        ## 8-byte Reload\n\tmovq\t-296(%rbp), %rcx        ## 8-byte Reload\n\tmovq\t-304(%rbp), %r8         ## 8-byte Reload\n\tcallq\t__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_\nLtmp16:\n\tmovq\t%rax, -368(%rbp)        ## 8-byte Spill\n\tjmp\tLBB3_15\nLBB3_15:\n\tleaq\t-240(%rbp), %rax\n\tmovq\t-368(%rbp), %rcx        ## 8-byte Reload\n\tmovq\t%rcx, -240(%rbp)\n\tmovq\t%rax, -80(%rbp)\n\tmovq\t-80(%rbp), %rax\n\tcmpq\t$0, (%rax)\n\tjne\tLBB3_25\n## BB#16:\n\tmovq\t-184(%rbp), %rax\n\tmovq\t(%rax), %rcx\n\tmovq\t-24(%rcx), %rcx\n\taddq\t%rcx, %rax\n\tmovq\t%rax, -112(%rbp)\n\tmovl\t$5, -116(%rbp)\n\tmovq\t-112(%rbp), %rax\n\tmovl\t-116(%rbp), %edx\n\tmovq\t%rax, -96(%rbp)\n\tmovl\t%edx, -100(%rbp)\n\tmovq\t-96(%rbp), %rax\n\tmovl\t32(%rax), %edx\n\tmovl\t-100(%rbp), %esi\n\torl\t%esi, %edx\nLtmp17:\n\tmovq\t%rax, %rdi\n\tmovl\t%edx, %esi\n\tcallq\t__ZNSt3__18ios_base5clearEj\nLtmp18:\n\tjmp\tLBB3_17\nLBB3_17:\n\tjmp\tLBB3_18\nLBB3_18:\n\tjmp\tLBB3_25\nLBB3_19:\nLtmp7:\n\tmovl\t%edx, %ecx\n\tmovq\t%rax, -224(%rbp)\n\tmovl\t%ecx, -228(%rbp)\n\tjmp\tLBB3_22\nLBB3_20:\nLtmp19:\n\tmovl\t%edx, %ecx\n\tmovq\t%rax, -352(%rbp)        ## 8-byte Spill\n\tmovl\t%ecx, -356(%rbp)        ## 4-byte Spill\n\tjmp\tLBB3_21\nLBB3_21:\n\tmovl\t-356(%rbp), %eax        ## 4-byte Reload\n\tmovq\t-352(%rbp), %rcx        ## 8-byte Reload\n\tleaq\t-216(%rbp), %rdi\n\tmovq\t%rcx, -224(%rbp)\n\tmovl\t%eax, -228(%rbp)\n\tcallq\t__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev\nLBB3_22:\n\tmovq\t-224(%rbp), %rdi\n\tcallq\t___cxa_begin_catch\n\tmovq\t-184(%rbp), %rdi\n\tmovq\t(%rdi), %rcx\n\tmovq\t-24(%rcx), %rcx\n\taddq\t%rcx, %rdi\nLtmp20:\n\tmovq\t%rax, -376(%rbp)        ## 8-byte Spill\n\tcallq\t__ZNSt3__18ios_base33__set_badbit_and_consider_rethrowEv\nLtmp21:\n\tjmp\tLBB3_23\nLBB3_23:\n\tcallq\t___cxa_end_catch\nLBB3_24:\n\tmovq\t-184(%rbp), %rax\n\taddq\t$384, %rsp              ## imm = 0x180\n\tpopq\t%rbp\n\tretq\nLBB3_25:\n\tjmp\tLBB3_26\nLBB3_26:\n\tleaq\t-216(%rbp), %rdi\n\tcallq\t__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev\n\tjmp\tLBB3_24\nLBB3_27:\nLtmp22:\n\tmovl\t%edx, %ecx\n\tmovq\t%rax, -224(%rbp)\n\tmovl\t%ecx, -228(%rbp)\nLtmp23:\n\tcallq\t___cxa_end_catch\nLtmp24:\n\tjmp\tLBB3_28\nLBB3_28:\n\tjmp\tLBB3_29\nLBB3_29:\n\tmovq\t-224(%rbp), %rdi\n\tcallq\t__Unwind_Resume\nLBB3_30:\nLtmp25:\n\tmovl\t%edx, %ecx\n\tmovq\t%rax, %rdi\n\tmovl\t%ecx, -380(%rbp)        ## 4-byte Spill\n\tcallq\t___clang_call_terminate\nLfunc_end1:\n\t.cfi_endproc\n\t.section\t__TEXT,__gcc_except_tab\n\t.p2align\t2\nGCC_except_table3:\nLexception1:\n\t.byte\t255                     ## @LPStart Encoding = omit\n\t.byte\t155                     ## @TType Encoding = indirect pcrel sdata4\n\t.asciz\t\"\\201\\201\\200\\200\"      ## @TType base offset\n\t.byte\t3                       ## Call site Encoding = udata4\n\t.byte\t117                     ## Call site table length\nLset7 = Ltmp5-Lfunc_begin1              ## >> Call Site 1 <<\n\t.long\tLset7\nLset8 = Ltmp6-Ltmp5                     ##   Call between Ltmp5 and Ltmp6\n\t.long\tLset8\nLset9 = Ltmp7-Lfunc_begin1              ##     jumps to Ltmp7\n\t.long\tLset9\n\t.byte\t5                       ##   On action: 3\nLset10 = Ltmp8-Lfunc_begin1             ## >> Call Site 2 <<\n\t.long\tLset10\nLset11 = Ltmp9-Ltmp8                    ##   Call between Ltmp8 and Ltmp9\n\t.long\tLset11\nLset12 = Ltmp19-Lfunc_begin1            ##     jumps to Ltmp19\n\t.long\tLset12\n\t.byte\t5                       ##   On action: 3\nLset13 = Ltmp10-Lfunc_begin1            ## >> Call Site 3 <<\n\t.long\tLset13\nLset14 = Ltmp13-Ltmp10                  ##   Call between Ltmp10 and Ltmp13\n\t.long\tLset14\nLset15 = Ltmp14-Lfunc_begin1            ##     jumps to Ltmp14\n\t.long\tLset15\n\t.byte\t3                       ##   On action: 2\nLset16 = Ltmp15-Lfunc_begin1            ## >> Call Site 4 <<\n\t.long\tLset16\nLset17 = Ltmp18-Ltmp15                  ##   Call between Ltmp15 and Ltmp18\n\t.long\tLset17\nLset18 = Ltmp19-Lfunc_begin1            ##     jumps to Ltmp19\n\t.long\tLset18\n\t.byte\t5                       ##   On action: 3\nLset19 = Ltmp18-Lfunc_begin1            ## >> Call Site 5 <<\n\t.long\tLset19\nLset20 = Ltmp20-Ltmp18                  ##   Call between Ltmp18 and Ltmp20\n\t.long\tLset20\n\t.long\t0                       ##     has no landing pad\n\t.byte\t0                       ##   On action: cleanup\nLset21 = Ltmp20-Lfunc_begin1            ## >> Call Site 6 <<\n\t.long\tLset21\nLset22 = Ltmp21-Ltmp20                  ##   Call between Ltmp20 and Ltmp21\n\t.long\tLset22\nLset23 = Ltmp22-Lfunc_begin1            ##     jumps to Ltmp22\n\t.long\tLset23\n\t.byte\t0                       ##   On action: cleanup\nLset24 = Ltmp21-Lfunc_begin1            ## >> Call Site 7 <<\n\t.long\tLset24\nLset25 = Ltmp23-Ltmp21                  ##   Call between Ltmp21 and Ltmp23\n\t.long\tLset25\n\t.long\t0                       ##     has no landing pad\n\t.byte\t0                       ##   On action: cleanup\nLset26 = Ltmp23-Lfunc_begin1            ## >> Call Site 8 <<\n\t.long\tLset26\nLset27 = Ltmp24-Ltmp23                  ##   Call between Ltmp23 and Ltmp24\n\t.long\tLset27\nLset28 = Ltmp25-Lfunc_begin1            ##     jumps to Ltmp25\n\t.long\tLset28\n\t.byte\t5                       ##   On action: 3\nLset29 = Ltmp24-Lfunc_begin1            ## >> Call Site 9 <<\n\t.long\tLset29\nLset30 = Lfunc_end1-Ltmp24              ##   Call between Ltmp24 and Lfunc_end1\n\t.long\tLset30\n\t.long\t0                       ##     has no landing pad\n\t.byte\t0                       ##   On action: cleanup\n\t.byte\t0                       ## >> Action Record 1 <<\n                                        ##   Cleanup\n\t.byte\t0                       ##   No further actions\n\t.byte\t1                       ## >> Action Record 2 <<\n                                        ##   Catch TypeInfo 1\n\t.byte\t125                     ##   Continue to action 1\n\t.byte\t1                       ## >> Action Record 3 <<\n                                        ##   Catch TypeInfo 1\n\t.byte\t0                       ##   No further actions\n                                        ## >> Catch TypeInfos <<\n\t.long\t0                       ## TypeInfo 1\n\t.p2align\t2\n                                        ## -- End function\n\t.section\t__TEXT,__text,regular,pure_instructions\n\t.globl\t__ZNSt3__111char_traitsIcE6lengthEPKc ## -- Begin function _ZNSt3__111char_traitsIcE6lengthEPKc\n\t.weak_definition\t__ZNSt3__111char_traitsIcE6lengthEPKc\n\t.p2align\t4, 0x90\n__ZNSt3__111char_traitsIcE6lengthEPKc:  ## @_ZNSt3__111char_traitsIcE6lengthEPKc\n\t.cfi_startproc\n## BB#0:\n\tpushq\t%rbp\nLcfi12:\n\t.cfi_def_cfa_offset 16\nLcfi13:\n\t.cfi_offset %rbp, -16\n\tmovq\t%rsp, %rbp\nLcfi14:\n\t.cfi_def_cfa_register %rbp\n\tsubq\t$16, %rsp\n\tmovq\t%rdi, -8(%rbp)\n\tmovq\t-8(%rbp), %rdi\n\tcallq\t_strlen\n\taddq\t$16, %rsp\n\tpopq\t%rbp\n\tretq\n\t.cfi_endproc\n                                        ## -- End function\n\t.private_extern\t__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ ## -- Begin function _ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_\n\t.globl\t__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_\n\t.weak_definition\t__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_\n\t.p2align\t4, 0x90\n__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_: ## @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_\nLfunc_begin2:\n\t.cfi_startproc\n\t.cfi_personality 155, ___gxx_personality_v0\n\t.cfi_lsda 16, Lexception2\n## BB#0:\n\tpushq\t%rbp\nLcfi15:\n\t.cfi_def_cfa_offset 16\nLcfi16:\n\t.cfi_offset %rbp, -16\n\tmovq\t%rsp, %rbp\nLcfi17:\n\t.cfi_def_cfa_register %rbp\n\tsubq\t$480, %rsp              ## imm = 0x1E0\n\tmovb\t%r9b, %al\n\tmovq\t%rdi, -320(%rbp)\n\tmovq\t%rsi, -328(%rbp)\n\tmovq\t%rdx, -336(%rbp)\n\tmovq\t%rcx, -344(%rbp)\n\tmovq\t%r8, -352(%rbp)\n\tmovb\t%al, -353(%rbp)\n\tcmpq\t$0, -320(%rbp)\n\tjne\tLBB5_2\n## BB#1:\n\tmovq\t-320(%rbp), %rax\n\tmovq\t%rax, -312(%rbp)\n\tjmp\tLBB5_26\nLBB5_2:\n\tmovq\t-344(%rbp), %rax\n\tmovq\t-328(%rbp), %rcx\n\tsubq\t%rcx, %rax\n\tmovq\t%rax, -368(%rbp)\n\tmovq\t-352(%rbp), %rax\n\tmovq\t%rax, -304(%rbp)\n\tmovq\t-304(%rbp), %rax\n\tmovq\t24(%rax), %rax\n\tmovq\t%rax, -376(%rbp)\n\tmovq\t-376(%rbp), %rax\n\tcmpq\t-368(%rbp), %rax\n\tjle\tLBB5_4\n## BB#3:\n\tmovq\t-368(%rbp), %rax\n\tmovq\t-376(%rbp), %rcx\n\tsubq\t%rax, %rcx\n\tmovq\t%rcx, -376(%rbp)\n\tjmp\tLBB5_5\nLBB5_4:\n\tmovq\t$0, -376(%rbp)\nLBB5_5:\n\tmovq\t-336(%rbp), %rax\n\tmovq\t-328(%rbp), %rcx\n\tsubq\t%rcx, %rax\n\tmovq\t%rax, -384(%rbp)\n\tcmpq\t$0, -384(%rbp)\n\tjle\tLBB5_9\n## BB#6:\n\tmovq\t-320(%rbp), %rax\n\tmovq\t-328(%rbp), %rcx\n\tmovq\t-384(%rbp), %rdx\n\tmovq\t%rax, -232(%rbp)\n\tmovq\t%rcx, -240(%rbp)\n\tmovq\t%rdx, -248(%rbp)\n\tmovq\t-232(%rbp), %rax\n\tmovq\t(%rax), %rcx\n\tmovq\t96(%rcx), %rcx\n\tmovq\t-240(%rbp), %rsi\n\tmovq\t-248(%rbp), %rdx\n\tmovq\t%rax, %rdi\n\tcallq\t*%rcx\n\tcmpq\t-384(%rbp), %rax\n\tje\tLBB5_8\n## BB#7:\n\tmovq\t$0, -320(%rbp)\n\tmovq\t-320(%rbp), %rax\n\tmovq\t%rax, -312(%rbp)\n\tjmp\tLBB5_26\nLBB5_8:\n\tjmp\tLBB5_9\nLBB5_9:\n\tcmpq\t$0, -376(%rbp)\n\tjle\tLBB5_21\n## BB#10:\n\txorl\t%esi, %esi\n\tmovl\t$24, %eax\n\tmovl\t%eax, %edx\n\tleaq\t-408(%rbp), %rcx\n\tmovq\t-376(%rbp), %rdi\n\tmovb\t-353(%rbp), %r8b\n\tmovq\t%rcx, -208(%rbp)\n\tmovq\t%rdi, -216(%rbp)\n\tmovb\t%r8b, -217(%rbp)\n\tmovq\t-208(%rbp), %rcx\n\tmovq\t-216(%rbp), %rdi\n\tmovb\t-217(%rbp), %r8b\n\tmovq\t%rcx, -184(%rbp)\n\tmovq\t%rdi, -192(%rbp)\n\tmovb\t%r8b, -193(%rbp)\n\tmovq\t-184(%rbp), %rcx\n\tmovq\t%rcx, -176(%rbp)\n\tmovq\t-176(%rbp), %rdi\n\tmovq\t%rdi, -168(%rbp)\n\tmovq\t-168(%rbp), %rdi\n\tmovq\t%rdi, %r9\n\tmovq\t%r9, -160(%rbp)\n\tmovq\t-160(%rbp), %r9\n\tmovq\t%rdi, -432(%rbp)        ## 8-byte Spill\n\tmovq\t%r9, %rdi\n\tmovq\t%rcx, -440(%rbp)        ## 8-byte Spill\n\tcallq\t_memset\n\tmovq\t-432(%rbp), %rcx        ## 8-byte Reload\n\tmovq\t%rcx, -152(%rbp)\n\tmovq\t-152(%rbp), %rcx\n\tmovq\t%rcx, -144(%rbp)\n\tmovq\t-192(%rbp), %rsi\n\tmovq\t-440(%rbp), %rdi        ## 8-byte Reload\n\tmovsbl\t-193(%rbp), %edx\n\tcallq\t__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEmc\n\tleaq\t-408(%rbp), %rcx\n\tmovq\t-320(%rbp), %rsi\n\tmovq\t%rcx, -136(%rbp)\n\tmovq\t-136(%rbp), %rcx\n\tmovq\t%rcx, -128(%rbp)\n\tmovq\t-128(%rbp), %rcx\n\tmovq\t%rcx, -120(%rbp)\n\tmovq\t-120(%rbp), %rdi\n\tmovq\t%rdi, -112(%rbp)\n\tmovq\t-112(%rbp), %rdi\n\tmovq\t%rdi, -104(%rbp)\n\tmovq\t-104(%rbp), %rdi\n\tmovzbl\t(%rdi), %eax\n\tmovl\t%eax, %edi\n\tandq\t$1, %rdi\n\tcmpq\t$0, %rdi\n\tmovq\t%rsi, -448(%rbp)        ## 8-byte Spill\n\tmovq\t%rcx, -456(%rbp)        ## 8-byte Spill\n\tje\tLBB5_12\n## BB#11:\n\tmovq\t-456(%rbp), %rax        ## 8-byte Reload\n\tmovq\t%rax, -56(%rbp)\n\tmovq\t-56(%rbp), %rcx\n\tmovq\t%rcx, -48(%rbp)\n\tmovq\t-48(%rbp), %rcx\n\tmovq\t%rcx, -40(%rbp)\n\tmovq\t-40(%rbp), %rcx\n\tmovq\t16(%rcx), %rcx\n\tmovq\t%rcx, -464(%rbp)        ## 8-byte Spill\n\tjmp\tLBB5_13\nLBB5_12:\n\tmovq\t-456(%rbp), %rax        ## 8-byte Reload\n\tmovq\t%rax, -96(%rbp)\n\tmovq\t-96(%rbp), %rcx\n\tmovq\t%rcx, -88(%rbp)\n\tmovq\t-88(%rbp), %rcx\n\tmovq\t%rcx, -80(%rbp)\n\tmovq\t-80(%rbp), %rcx\n\taddq\t$1, %rcx\n\tmovq\t%rcx, -72(%rbp)\n\tmovq\t-72(%rbp), %rcx\n\tmovq\t%rcx, -64(%rbp)\n\tmovq\t-64(%rbp), %rcx\n\tmovq\t%rcx, -464(%rbp)        ## 8-byte Spill\nLBB5_13:\n\tmovq\t-464(%rbp), %rax        ## 8-byte Reload\n\tmovq\t%rax, -32(%rbp)\n\tmovq\t-32(%rbp), %rax\n\tmovq\t-376(%rbp), %rcx\n\tmovq\t-448(%rbp), %rdx        ## 8-byte Reload\n\tmovq\t%rdx, -8(%rbp)\n\tmovq\t%rax, -16(%rbp)\n\tmovq\t%rcx, -24(%rbp)\n\tmovq\t-8(%rbp), %rax\n\tmovq\t(%rax), %rcx\n\tmovq\t96(%rcx), %rcx\n\tmovq\t-16(%rbp), %rsi\n\tmovq\t-24(%rbp), %rdx\nLtmp26:\n\tmovq\t%rax, %rdi\n\tcallq\t*%rcx\nLtmp27:\n\tmovq\t%rax, -472(%rbp)        ## 8-byte Spill\n\tjmp\tLBB5_14\nLBB5_14:\n\tjmp\tLBB5_15\nLBB5_15:\n\tmovq\t-472(%rbp), %rax        ## 8-byte Reload\n\tcmpq\t-376(%rbp), %rax\n\tje\tLBB5_18\n## BB#16:\n\tmovq\t$0, -320(%rbp)\n\tmovq\t-320(%rbp), %rax\n\tmovq\t%rax, -312(%rbp)\n\tmovl\t$1, -424(%rbp)\n\tjmp\tLBB5_19\nLBB5_17:\nLtmp28:\n\tleaq\t-408(%rbp), %rdi\n\tmovl\t%edx, %ecx\n\tmovq\t%rax, -416(%rbp)\n\tmovl\t%ecx, -420(%rbp)\n\tcallq\t__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev\n\tjmp\tLBB5_27\nLBB5_18:\n\tmovl\t$0, -424(%rbp)\nLBB5_19:\n\tleaq\t-408(%rbp), %rdi\n\tcallq\t__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev\n\tmovl\t-424(%rbp), %eax\n\ttestl\t%eax, %eax\n\tmovl\t%eax, -476(%rbp)        ## 4-byte Spill\n\tje\tLBB5_20\n\tjmp\tLBB5_29\nLBB5_29:\n\tmovl\t-476(%rbp), %eax        ## 4-byte Reload\n\tsubl\t$1, %eax\n\tmovl\t%eax, -480(%rbp)        ## 4-byte Spill\n\tje\tLBB5_26\n\tjmp\tLBB5_28\nLBB5_20:\n\tjmp\tLBB5_21\nLBB5_21:\n\tmovq\t-344(%rbp), %rax\n\tmovq\t-336(%rbp), %rcx\n\tsubq\t%rcx, %rax\n\tmovq\t%rax, -384(%rbp)\n\tcmpq\t$0, -384(%rbp)\n\tjle\tLBB5_25\n## BB#22:\n\tmovq\t-320(%rbp), %rax\n\tmovq\t-336(%rbp), %rcx\n\tmovq\t-384(%rbp), %rdx\n\tmovq\t%rax, -256(%rbp)\n\tmovq\t%rcx, -264(%rbp)\n\tmovq\t%rdx, -272(%rbp)\n\tmovq\t-256(%rbp), %rax\n\tmovq\t(%rax), %rcx\n\tmovq\t96(%rcx), %rcx\n\tmovq\t-264(%rbp), %rsi\n\tmovq\t-272(%rbp), %rdx\n\tmovq\t%rax, %rdi\n\tcallq\t*%rcx\n\tcmpq\t-384(%rbp), %rax\n\tje\tLBB5_24\n## BB#23:\n\tmovq\t$0, -320(%rbp)\n\tmovq\t-320(%rbp), %rax\n\tmovq\t%rax, -312(%rbp)\n\tjmp\tLBB5_26\nLBB5_24:\n\tjmp\tLBB5_25\nLBB5_25:\n\tmovq\t-352(%rbp), %rax\n\tmovq\t%rax, -280(%rbp)\n\tmovq\t$0, -288(%rbp)\n\tmovq\t-280(%rbp), %rax\n\tmovq\t24(%rax), %rcx\n\tmovq\t%rcx, -296(%rbp)\n\tmovq\t-288(%rbp), %rcx\n\tmovq\t%rcx, 24(%rax)\n\tmovq\t-320(%rbp), %rax\n\tmovq\t%rax, -312(%rbp)\nLBB5_26:\n\tmovq\t-312(%rbp), %rax\n\taddq\t$480, %rsp              ## imm = 0x1E0\n\tpopq\t%rbp\n\tretq\nLBB5_27:\n\tmovq\t-416(%rbp), %rdi\n\tcallq\t__Unwind_Resume\nLBB5_28:\nLfunc_end2:\n\t.cfi_endproc\n\t.section\t__TEXT,__gcc_except_tab\n\t.p2align\t2\nGCC_except_table5:\nLexception2:\n\t.byte\t255                     ## @LPStart Encoding = omit\n\t.byte\t155                     ## @TType Encoding = indirect pcrel sdata4\n\t.byte\t41                      ## @TType base offset\n\t.byte\t3                       ## Call site Encoding = udata4\n\t.byte\t39                      ## Call site table length\nLset31 = Lfunc_begin2-Lfunc_begin2      ## >> Call Site 1 <<\n\t.long\tLset31\nLset32 = Ltmp26-Lfunc_begin2            ##   Call between Lfunc_begin2 and Ltmp26\n\t.long\tLset32\n\t.long\t0                       ##     has no landing pad\n\t.byte\t0                       ##   On action: cleanup\nLset33 = Ltmp26-Lfunc_begin2            ## >> Call Site 2 <<\n\t.long\tLset33\nLset34 = Ltmp27-Ltmp26                  ##   Call between Ltmp26 and Ltmp27\n\t.long\tLset34\nLset35 = Ltmp28-Lfunc_begin2            ##     jumps to Ltmp28\n\t.long\tLset35\n\t.byte\t0                       ##   On action: cleanup\nLset36 = Ltmp27-Lfunc_begin2            ## >> Call Site 3 <<\n\t.long\tLset36\nLset37 = Lfunc_end2-Ltmp27              ##   Call between Ltmp27 and Lfunc_end2\n\t.long\tLset37\n\t.long\t0                       ##     has no landing pad\n\t.byte\t0                       ##   On action: cleanup\n\t.p2align\t2\n                                        ## -- End function\n\t.section\t__TEXT,__text,regular,pure_instructions\n\t.private_extern\t___clang_call_terminate ## -- Begin function __clang_call_terminate\n\t.globl\t___clang_call_terminate\n\t.weak_definition\t___clang_call_terminate\n\t.p2align\t4, 0x90\n___clang_call_terminate:                ## @__clang_call_terminate\n## BB#0:\n\tpushq\t%rax\n\tcallq\t___cxa_begin_catch\n\tmovq\t%rax, (%rsp)            ## 8-byte Spill\n\tcallq\t__ZSt9terminatev\n                                        ## -- End function\n\t.globl\t__ZNSt3__111char_traitsIcE11eq_int_typeEii ## -- Begin function _ZNSt3__111char_traitsIcE11eq_int_typeEii\n\t.weak_definition\t__ZNSt3__111char_traitsIcE11eq_int_typeEii\n\t.p2align\t4, 0x90\n__ZNSt3__111char_traitsIcE11eq_int_typeEii: ## @_ZNSt3__111char_traitsIcE11eq_int_typeEii\n\t.cfi_startproc\n## BB#0:\n\tpushq\t%rbp\nLcfi18:\n\t.cfi_def_cfa_offset 16\nLcfi19:\n\t.cfi_offset %rbp, -16\n\tmovq\t%rsp, %rbp\nLcfi20:\n\t.cfi_def_cfa_register %rbp\n\tmovl\t%edi, -4(%rbp)\n\tmovl\t%esi, -8(%rbp)\n\tmovl\t-4(%rbp), %esi\n\tcmpl\t-8(%rbp), %esi\n\tsete\t%al\n\tandb\t$1, %al\n\tmovzbl\t%al, %eax\n\tpopq\t%rbp\n\tretq\n\t.cfi_endproc\n                                        ## -- End function\n\t.globl\t__ZNSt3__111char_traitsIcE3eofEv ## -- Begin function _ZNSt3__111char_traitsIcE3eofEv\n\t.weak_definition\t__ZNSt3__111char_traitsIcE3eofEv\n\t.p2align\t4, 0x90\n__ZNSt3__111char_traitsIcE3eofEv:       ## @_ZNSt3__111char_traitsIcE3eofEv\n\t.cfi_startproc\n## BB#0:\n\tpushq\t%rbp\nLcfi21:\n\t.cfi_def_cfa_offset 16\nLcfi22:\n\t.cfi_offset %rbp, -16\n\tmovq\t%rsp, %rbp\nLcfi23:\n\t.cfi_def_cfa_register %rbp\n\tmovl\t$4294967295, %eax       ## imm = 0xFFFFFFFF\n\tpopq\t%rbp\n\tretq\n\t.cfi_endproc\n                                        ## -- End function\n\t.section\t__TEXT,__const\n\t.p2align\t2               ## @_ZZ4mainE5array\nl__ZZ4mainE5array:\n\t.long\t2700                    ## 0xa8c\n\t.long\t2314                    ## 0x90a\n\t.long\t8429                    ## 0x20ed\n\t.long\t7726                    ## 0x1e2e\n\t.long\t4817                    ## 0x12d1\n\t.long\t8716                    ## 0x220c\n\t.long\t3598                    ## 0xe0e\n\t.long\t6255                    ## 0x186f\n\t.long\t5056                    ## 0x13c0\n\t.long\t8653                    ## 0x21cd\n\t.long\t8571                    ## 0x217b\n\t.long\t5028                    ## 0x13a4\n\t.long\t1259                    ## 0x4eb\n\t.long\t3315                    ## 0xcf3\n\t.long\t2896                    ## 0xb50\n\t.long\t1411                    ## 0x583\n\t.long\t3847                    ## 0xf07\n\t.long\t879                     ## 0x36f\n\t.long\t7353                    ## 0x1cb9\n\t.long\t8056                    ## 0x1f78\n\t.long\t8765                    ## 0x223d\n\t.long\t2344                    ## 0x928\n\t.long\t6349                    ## 0x18cd\n\t.long\t4156                    ## 0x103c\n\t.long\t8350                    ## 0x209e\n\t.long\t4164                    ## 0x1044\n\t.long\t4783                    ## 0x12af\n\t.long\t6800                    ## 0x1a90\n\t.long\t8887                    ## 0x22b7\n\t.long\t267                     ## 0x10b\n\t.long\t4478                    ## 0x117e\n\t.long\t6327                    ## 0x18b7\n\t.long\t58                      ## 0x3a\n\t.long\t7961                    ## 0x1f19\n\t.long\t756                     ## 0x2f4\n\t.long\t5654                    ## 0x1616\n\t.long\t9546                    ## 0x254a\n\t.long\t5132                    ## 0x140c\n\t.long\t247                     ## 0xf7\n\t.long\t5514                    ## 0x158a\n\t.long\t7098                    ## 0x1bba\n\t.long\t1156                    ## 0x484\n\t.long\t795                     ## 0x31b\n\t.long\t2502                    ## 0x9c6\n\t.long\t367                     ## 0x16f\n\t.long\t5330                    ## 0x14d2\n\t.long\t2261                    ## 0x8d5\n\t.long\t8692                    ## 0x21f4\n\t.long\t2460                    ## 0x99c\n\t.long\t4823                    ## 0x12d7\n\t.long\t8968                    ## 0x2308\n\t.long\t4976                    ## 0x1370\n\t.long\t1929                    ## 0x789\n\t.long\t1051                    ## 0x41b\n\t.long\t9249                    ## 0x2421\n\t.long\t9713                    ## 0x25f1\n\t.long\t2803                    ## 0xaf3\n\t.long\t1743                    ## 0x6cf\n\t.long\t3681                    ## 0xe61\n\t.long\t93                      ## 0x5d\n\t.long\t4967                    ## 0x1367\n\t.long\t2245                    ## 0x8c5\n\t.long\t198                     ## 0xc6\n\t.long\t896                     ## 0x380\n\t.long\t6372                    ## 0x18e4\n\t.long\t4413                    ## 0x113d\n\t.long\t2615                    ## 0xa37\n\t.long\t6130                    ## 0x17f2\n\t.long\t5766                    ## 0x1686\n\t.long\t5306                    ## 0x14ba\n\t.long\t1236                    ## 0x4d4\n\t.long\t888                     ## 0x378\n\t.long\t8050                    ## 0x1f72\n\t.long\t7080                    ## 0x1ba8\n\t.long\t3460                    ## 0xd84\n\t.long\t3473                    ## 0xd91\n\t.long\t1720                    ## 0x6b8\n\t.long\t3913                    ## 0xf49\n\t.long\t3449                    ## 0xd79\n\t.long\t8420                    ## 0x20e4\n\t.long\t1814                    ## 0x716\n\t.long\t1261                    ## 0x4ed\n\t.long\t1368                    ## 0x558\n\t.long\t167                     ## 0xa7\n\t.long\t7938                    ## 0x1f02\n\t.long\t4483                    ## 0x1183\n\t.long\t4843                    ## 0x12eb\n\t.long\t4682                    ## 0x124a\n\t.long\t3301                    ## 0xce5\n\t.long\t4038                    ## 0xfc6\n\t.long\t709                     ## 0x2c5\n\t.long\t8655                    ## 0x21cf\n\t.long\t598                     ## 0x256\n\t.long\t3857                    ## 0xf11\n\t.long\t6285                    ## 0x188d\n\t.long\t2961                    ## 0xb91\n\t.long\t6817                    ## 0x1aa1\n\t.long\t1031                    ## 0x407\n\t.long\t4007                    ## 0xfa7\n\t.long\t1392                    ## 0x570\n\t.long\t5717                    ## 0x1655\n\t.long\t5837                    ## 0x16cd\n\t.long\t5695                    ## 0x163f\n\t.long\t9511                    ## 0x2527\n\t.long\t8891                    ## 0x22bb\n\t.long\t7883                    ## 0x1ecb\n\t.long\t7035                    ## 0x1b7b\n\t.long\t2349                    ## 0x92d\n\t.long\t5752                    ## 0x1678\n\t.long\t3139                    ## 0xc43\n\t.long\t2442                    ## 0x98a\n\t.long\t3966                    ## 0xf7e\n\t.long\t2007                    ## 0x7d7\n\t.long\t9205                    ## 0x23f5\n\t.long\t8434                    ## 0x20f2\n\t.long\t5065                    ## 0x13c9\n\t.long\t3795                    ## 0xed3\n\t.long\t6890                    ## 0x1aea\n\t.long\t2715                    ## 0xa9b\n\t.long\t1                       ## 0x1\n\t.long\t5106                    ## 0x13f2\n\t.long\t5083                    ## 0x13db\n\n\t.section\t__TEXT,__cstring,cstring_literals\nL_.str:                                 ## @.str\n\t.space\t1\n\nL_.str.1:                               ## @.str.1\n\t.asciz\t\"hello, world\"\n\n\n.subsections_via_symbols\n\n```\n\n```assembly\n\t.section\t__TEXT,__text,regular,pure_instructions\n\t.macosx_version_min 10, 13\n\t.globl\t_main                   ## -- Begin function main\n\t.p2align\t4, 0x90\n_main:                                  ## @main\n\t.cfi_startproc\n## BB#0:\n\tpushq\t%rbp\nLcfi0:\n\t.cfi_def_cfa_offset 16\nLcfi1:\n\t.cfi_offset %rbp, -16\n\tmovq\t%rsp, %rbp\nLcfi2:\n\t.cfi_def_cfa_register %rbp\n\tsubq\t$592, %rsp              ## imm = 0x250\n\tleaq\t-528(%rbp), %rax\n\tleaq\tl__ZZ4mainE5array(%rip), %rcx\n\tmovl\t$488, %edx              ## imm = 0x1E8\n                                        ## kill: %RDX<def> %EDX<kill>\n\tmovl\t$0, -36(%rbp)\n\tmovq\t%rax, %rsi\n\tmovq\t%rsi, %rdi\n\tmovq\t%rcx, %rsi\n\tmovq\t%rax, -576(%rbp)        ## 8-byte Spill\n\tcallq\t_memcpy\n\tmovl\t$5330, -532(%rbp)       ## imm = 0x14D2\n\tmovq\t-576(%rbp), %rax        ## 8-byte Reload\n\tmovq\t%rax, -544(%rbp)\n\tmovq\t-544(%rbp), %rcx\n\tmovq\t%rcx, -32(%rbp)\n\tmovq\t-32(%rbp), %rcx\n\tmovq\t%rcx, -552(%rbp)\n\tmovq\t-544(%rbp), %rcx\n\tmovq\t%rcx, -8(%rbp)\n\tmovq\t-8(%rbp), %rcx\n\taddq\t$488, %rcx              ## imm = 0x1E8\n\tmovq\t%rcx, -560(%rbp)\nLBB0_1:                                 ## =>This Inner Loop Header: Depth=1\n\tmovq\t-552(%rbp), %rax\n\tcmpq\t-560(%rbp), %rax\n\tje\tLBB0_8\n## BB#2:                                ##   in Loop: Header=BB0_1 Depth=1\n\tmovq\t-552(%rbp), %rax\n\tmovq\t%rax, -568(%rbp)\n\tmovq\t-568(%rbp), %rax\n\tcmpl\t$1000, (%rax)           ## imm = 0x3E8\n\tjle\tLBB0_6\n## BB#3:                                ##   in Loop: Header=BB0_1 Depth=1\n\tmovq\t__ZNSt3__14coutE@GOTPCREL(%rip), %rdi\n\tleaq\tL_.str(%rip), %rsi\n\tcallq\t__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc\n\tmovq\t-568(%rbp), %rsi\n\tmovl\t(%rsi), %ecx\n\tcmpl\t-532(%rbp), %ecx\n\tmovq\t%rax, -584(%rbp)        ## 8-byte Spill\n\tjne\tLBB0_5\n## BB#4:                                ##   in Loop: Header=BB0_1 Depth=1\n\tmovq\t__ZNSt3__14coutE@GOTPCREL(%rip), %rdi\n\tleaq\tL_.str.1(%rip), %rsi\n\tcallq\t__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc\n\tleaq\t__ZNSt3__14endlIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_(%rip), %rsi\n\tmovq\t%rax, -16(%rbp)\n\tmovq\t%rsi, -24(%rbp)\n\tmovq\t-16(%rbp), %rdi\n\tcallq\t*-24(%rbp)\n\tmovq\t%rax, -592(%rbp)        ## 8-byte Spill\nLBB0_5:                                 ##   in Loop: Header=BB0_1 Depth=1\n\tjmp\tLBB0_6\nLBB0_6:                                 ##   in Loop: Header=BB0_1 Depth=1\n\tjmp\tLBB0_7\nLBB0_7:                                 ##   in Loop: Header=BB0_1 Depth=1\n\tmovq\t-552(%rbp), %rax\n\taddq\t$4, %rax\n\tmovq\t%rax, -552(%rbp)\n\tjmp\tLBB0_1\nLBB0_8:\n\txorl\t%eax, %eax\n\taddq\t$592, %rsp              ## imm = 0x250\n\tpopq\t%rbp\n\tretq\n\t.cfi_endproc\n                                        ## -- End function\n\t.globl\t__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc ## -- Begin function _ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc\n\t.weak_definition\t__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc\n\t.p2align\t4, 0x90\n__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc: ## @_ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc\n\t.cfi_startproc\n## BB#0:\n\tpushq\t%rbp\nLcfi3:\n\t.cfi_def_cfa_offset 16\nLcfi4:\n\t.cfi_offset %rbp, -16\n\tmovq\t%rsp, %rbp\nLcfi5:\n\t.cfi_def_cfa_register %rbp\n\tsubq\t$32, %rsp\n\tmovq\t%rdi, -8(%rbp)\n\tmovq\t%rsi, -16(%rbp)\n\tmovq\t-8(%rbp), %rdi\n\tmovq\t-16(%rbp), %rsi\n\tmovq\t-16(%rbp), %rax\n\tmovq\t%rdi, -24(%rbp)         ## 8-byte Spill\n\tmovq\t%rax, %rdi\n\tmovq\t%rsi, -32(%rbp)         ## 8-byte Spill\n\tcallq\t__ZNSt3__111char_traitsIcE6lengthEPKc\n\tmovq\t-24(%rbp), %rdi         ## 8-byte Reload\n\tmovq\t-32(%rbp), %rsi         ## 8-byte Reload\n\tmovq\t%rax, %rdx\n\tcallq\t__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m\n\taddq\t$32, %rsp\n\tpopq\t%rbp\n\tretq\n\t.cfi_endproc\n                                        ## -- End function\n\t.private_extern\t__ZNSt3__14endlIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_ ## -- Begin function _ZNSt3__14endlIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_\n\t.globl\t__ZNSt3__14endlIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_\n\t.weak_definition\t__ZNSt3__14endlIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_\n\t.p2align\t4, 0x90\n__ZNSt3__14endlIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_: ## @_ZNSt3__14endlIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_\nLfunc_begin0:\n\t.cfi_startproc\n\t.cfi_personality 155, ___gxx_personality_v0\n\t.cfi_lsda 16, Lexception0\n## BB#0:\n\tpushq\t%rbp\nLcfi6:\n\t.cfi_def_cfa_offset 16\nLcfi7:\n\t.cfi_offset %rbp, -16\n\tmovq\t%rsp, %rbp\nLcfi8:\n\t.cfi_def_cfa_register %rbp\n\tsubq\t$144, %rsp\n\tmovq\t%rdi, -72(%rbp)\n\tmovq\t-72(%rbp), %rdi\n\tmovq\t(%rdi), %rax\n\tmovq\t-24(%rax), %rax\n\tmovq\t%rdi, %rcx\n\taddq\t%rax, %rcx\n\tmovq\t%rcx, -32(%rbp)\n\tmovb\t$10, -33(%rbp)\n\tmovq\t-32(%rbp), %rsi\n\tleaq\t-48(%rbp), %rax\n\tmovq\t%rdi, -80(%rbp)         ## 8-byte Spill\n\tmovq\t%rax, %rdi\n\tmovq\t%rax, -88(%rbp)         ## 8-byte Spill\n\tcallq\t__ZNKSt3__18ios_base6getlocEv\n\tmovq\t-88(%rbp), %rax         ## 8-byte Reload\n\tmovq\t%rax, -24(%rbp)\n\tmovq\t-24(%rbp), %rdi\nLtmp0:\n\tmovq\t__ZNSt3__15ctypeIcE2idE@GOTPCREL(%rip), %rsi\n\tcallq\t__ZNKSt3__16locale9use_facetERNS0_2idE\nLtmp1:\n\tmovq\t%rax, -96(%rbp)         ## 8-byte Spill\n\tjmp\tLBB2_1\nLBB2_1:\n\tmovb\t-33(%rbp), %al\n\tmovq\t-96(%rbp), %rcx         ## 8-byte Reload\n\tmovq\t%rcx, -8(%rbp)\n\tmovb\t%al, -9(%rbp)\n\tmovq\t-8(%rbp), %rdx\n\tmovq\t(%rdx), %rsi\n\tmovq\t56(%rsi), %rsi\n\tmovsbl\t-9(%rbp), %edi\nLtmp2:\n\tmovl\t%edi, -100(%rbp)        ## 4-byte Spill\n\tmovq\t%rdx, %rdi\n\tmovl\t-100(%rbp), %r8d        ## 4-byte Reload\n\tmovq\t%rsi, -112(%rbp)        ## 8-byte Spill\n\tmovl\t%r8d, %esi\n\tmovq\t-112(%rbp), %rdx        ## 8-byte Reload\n\tcallq\t*%rdx\nLtmp3:\n\tmovb\t%al, -113(%rbp)         ## 1-byte Spill\n\tjmp\tLBB2_3\nLBB2_2:\nLtmp4:\n\tleaq\t-48(%rbp), %rdi\n\tmovl\t%edx, %ecx\n\tmovq\t%rax, -56(%rbp)\n\tmovl\t%ecx, -60(%rbp)\n\tcallq\t__ZNSt3__16localeD1Ev\n\tmovq\t-56(%rbp), %rdi\n\tcallq\t__Unwind_Resume\nLBB2_3:\n\tleaq\t-48(%rbp), %rdi\n\tcallq\t__ZNSt3__16localeD1Ev\n\tmovq\t-80(%rbp), %rdi         ## 8-byte Reload\n\tmovb\t-113(%rbp), %al         ## 1-byte Reload\n\tmovsbl\t%al, %esi\n\tcallq\t__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc\n\tmovq\t-72(%rbp), %rdi\n\tmovq\t%rax, -128(%rbp)        ## 8-byte Spill\n\tcallq\t__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv\n\tmovq\t-72(%rbp), %rdi\n\tmovq\t%rax, -136(%rbp)        ## 8-byte Spill\n\tmovq\t%rdi, %rax\n\taddq\t$144, %rsp\n\tpopq\t%rbp\n\tretq\nLfunc_end0:\n\t.cfi_endproc\n\t.section\t__TEXT,__gcc_except_tab\n\t.p2align\t2\nGCC_except_table2:\nLexception0:\n\t.byte\t255                     ## @LPStart Encoding = omit\n\t.byte\t155                     ## @TType Encoding = indirect pcrel sdata4\n\t.byte\t41                      ## @TType base offset\n\t.byte\t3                       ## Call site Encoding = udata4\n\t.byte\t39                      ## Call site table length\nLset0 = Lfunc_begin0-Lfunc_begin0       ## >> Call Site 1 <<\n\t.long\tLset0\nLset1 = Ltmp0-Lfunc_begin0              ##   Call between Lfunc_begin0 and Ltmp0\n\t.long\tLset1\n\t.long\t0                       ##     has no landing pad\n\t.byte\t0                       ##   On action: cleanup\nLset2 = Ltmp0-Lfunc_begin0              ## >> Call Site 2 <<\n\t.long\tLset2\nLset3 = Ltmp3-Ltmp0                     ##   Call between Ltmp0 and Ltmp3\n\t.long\tLset3\nLset4 = Ltmp4-Lfunc_begin0              ##     jumps to Ltmp4\n\t.long\tLset4\n\t.byte\t0                       ##   On action: cleanup\nLset5 = Ltmp3-Lfunc_begin0              ## >> Call Site 3 <<\n\t.long\tLset5\nLset6 = Lfunc_end0-Ltmp3                ##   Call between Ltmp3 and Lfunc_end0\n\t.long\tLset6\n\t.long\t0                       ##     has no landing pad\n\t.byte\t0                       ##   On action: cleanup\n\t.p2align\t2\n                                        ## -- End function\n\t.section\t__TEXT,__text,regular,pure_instructions\n\t.globl\t__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## -- Begin function _ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m\n\t.weak_definition\t__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m\n\t.p2align\t4, 0x90\n__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m: ## @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m\nLfunc_begin1:\n\t.cfi_startproc\n\t.cfi_personality 155, ___gxx_personality_v0\n\t.cfi_lsda 16, Lexception1\n## BB#0:\n\tpushq\t%rbp\nLcfi9:\n\t.cfi_def_cfa_offset 16\nLcfi10:\n\t.cfi_offset %rbp, -16\n\tmovq\t%rsp, %rbp\nLcfi11:\n\t.cfi_def_cfa_register %rbp\n\tsubq\t$384, %rsp              ## imm = 0x180\n\tmovq\t%rdi, -184(%rbp)\n\tmovq\t%rsi, -192(%rbp)\n\tmovq\t%rdx, -200(%rbp)\n\tmovq\t-184(%rbp), %rsi\nLtmp5:\n\tleaq\t-216(%rbp), %rdi\n\tcallq\t__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_\nLtmp6:\n\tjmp\tLBB3_1\nLBB3_1:\n\tleaq\t-216(%rbp), %rax\n\tmovq\t%rax, -176(%rbp)\n\tmovq\t-176(%rbp), %rax\n\tmovb\t(%rax), %cl\n\tmovb\t%cl, -249(%rbp)         ## 1-byte Spill\n## BB#2:\n\tmovb\t-249(%rbp), %al         ## 1-byte Reload\n\ttestb\t$1, %al\n\tjne\tLBB3_3\n\tjmp\tLBB3_26\nLBB3_3:\n\tleaq\t-248(%rbp), %rax\n\tmovq\t-184(%rbp), %rcx\n\tmovq\t%rax, -160(%rbp)\n\tmovq\t%rcx, -168(%rbp)\n\tmovq\t-160(%rbp), %rax\n\tmovq\t-168(%rbp), %rcx\n\tmovq\t%rax, -144(%rbp)\n\tmovq\t%rcx, -152(%rbp)\n\tmovq\t-144(%rbp), %rax\n\tmovq\t-152(%rbp), %rcx\n\tmovq\t(%rcx), %rdx\n\tmovq\t-24(%rdx), %rdx\n\taddq\t%rdx, %rcx\n\tmovq\t%rcx, -136(%rbp)\n\tmovq\t-136(%rbp), %rcx\n\tmovq\t%rcx, -128(%rbp)\n\tmovq\t-128(%rbp), %rcx\n\tmovq\t40(%rcx), %rcx\n\tmovq\t%rcx, (%rax)\n\tmovq\t-192(%rbp), %rsi\n\tmovq\t-184(%rbp), %rax\n\tmovq\t(%rax), %rcx\n\tmovq\t-24(%rcx), %rcx\n\taddq\t%rcx, %rax\n\tmovq\t%rax, -88(%rbp)\n\tmovq\t-88(%rbp), %rax\n\tmovl\t8(%rax), %edi\n\tmovq\t%rsi, -264(%rbp)        ## 8-byte Spill\n\tmovl\t%edi, -268(%rbp)        ## 4-byte Spill\n## BB#4:\n\tmovl\t-268(%rbp), %eax        ## 4-byte Reload\n\tandl\t$176, %eax\n\tcmpl\t$32, %eax\n\tjne\tLBB3_6\n## BB#5:\n\tmovq\t-192(%rbp), %rax\n\taddq\t-200(%rbp), %rax\n\tmovq\t%rax, -280(%rbp)        ## 8-byte Spill\n\tjmp\tLBB3_7\nLBB3_6:\n\tmovq\t-192(%rbp), %rax\n\tmovq\t%rax, -280(%rbp)        ## 8-byte Spill\nLBB3_7:\n\tmovq\t-280(%rbp), %rax        ## 8-byte Reload\n\tmovq\t-192(%rbp), %rcx\n\taddq\t-200(%rbp), %rcx\n\tmovq\t-184(%rbp), %rdx\n\tmovq\t(%rdx), %rsi\n\tmovq\t-24(%rsi), %rsi\n\taddq\t%rsi, %rdx\n\tmovq\t-184(%rbp), %rsi\n\tmovq\t(%rsi), %rdi\n\tmovq\t-24(%rdi), %rdi\n\taddq\t%rdi, %rsi\n\tmovq\t%rsi, -72(%rbp)\n\tmovq\t-72(%rbp), %rsi\n\tmovq\t%rax, -288(%rbp)        ## 8-byte Spill\n\tmovq\t%rcx, -296(%rbp)        ## 8-byte Spill\n\tmovq\t%rdx, -304(%rbp)        ## 8-byte Spill\n\tmovq\t%rsi, -312(%rbp)        ## 8-byte Spill\n\tcallq\t__ZNSt3__111char_traitsIcE3eofEv\n\tmovq\t-312(%rbp), %rcx        ## 8-byte Reload\n\tmovl\t144(%rcx), %esi\n\tmovl\t%eax, %edi\n\tcallq\t__ZNSt3__111char_traitsIcE11eq_int_typeEii\n\ttestb\t$1, %al\n\tjne\tLBB3_8\n\tjmp\tLBB3_13\nLBB3_8:\n\tmovq\t-312(%rbp), %rax        ## 8-byte Reload\n\tmovq\t%rax, -32(%rbp)\n\tmovb\t$32, -33(%rbp)\n\tmovq\t-32(%rbp), %rsi\nLtmp8:\n\tleaq\t-48(%rbp), %rdi\n\tcallq\t__ZNKSt3__18ios_base6getlocEv\nLtmp9:\n\tjmp\tLBB3_9\nLBB3_9:\n\tleaq\t-48(%rbp), %rax\n\tmovq\t%rax, -24(%rbp)\n\tmovq\t-24(%rbp), %rdi\nLtmp10:\n\tmovq\t__ZNSt3__15ctypeIcE2idE@GOTPCREL(%rip), %rsi\n\tcallq\t__ZNKSt3__16locale9use_facetERNS0_2idE\nLtmp11:\n\tmovq\t%rax, -320(%rbp)        ## 8-byte Spill\n\tjmp\tLBB3_10\nLBB3_10:\n\tmovb\t-33(%rbp), %al\n\tmovq\t-320(%rbp), %rcx        ## 8-byte Reload\n\tmovq\t%rcx, -8(%rbp)\n\tmovb\t%al, -9(%rbp)\n\tmovq\t-8(%rbp), %rdx\n\tmovq\t(%rdx), %rsi\n\tmovq\t56(%rsi), %rsi\n\tmovsbl\t-9(%rbp), %edi\nLtmp12:\n\tmovl\t%edi, -324(%rbp)        ## 4-byte Spill\n\tmovq\t%rdx, %rdi\n\tmovl\t-324(%rbp), %r8d        ## 4-byte Reload\n\tmovq\t%rsi, -336(%rbp)        ## 8-byte Spill\n\tmovl\t%r8d, %esi\n\tmovq\t-336(%rbp), %rdx        ## 8-byte Reload\n\tcallq\t*%rdx\nLtmp13:\n\tmovb\t%al, -337(%rbp)         ## 1-byte Spill\n\tjmp\tLBB3_12\nLBB3_11:\nLtmp14:\n\tmovl\t%edx, %ecx\n\tmovq\t%rax, -56(%rbp)\n\tmovl\t%ecx, -60(%rbp)\n\tleaq\t-48(%rbp), %rdi\n\tcallq\t__ZNSt3__16localeD1Ev\n\tmovq\t-56(%rbp), %rax\n\tmovl\t-60(%rbp), %ecx\n\tmovq\t%rax, -352(%rbp)        ## 8-byte Spill\n\tmovl\t%ecx, -356(%rbp)        ## 4-byte Spill\n\tjmp\tLBB3_21\nLBB3_12:\n\tleaq\t-48(%rbp), %rdi\n\tcallq\t__ZNSt3__16localeD1Ev\n\tmovb\t-337(%rbp), %al         ## 1-byte Reload\n\tmovsbl\t%al, %ecx\n\tmovq\t-312(%rbp), %rdi        ## 8-byte Reload\n\tmovl\t%ecx, 144(%rdi)\nLBB3_13:\n\tmovq\t-312(%rbp), %rax        ## 8-byte Reload\n\tmovl\t144(%rax), %ecx\n\tmovb\t%cl, %dl\n\tmovb\t%dl, -357(%rbp)         ## 1-byte Spill\n## BB#14:\n\tmovq\t-248(%rbp), %rdi\nLtmp15:\n\tmovb\t-357(%rbp), %al         ## 1-byte Reload\n\tmovsbl\t%al, %r9d\n\tmovq\t-264(%rbp), %rsi        ## 8-byte Reload\n\tmovq\t-288(%rbp), %rdx        ## 8-byte Reload\n\tmovq\t-296(%rbp), %rcx        ## 8-byte Reload\n\tmovq\t-304(%rbp), %r8         ## 8-byte Reload\n\tcallq\t__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_\nLtmp16:\n\tmovq\t%rax, -368(%rbp)        ## 8-byte Spill\n\tjmp\tLBB3_15\nLBB3_15:\n\tleaq\t-240(%rbp), %rax\n\tmovq\t-368(%rbp), %rcx        ## 8-byte Reload\n\tmovq\t%rcx, -240(%rbp)\n\tmovq\t%rax, -80(%rbp)\n\tmovq\t-80(%rbp), %rax\n\tcmpq\t$0, (%rax)\n\tjne\tLBB3_25\n## BB#16:\n\tmovq\t-184(%rbp), %rax\n\tmovq\t(%rax), %rcx\n\tmovq\t-24(%rcx), %rcx\n\taddq\t%rcx, %rax\n\tmovq\t%rax, -112(%rbp)\n\tmovl\t$5, -116(%rbp)\n\tmovq\t-112(%rbp), %rax\n\tmovl\t-116(%rbp), %edx\n\tmovq\t%rax, -96(%rbp)\n\tmovl\t%edx, -100(%rbp)\n\tmovq\t-96(%rbp), %rax\n\tmovl\t32(%rax), %edx\n\tmovl\t-100(%rbp), %esi\n\torl\t%esi, %edx\nLtmp17:\n\tmovq\t%rax, %rdi\n\tmovl\t%edx, %esi\n\tcallq\t__ZNSt3__18ios_base5clearEj\nLtmp18:\n\tjmp\tLBB3_17\nLBB3_17:\n\tjmp\tLBB3_18\nLBB3_18:\n\tjmp\tLBB3_25\nLBB3_19:\nLtmp7:\n\tmovl\t%edx, %ecx\n\tmovq\t%rax, -224(%rbp)\n\tmovl\t%ecx, -228(%rbp)\n\tjmp\tLBB3_22\nLBB3_20:\nLtmp19:\n\tmovl\t%edx, %ecx\n\tmovq\t%rax, -352(%rbp)        ## 8-byte Spill\n\tmovl\t%ecx, -356(%rbp)        ## 4-byte Spill\n\tjmp\tLBB3_21\nLBB3_21:\n\tmovl\t-356(%rbp), %eax        ## 4-byte Reload\n\tmovq\t-352(%rbp), %rcx        ## 8-byte Reload\n\tleaq\t-216(%rbp), %rdi\n\tmovq\t%rcx, -224(%rbp)\n\tmovl\t%eax, -228(%rbp)\n\tcallq\t__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev\nLBB3_22:\n\tmovq\t-224(%rbp), %rdi\n\tcallq\t___cxa_begin_catch\n\tmovq\t-184(%rbp), %rdi\n\tmovq\t(%rdi), %rcx\n\tmovq\t-24(%rcx), %rcx\n\taddq\t%rcx, %rdi\nLtmp20:\n\tmovq\t%rax, -376(%rbp)        ## 8-byte Spill\n\tcallq\t__ZNSt3__18ios_base33__set_badbit_and_consider_rethrowEv\nLtmp21:\n\tjmp\tLBB3_23\nLBB3_23:\n\tcallq\t___cxa_end_catch\nLBB3_24:\n\tmovq\t-184(%rbp), %rax\n\taddq\t$384, %rsp              ## imm = 0x180\n\tpopq\t%rbp\n\tretq\nLBB3_25:\n\tjmp\tLBB3_26\nLBB3_26:\n\tleaq\t-216(%rbp), %rdi\n\tcallq\t__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev\n\tjmp\tLBB3_24\nLBB3_27:\nLtmp22:\n\tmovl\t%edx, %ecx\n\tmovq\t%rax, -224(%rbp)\n\tmovl\t%ecx, -228(%rbp)\nLtmp23:\n\tcallq\t___cxa_end_catch\nLtmp24:\n\tjmp\tLBB3_28\nLBB3_28:\n\tjmp\tLBB3_29\nLBB3_29:\n\tmovq\t-224(%rbp), %rdi\n\tcallq\t__Unwind_Resume\nLBB3_30:\nLtmp25:\n\tmovl\t%edx, %ecx\n\tmovq\t%rax, %rdi\n\tmovl\t%ecx, -380(%rbp)        ## 4-byte Spill\n\tcallq\t___clang_call_terminate\nLfunc_end1:\n\t.cfi_endproc\n\t.section\t__TEXT,__gcc_except_tab\n\t.p2align\t2\nGCC_except_table3:\nLexception1:\n\t.byte\t255                     ## @LPStart Encoding = omit\n\t.byte\t155                     ## @TType Encoding = indirect pcrel sdata4\n\t.asciz\t\"\\201\\201\\200\\200\"      ## @TType base offset\n\t.byte\t3                       ## Call site Encoding = udata4\n\t.byte\t117                     ## Call site table length\nLset7 = Ltmp5-Lfunc_begin1              ## >> Call Site 1 <<\n\t.long\tLset7\nLset8 = Ltmp6-Ltmp5                     ##   Call between Ltmp5 and Ltmp6\n\t.long\tLset8\nLset9 = Ltmp7-Lfunc_begin1              ##     jumps to Ltmp7\n\t.long\tLset9\n\t.byte\t5                       ##   On action: 3\nLset10 = Ltmp8-Lfunc_begin1             ## >> Call Site 2 <<\n\t.long\tLset10\nLset11 = Ltmp9-Ltmp8                    ##   Call between Ltmp8 and Ltmp9\n\t.long\tLset11\nLset12 = Ltmp19-Lfunc_begin1            ##     jumps to Ltmp19\n\t.long\tLset12\n\t.byte\t5                       ##   On action: 3\nLset13 = Ltmp10-Lfunc_begin1            ## >> Call Site 3 <<\n\t.long\tLset13\nLset14 = Ltmp13-Ltmp10                  ##   Call between Ltmp10 and Ltmp13\n\t.long\tLset14\nLset15 = Ltmp14-Lfunc_begin1            ##     jumps to Ltmp14\n\t.long\tLset15\n\t.byte\t3                       ##   On action: 2\nLset16 = Ltmp15-Lfunc_begin1            ## >> Call Site 4 <<\n\t.long\tLset16\nLset17 = Ltmp18-Ltmp15                  ##   Call between Ltmp15 and Ltmp18\n\t.long\tLset17\nLset18 = Ltmp19-Lfunc_begin1            ##     jumps to Ltmp19\n\t.long\tLset18\n\t.byte\t5                       ##   On action: 3\nLset19 = Ltmp18-Lfunc_begin1            ## >> Call Site 5 <<\n\t.long\tLset19\nLset20 = Ltmp20-Ltmp18                  ##   Call between Ltmp18 and Ltmp20\n\t.long\tLset20\n\t.long\t0                       ##     has no landing pad\n\t.byte\t0                       ##   On action: cleanup\nLset21 = Ltmp20-Lfunc_begin1            ## >> Call Site 6 <<\n\t.long\tLset21\nLset22 = Ltmp21-Ltmp20                  ##   Call between Ltmp20 and Ltmp21\n\t.long\tLset22\nLset23 = Ltmp22-Lfunc_begin1            ##     jumps to Ltmp22\n\t.long\tLset23\n\t.byte\t0                       ##   On action: cleanup\nLset24 = Ltmp21-Lfunc_begin1            ## >> Call Site 7 <<\n\t.long\tLset24\nLset25 = Ltmp23-Ltmp21                  ##   Call between Ltmp21 and Ltmp23\n\t.long\tLset25\n\t.long\t0                       ##     has no landing pad\n\t.byte\t0                       ##   On action: cleanup\nLset26 = Ltmp23-Lfunc_begin1            ## >> Call Site 8 <<\n\t.long\tLset26\nLset27 = Ltmp24-Ltmp23                  ##   Call between Ltmp23 and Ltmp24\n\t.long\tLset27\nLset28 = Ltmp25-Lfunc_begin1            ##     jumps to Ltmp25\n\t.long\tLset28\n\t.byte\t5                       ##   On action: 3\nLset29 = Ltmp24-Lfunc_begin1            ## >> Call Site 9 <<\n\t.long\tLset29\nLset30 = Lfunc_end1-Ltmp24              ##   Call between Ltmp24 and Lfunc_end1\n\t.long\tLset30\n\t.long\t0                       ##     has no landing pad\n\t.byte\t0                       ##   On action: cleanup\n\t.byte\t0                       ## >> Action Record 1 <<\n                                        ##   Cleanup\n\t.byte\t0                       ##   No further actions\n\t.byte\t1                       ## >> Action Record 2 <<\n                                        ##   Catch TypeInfo 1\n\t.byte\t125                     ##   Continue to action 1\n\t.byte\t1                       ## >> Action Record 3 <<\n                                        ##   Catch TypeInfo 1\n\t.byte\t0                       ##   No further actions\n                                        ## >> Catch TypeInfos <<\n\t.long\t0                       ## TypeInfo 1\n\t.p2align\t2\n                                        ## -- End function\n\t.section\t__TEXT,__text,regular,pure_instructions\n\t.globl\t__ZNSt3__111char_traitsIcE6lengthEPKc ## -- Begin function _ZNSt3__111char_traitsIcE6lengthEPKc\n\t.weak_definition\t__ZNSt3__111char_traitsIcE6lengthEPKc\n\t.p2align\t4, 0x90\n__ZNSt3__111char_traitsIcE6lengthEPKc:  ## @_ZNSt3__111char_traitsIcE6lengthEPKc\n\t.cfi_startproc\n## BB#0:\n\tpushq\t%rbp\nLcfi12:\n\t.cfi_def_cfa_offset 16\nLcfi13:\n\t.cfi_offset %rbp, -16\n\tmovq\t%rsp, %rbp\nLcfi14:\n\t.cfi_def_cfa_register %rbp\n\tsubq\t$16, %rsp\n\tmovq\t%rdi, -8(%rbp)\n\tmovq\t-8(%rbp), %rdi\n\tcallq\t_strlen\n\taddq\t$16, %rsp\n\tpopq\t%rbp\n\tretq\n\t.cfi_endproc\n                                        ## -- End function\n\t.private_extern\t__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ ## -- Begin function _ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_\n\t.globl\t__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_\n\t.weak_definition\t__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_\n\t.p2align\t4, 0x90\n__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_: ## @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_\nLfunc_begin2:\n\t.cfi_startproc\n\t.cfi_personality 155, ___gxx_personality_v0\n\t.cfi_lsda 16, Lexception2\n## BB#0:\n\tpushq\t%rbp\nLcfi15:\n\t.cfi_def_cfa_offset 16\nLcfi16:\n\t.cfi_offset %rbp, -16\n\tmovq\t%rsp, %rbp\nLcfi17:\n\t.cfi_def_cfa_register %rbp\n\tsubq\t$480, %rsp              ## imm = 0x1E0\n\tmovb\t%r9b, %al\n\tmovq\t%rdi, -320(%rbp)\n\tmovq\t%rsi, -328(%rbp)\n\tmovq\t%rdx, -336(%rbp)\n\tmovq\t%rcx, -344(%rbp)\n\tmovq\t%r8, -352(%rbp)\n\tmovb\t%al, -353(%rbp)\n\tcmpq\t$0, -320(%rbp)\n\tjne\tLBB5_2\n## BB#1:\n\tmovq\t-320(%rbp), %rax\n\tmovq\t%rax, -312(%rbp)\n\tjmp\tLBB5_26\nLBB5_2:\n\tmovq\t-344(%rbp), %rax\n\tmovq\t-328(%rbp), %rcx\n\tsubq\t%rcx, %rax\n\tmovq\t%rax, -368(%rbp)\n\tmovq\t-352(%rbp), %rax\n\tmovq\t%rax, -304(%rbp)\n\tmovq\t-304(%rbp), %rax\n\tmovq\t24(%rax), %rax\n\tmovq\t%rax, -376(%rbp)\n\tmovq\t-376(%rbp), %rax\n\tcmpq\t-368(%rbp), %rax\n\tjle\tLBB5_4\n## BB#3:\n\tmovq\t-368(%rbp), %rax\n\tmovq\t-376(%rbp), %rcx\n\tsubq\t%rax, %rcx\n\tmovq\t%rcx, -376(%rbp)\n\tjmp\tLBB5_5\nLBB5_4:\n\tmovq\t$0, -376(%rbp)\nLBB5_5:\n\tmovq\t-336(%rbp), %rax\n\tmovq\t-328(%rbp), %rcx\n\tsubq\t%rcx, %rax\n\tmovq\t%rax, -384(%rbp)\n\tcmpq\t$0, -384(%rbp)\n\tjle\tLBB5_9\n## BB#6:\n\tmovq\t-320(%rbp), %rax\n\tmovq\t-328(%rbp), %rcx\n\tmovq\t-384(%rbp), %rdx\n\tmovq\t%rax, -232(%rbp)\n\tmovq\t%rcx, -240(%rbp)\n\tmovq\t%rdx, -248(%rbp)\n\tmovq\t-232(%rbp), %rax\n\tmovq\t(%rax), %rcx\n\tmovq\t96(%rcx), %rcx\n\tmovq\t-240(%rbp), %rsi\n\tmovq\t-248(%rbp), %rdx\n\tmovq\t%rax, %rdi\n\tcallq\t*%rcx\n\tcmpq\t-384(%rbp), %rax\n\tje\tLBB5_8\n## BB#7:\n\tmovq\t$0, -320(%rbp)\n\tmovq\t-320(%rbp), %rax\n\tmovq\t%rax, -312(%rbp)\n\tjmp\tLBB5_26\nLBB5_8:\n\tjmp\tLBB5_9\nLBB5_9:\n\tcmpq\t$0, -376(%rbp)\n\tjle\tLBB5_21\n## BB#10:\n\txorl\t%esi, %esi\n\tmovl\t$24, %eax\n\tmovl\t%eax, %edx\n\tleaq\t-408(%rbp), %rcx\n\tmovq\t-376(%rbp), %rdi\n\tmovb\t-353(%rbp), %r8b\n\tmovq\t%rcx, -208(%rbp)\n\tmovq\t%rdi, -216(%rbp)\n\tmovb\t%r8b, -217(%rbp)\n\tmovq\t-208(%rbp), %rcx\n\tmovq\t-216(%rbp), %rdi\n\tmovb\t-217(%rbp), %r8b\n\tmovq\t%rcx, -184(%rbp)\n\tmovq\t%rdi, -192(%rbp)\n\tmovb\t%r8b, -193(%rbp)\n\tmovq\t-184(%rbp), %rcx\n\tmovq\t%rcx, -176(%rbp)\n\tmovq\t-176(%rbp), %rdi\n\tmovq\t%rdi, -168(%rbp)\n\tmovq\t-168(%rbp), %rdi\n\tmovq\t%rdi, %r9\n\tmovq\t%r9, -160(%rbp)\n\tmovq\t-160(%rbp), %r9\n\tmovq\t%rdi, -432(%rbp)        ## 8-byte Spill\n\tmovq\t%r9, %rdi\n\tmovq\t%rcx, -440(%rbp)        ## 8-byte Spill\n\tcallq\t_memset\n\tmovq\t-432(%rbp), %rcx        ## 8-byte Reload\n\tmovq\t%rcx, -152(%rbp)\n\tmovq\t-152(%rbp), %rcx\n\tmovq\t%rcx, -144(%rbp)\n\tmovq\t-192(%rbp), %rsi\n\tmovq\t-440(%rbp), %rdi        ## 8-byte Reload\n\tmovsbl\t-193(%rbp), %edx\n\tcallq\t__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEmc\n\tleaq\t-408(%rbp), %rcx\n\tmovq\t-320(%rbp), %rsi\n\tmovq\t%rcx, -136(%rbp)\n\tmovq\t-136(%rbp), %rcx\n\tmovq\t%rcx, -128(%rbp)\n\tmovq\t-128(%rbp), %rcx\n\tmovq\t%rcx, -120(%rbp)\n\tmovq\t-120(%rbp), %rdi\n\tmovq\t%rdi, -112(%rbp)\n\tmovq\t-112(%rbp), %rdi\n\tmovq\t%rdi, -104(%rbp)\n\tmovq\t-104(%rbp), %rdi\n\tmovzbl\t(%rdi), %eax\n\tmovl\t%eax, %edi\n\tandq\t$1, %rdi\n\tcmpq\t$0, %rdi\n\tmovq\t%rsi, -448(%rbp)        ## 8-byte Spill\n\tmovq\t%rcx, -456(%rbp)        ## 8-byte Spill\n\tje\tLBB5_12\n## BB#11:\n\tmovq\t-456(%rbp), %rax        ## 8-byte Reload\n\tmovq\t%rax, -56(%rbp)\n\tmovq\t-56(%rbp), %rcx\n\tmovq\t%rcx, -48(%rbp)\n\tmovq\t-48(%rbp), %rcx\n\tmovq\t%rcx, -40(%rbp)\n\tmovq\t-40(%rbp), %rcx\n\tmovq\t16(%rcx), %rcx\n\tmovq\t%rcx, -464(%rbp)        ## 8-byte Spill\n\tjmp\tLBB5_13\nLBB5_12:\n\tmovq\t-456(%rbp), %rax        ## 8-byte Reload\n\tmovq\t%rax, -96(%rbp)\n\tmovq\t-96(%rbp), %rcx\n\tmovq\t%rcx, -88(%rbp)\n\tmovq\t-88(%rbp), %rcx\n\tmovq\t%rcx, -80(%rbp)\n\tmovq\t-80(%rbp), %rcx\n\taddq\t$1, %rcx\n\tmovq\t%rcx, -72(%rbp)\n\tmovq\t-72(%rbp), %rcx\n\tmovq\t%rcx, -64(%rbp)\n\tmovq\t-64(%rbp), %rcx\n\tmovq\t%rcx, -464(%rbp)        ## 8-byte Spill\nLBB5_13:\n\tmovq\t-464(%rbp), %rax        ## 8-byte Reload\n\tmovq\t%rax, -32(%rbp)\n\tmovq\t-32(%rbp), %rax\n\tmovq\t-376(%rbp), %rcx\n\tmovq\t-448(%rbp), %rdx        ## 8-byte Reload\n\tmovq\t%rdx, -8(%rbp)\n\tmovq\t%rax, -16(%rbp)\n\tmovq\t%rcx, -24(%rbp)\n\tmovq\t-8(%rbp), %rax\n\tmovq\t(%rax), %rcx\n\tmovq\t96(%rcx), %rcx\n\tmovq\t-16(%rbp), %rsi\n\tmovq\t-24(%rbp), %rdx\nLtmp26:\n\tmovq\t%rax, %rdi\n\tcallq\t*%rcx\nLtmp27:\n\tmovq\t%rax, -472(%rbp)        ## 8-byte Spill\n\tjmp\tLBB5_14\nLBB5_14:\n\tjmp\tLBB5_15\nLBB5_15:\n\tmovq\t-472(%rbp), %rax        ## 8-byte Reload\n\tcmpq\t-376(%rbp), %rax\n\tje\tLBB5_18\n## BB#16:\n\tmovq\t$0, -320(%rbp)\n\tmovq\t-320(%rbp), %rax\n\tmovq\t%rax, -312(%rbp)\n\tmovl\t$1, -424(%rbp)\n\tjmp\tLBB5_19\nLBB5_17:\nLtmp28:\n\tleaq\t-408(%rbp), %rdi\n\tmovl\t%edx, %ecx\n\tmovq\t%rax, -416(%rbp)\n\tmovl\t%ecx, -420(%rbp)\n\tcallq\t__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev\n\tjmp\tLBB5_27\nLBB5_18:\n\tmovl\t$0, -424(%rbp)\nLBB5_19:\n\tleaq\t-408(%rbp), %rdi\n\tcallq\t__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev\n\tmovl\t-424(%rbp), %eax\n\ttestl\t%eax, %eax\n\tmovl\t%eax, -476(%rbp)        ## 4-byte Spill\n\tje\tLBB5_20\n\tjmp\tLBB5_29\nLBB5_29:\n\tmovl\t-476(%rbp), %eax        ## 4-byte Reload\n\tsubl\t$1, %eax\n\tmovl\t%eax, -480(%rbp)        ## 4-byte Spill\n\tje\tLBB5_26\n\tjmp\tLBB5_28\nLBB5_20:\n\tjmp\tLBB5_21\nLBB5_21:\n\tmovq\t-344(%rbp), %rax\n\tmovq\t-336(%rbp), %rcx\n\tsubq\t%rcx, %rax\n\tmovq\t%rax, -384(%rbp)\n\tcmpq\t$0, -384(%rbp)\n\tjle\tLBB5_25\n## BB#22:\n\tmovq\t-320(%rbp), %rax\n\tmovq\t-336(%rbp), %rcx\n\tmovq\t-384(%rbp), %rdx\n\tmovq\t%rax, -256(%rbp)\n\tmovq\t%rcx, -264(%rbp)\n\tmovq\t%rdx, -272(%rbp)\n\tmovq\t-256(%rbp), %rax\n\tmovq\t(%rax), %rcx\n\tmovq\t96(%rcx), %rcx\n\tmovq\t-264(%rbp), %rsi\n\tmovq\t-272(%rbp), %rdx\n\tmovq\t%rax, %rdi\n\tcallq\t*%rcx\n\tcmpq\t-384(%rbp), %rax\n\tje\tLBB5_24\n## BB#23:\n\tmovq\t$0, -320(%rbp)\n\tmovq\t-320(%rbp), %rax\n\tmovq\t%rax, -312(%rbp)\n\tjmp\tLBB5_26\nLBB5_24:\n\tjmp\tLBB5_25\nLBB5_25:\n\tmovq\t-352(%rbp), %rax\n\tmovq\t%rax, -280(%rbp)\n\tmovq\t$0, -288(%rbp)\n\tmovq\t-280(%rbp), %rax\n\tmovq\t24(%rax), %rcx\n\tmovq\t%rcx, -296(%rbp)\n\tmovq\t-288(%rbp), %rcx\n\tmovq\t%rcx, 24(%rax)\n\tmovq\t-320(%rbp), %rax\n\tmovq\t%rax, -312(%rbp)\nLBB5_26:\n\tmovq\t-312(%rbp), %rax\n\taddq\t$480, %rsp              ## imm = 0x1E0\n\tpopq\t%rbp\n\tretq\nLBB5_27:\n\tmovq\t-416(%rbp), %rdi\n\tcallq\t__Unwind_Resume\nLBB5_28:\nLfunc_end2:\n\t.cfi_endproc\n\t.section\t__TEXT,__gcc_except_tab\n\t.p2align\t2\nGCC_except_table5:\nLexception2:\n\t.byte\t255                     ## @LPStart Encoding = omit\n\t.byte\t155                     ## @TType Encoding = indirect pcrel sdata4\n\t.byte\t41                      ## @TType base offset\n\t.byte\t3                       ## Call site Encoding = udata4\n\t.byte\t39                      ## Call site table length\nLset31 = Lfunc_begin2-Lfunc_begin2      ## >> Call Site 1 <<\n\t.long\tLset31\nLset32 = Ltmp26-Lfunc_begin2            ##   Call between Lfunc_begin2 and Ltmp26\n\t.long\tLset32\n\t.long\t0                       ##     has no landing pad\n\t.byte\t0                       ##   On action: cleanup\nLset33 = Ltmp26-Lfunc_begin2            ## >> Call Site 2 <<\n\t.long\tLset33\nLset34 = Ltmp27-Ltmp26                  ##   Call between Ltmp26 and Ltmp27\n\t.long\tLset34\nLset35 = Ltmp28-Lfunc_begin2            ##     jumps to Ltmp28\n\t.long\tLset35\n\t.byte\t0                       ##   On action: cleanup\nLset36 = Ltmp27-Lfunc_begin2            ## >> Call Site 3 <<\n\t.long\tLset36\nLset37 = Lfunc_end2-Ltmp27              ##   Call between Ltmp27 and Lfunc_end2\n\t.long\tLset37\n\t.long\t0                       ##     has no landing pad\n\t.byte\t0                       ##   On action: cleanup\n\t.p2align\t2\n                                        ## -- End function\n\t.section\t__TEXT,__text,regular,pure_instructions\n\t.private_extern\t___clang_call_terminate ## -- Begin function __clang_call_terminate\n\t.globl\t___clang_call_terminate\n\t.weak_definition\t___clang_call_terminate\n\t.p2align\t4, 0x90\n___clang_call_terminate:                ## @__clang_call_terminate\n## BB#0:\n\tpushq\t%rax\n\tcallq\t___cxa_begin_catch\n\tmovq\t%rax, (%rsp)            ## 8-byte Spill\n\tcallq\t__ZSt9terminatev\n                                        ## -- End function\n\t.globl\t__ZNSt3__111char_traitsIcE11eq_int_typeEii ## -- Begin function _ZNSt3__111char_traitsIcE11eq_int_typeEii\n\t.weak_definition\t__ZNSt3__111char_traitsIcE11eq_int_typeEii\n\t.p2align\t4, 0x90\n__ZNSt3__111char_traitsIcE11eq_int_typeEii: ## @_ZNSt3__111char_traitsIcE11eq_int_typeEii\n\t.cfi_startproc\n## BB#0:\n\tpushq\t%rbp\nLcfi18:\n\t.cfi_def_cfa_offset 16\nLcfi19:\n\t.cfi_offset %rbp, -16\n\tmovq\t%rsp, %rbp\nLcfi20:\n\t.cfi_def_cfa_register %rbp\n\tmovl\t%edi, -4(%rbp)\n\tmovl\t%esi, -8(%rbp)\n\tmovl\t-4(%rbp), %esi\n\tcmpl\t-8(%rbp), %esi\n\tsete\t%al\n\tandb\t$1, %al\n\tmovzbl\t%al, %eax\n\tpopq\t%rbp\n\tretq\n\t.cfi_endproc\n                                        ## -- End function\n\t.globl\t__ZNSt3__111char_traitsIcE3eofEv ## -- Begin function _ZNSt3__111char_traitsIcE3eofEv\n\t.weak_definition\t__ZNSt3__111char_traitsIcE3eofEv\n\t.p2align\t4, 0x90\n__ZNSt3__111char_traitsIcE3eofEv:       ## @_ZNSt3__111char_traitsIcE3eofEv\n\t.cfi_startproc\n## BB#0:\n\tpushq\t%rbp\nLcfi21:\n\t.cfi_def_cfa_offset 16\nLcfi22:\n\t.cfi_offset %rbp, -16\n\tmovq\t%rsp, %rbp\nLcfi23:\n\t.cfi_def_cfa_register %rbp\n\tmovl\t$4294967295, %eax       ## imm = 0xFFFFFFFF\n\tpopq\t%rbp\n\tretq\n\t.cfi_endproc\n                                        ## -- End function\n\t.section\t__TEXT,__const\n\t.p2align\t2               ## @_ZZ4mainE5array\nl__ZZ4mainE5array:\n\t.long\t2700                    ## 0xa8c\n\t.long\t2314                    ## 0x90a\n\t.long\t8429                    ## 0x20ed\n\t.long\t7726                    ## 0x1e2e\n\t.long\t4817                    ## 0x12d1\n\t.long\t8716                    ## 0x220c\n\t.long\t3598                    ## 0xe0e\n\t.long\t6255                    ## 0x186f\n\t.long\t5056                    ## 0x13c0\n\t.long\t8653                    ## 0x21cd\n\t.long\t8571                    ## 0x217b\n\t.long\t5028                    ## 0x13a4\n\t.long\t1259                    ## 0x4eb\n\t.long\t3315                    ## 0xcf3\n\t.long\t2896                    ## 0xb50\n\t.long\t1411                    ## 0x583\n\t.long\t3847                    ## 0xf07\n\t.long\t879                     ## 0x36f\n\t.long\t7353                    ## 0x1cb9\n\t.long\t8056                    ## 0x1f78\n\t.long\t8765                    ## 0x223d\n\t.long\t2344                    ## 0x928\n\t.long\t6349                    ## 0x18cd\n\t.long\t4156                    ## 0x103c\n\t.long\t8350                    ## 0x209e\n\t.long\t4164                    ## 0x1044\n\t.long\t4783                    ## 0x12af\n\t.long\t6800                    ## 0x1a90\n\t.long\t8887                    ## 0x22b7\n\t.long\t267                     ## 0x10b\n\t.long\t4478                    ## 0x117e\n\t.long\t6327                    ## 0x18b7\n\t.long\t58                      ## 0x3a\n\t.long\t7961                    ## 0x1f19\n\t.long\t756                     ## 0x2f4\n\t.long\t5654                    ## 0x1616\n\t.long\t9546                    ## 0x254a\n\t.long\t5132                    ## 0x140c\n\t.long\t247                     ## 0xf7\n\t.long\t5514                    ## 0x158a\n\t.long\t7098                    ## 0x1bba\n\t.long\t1156                    ## 0x484\n\t.long\t795                     ## 0x31b\n\t.long\t2502                    ## 0x9c6\n\t.long\t367                     ## 0x16f\n\t.long\t5330                    ## 0x14d2\n\t.long\t2261                    ## 0x8d5\n\t.long\t8692                    ## 0x21f4\n\t.long\t2460                    ## 0x99c\n\t.long\t4823                    ## 0x12d7\n\t.long\t8968                    ## 0x2308\n\t.long\t4976                    ## 0x1370\n\t.long\t1929                    ## 0x789\n\t.long\t1051                    ## 0x41b\n\t.long\t9249                    ## 0x2421\n\t.long\t9713                    ## 0x25f1\n\t.long\t2803                    ## 0xaf3\n\t.long\t1743                    ## 0x6cf\n\t.long\t3681                    ## 0xe61\n\t.long\t93                      ## 0x5d\n\t.long\t4967                    ## 0x1367\n\t.long\t2245                    ## 0x8c5\n\t.long\t198                     ## 0xc6\n\t.long\t896                     ## 0x380\n\t.long\t6372                    ## 0x18e4\n\t.long\t4413                    ## 0x113d\n\t.long\t2615                    ## 0xa37\n\t.long\t6130                    ## 0x17f2\n\t.long\t5766                    ## 0x1686\n\t.long\t5306                    ## 0x14ba\n\t.long\t1236                    ## 0x4d4\n\t.long\t888                     ## 0x378\n\t.long\t8050                    ## 0x1f72\n\t.long\t7080                    ## 0x1ba8\n\t.long\t3460                    ## 0xd84\n\t.long\t3473                    ## 0xd91\n\t.long\t1720                    ## 0x6b8\n\t.long\t3913                    ## 0xf49\n\t.long\t3449                    ## 0xd79\n\t.long\t8420                    ## 0x20e4\n\t.long\t1814                    ## 0x716\n\t.long\t1261                    ## 0x4ed\n\t.long\t1368                    ## 0x558\n\t.long\t167                     ## 0xa7\n\t.long\t7938                    ## 0x1f02\n\t.long\t4483                    ## 0x1183\n\t.long\t4843                    ## 0x12eb\n\t.long\t4682                    ## 0x124a\n\t.long\t3301                    ## 0xce5\n\t.long\t4038                    ## 0xfc6\n\t.long\t709                     ## 0x2c5\n\t.long\t8655                    ## 0x21cf\n\t.long\t598                     ## 0x256\n\t.long\t3857                    ## 0xf11\n\t.long\t6285                    ## 0x188d\n\t.long\t2961                    ## 0xb91\n\t.long\t6817                    ## 0x1aa1\n\t.long\t1031                    ## 0x407\n\t.long\t4007                    ## 0xfa7\n\t.long\t1392                    ## 0x570\n\t.long\t5717                    ## 0x1655\n\t.long\t5837                    ## 0x16cd\n\t.long\t5695                    ## 0x163f\n\t.long\t9511                    ## 0x2527\n\t.long\t8891                    ## 0x22bb\n\t.long\t7883                    ## 0x1ecb\n\t.long\t7035                    ## 0x1b7b\n\t.long\t2349                    ## 0x92d\n\t.long\t5752                    ## 0x1678\n\t.long\t3139                    ## 0xc43\n\t.long\t2442                    ## 0x98a\n\t.long\t3966                    ## 0xf7e\n\t.long\t2007                    ## 0x7d7\n\t.long\t9205                    ## 0x23f5\n\t.long\t8434                    ## 0x20f2\n\t.long\t5065                    ## 0x13c9\n\t.long\t3795                    ## 0xed3\n\t.long\t6890                    ## 0x1aea\n\t.long\t2715                    ## 0xa9b\n\t.long\t1                       ## 0x1\n\t.long\t5106                    ## 0x13f2\n\t.long\t5083                    ## 0x13db\n\n\t.section\t__TEXT,__cstring,cstring_literals\nL_.str:                                 ## @.str\n\t.space\t1\n\nL_.str.1:                               ## @.str.1\n\t.asciz\t\"hello, world\"\n\n\n.subsections_via_symbols\n\n```\n\n由于汇编太长，我们可以只关注 `cmpl $1000, (%rax)` 这一行比较，在第一份中出现了两次与 1000 进行比较，而第二份中进行了一次，编译器完美直译了代码。然而在生产环境中我们是不和这样发布代码的，一般都会进行 O3 优化。所以当我们开启优化后，汇编代码如下：\n\n```assembly\n\t.section\t__TEXT,__text,regular,pure_instructions\n\t.macosx_version_min 10, 13\n\t.globl\t_main                   ## -- Begin function main\n\t.p2align\t4, 0x90\n_main:                                  ## @main\nLfunc_begin0:\n\t.cfi_startproc\n\t.cfi_personality 155, ___gxx_personality_v0\n\t.cfi_lsda 16, Lexception0\n## BB#0:\n\tpushq\t%rbp\nLcfi0:\n\t.cfi_def_cfa_offset 16\nLcfi1:\n\t.cfi_offset %rbp, -16\n\tmovq\t%rsp, %rbp\nLcfi2:\n\t.cfi_def_cfa_register %rbp\n\tpushq\t%r15\n\tpushq\t%r14\n\tpushq\t%r13\n\tpushq\t%r12\n\tpushq\t%rbx\n\tsubq\t$504, %rsp              ## imm = 0x1F8\nLcfi3:\n\t.cfi_offset %rbx, -56\nLcfi4:\n\t.cfi_offset %r12, -48\nLcfi5:\n\t.cfi_offset %r13, -40\nLcfi6:\n\t.cfi_offset %r14, -32\nLcfi7:\n\t.cfi_offset %r15, -24\n\tleaq\tl__ZZ4mainE5array(%rip), %rsi\n\tleaq\t-536(%rbp), %rdi\n\tmovl\t$488, %edx              ## imm = 0x1E8\n\tcallq\t_memcpy\n\tmovl\t$2700, %eax             ## imm = 0xA8C\n\tmovl\t$4, %ebx\n\tmovq\t__ZNSt3__14coutE@GOTPCREL(%rip), %r14\n\tleaq\tL_.str(%rip), %r15\n\tcmpl\t$1001, %eax             ## imm = 0x3E9\n\tjl\tLBB0_3\n\tjmp\tLBB0_2\n\t.p2align\t4, 0x90\nLBB0_4:                                 ##   in Loop: Header=BB0_3 Depth=1\n\tmovl\t-536(%rbp,%rbx), %eax\n\taddq\t$4, %rbx\n\tcmpl\t$1001, %eax             ## imm = 0x3E9\n\tjl\tLBB0_3\nLBB0_2:\n\txorl\t%edx, %edx\n\tmovq\t%r14, %rdi\n\tmovq\t%r15, %rsi\n\tcallq\t__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m\nLBB0_3:                                 ## =>This Inner Loop Header: Depth=1\n\tcmpq\t$488, %rbx              ## imm = 0x1E8\n\tjne\tLBB0_4\n## BB#5:\n\txorl\t%r15d, %r15d\n\tleaq\t-48(%rbp), %r13\n\tmovq\t__ZNSt3__15ctypeIcE2idE@GOTPCREL(%rip), %r12\n\t.p2align\t4, 0x90\nLBB0_6:                                 ## =>This Inner Loop Header: Depth=1\n\tcmpl\t$5330, -536(%rbp,%r15)  ## imm = 0x14D2\n\tjne\tLBB0_10\n## BB#7:                                ##   in Loop: Header=BB0_6 Depth=1\n\tmovl\t$12, %edx\n\tmovq\t__ZNSt3__14coutE@GOTPCREL(%rip), %rdi\n\tleaq\tL_.str.1(%rip), %rsi\n\tcallq\t__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m\n\tmovq\t%rax, %rbx\n\tmovq\t(%rbx), %rax\n\tmovq\t-24(%rax), %rsi\n\taddq\t%rbx, %rsi\n\tmovq\t%r13, %rdi\n\tcallq\t__ZNKSt3__18ios_base6getlocEv\nLtmp0:\n\tmovq\t%r13, %rdi\n\tmovq\t%r12, %rsi\n\tcallq\t__ZNKSt3__16locale9use_facetERNS0_2idE\nLtmp1:\n## BB#8:                                ##   in Loop: Header=BB0_6 Depth=1\n\tmovq\t(%rax), %rcx\nLtmp2:\n\tmovl\t$10, %esi\n\tmovq\t%rax, %rdi\n\tcallq\t*56(%rcx)\n\tmovl\t%eax, %r14d\nLtmp3:\n## BB#9:                                ##   in Loop: Header=BB0_6 Depth=1\n\tmovq\t%r13, %rdi\n\tcallq\t__ZNSt3__16localeD1Ev\n\tmovsbl\t%r14b, %esi\n\tmovq\t%rbx, %rdi\n\tcallq\t__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc\n\tmovq\t%rbx, %rdi\n\tcallq\t__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv\nLBB0_10:                                ##   in Loop: Header=BB0_6 Depth=1\n\taddq\t$4, %r15\n\tcmpq\t$488, %r15              ## imm = 0x1E8\n\tjne\tLBB0_6\n## BB#11:\n\txorl\t%eax, %eax\n\taddq\t$504, %rsp              ## imm = 0x1F8\n\tpopq\t%rbx\n\tpopq\t%r12\n\tpopq\t%r13\n\tpopq\t%r14\n\tpopq\t%r15\n\tpopq\t%rbp\n\tretq\nLBB0_12:\nLtmp4:\n\tmovq\t%rax, %rbx\n\tleaq\t-48(%rbp), %rdi\n\tcallq\t__ZNSt3__16localeD1Ev\n\tmovq\t%rbx, %rdi\n\tcallq\t__Unwind_Resume\nLfunc_end0:\n\t.cfi_endproc\n\t.section\t__TEXT,__gcc_except_tab\n\t.p2align\t2\nGCC_except_table0:\nLexception0:\n\t.byte\t255                     ## @LPStart Encoding = omit\n\t.byte\t155                     ## @TType Encoding = indirect pcrel sdata4\n\t.byte\t41                      ## @TType base offset\n\t.byte\t3                       ## Call site Encoding = udata4\n\t.byte\t39                      ## Call site table length\nLset0 = Lfunc_begin0-Lfunc_begin0       ## >> Call Site 1 <<\n\t.long\tLset0\nLset1 = Ltmp0-Lfunc_begin0              ##   Call between Lfunc_begin0 and Ltmp0\n\t.long\tLset1\n\t.long\t0                       ##     has no landing pad\n\t.byte\t0                       ##   On action: cleanup\nLset2 = Ltmp0-Lfunc_begin0              ## >> Call Site 2 <<\n\t.long\tLset2\nLset3 = Ltmp3-Ltmp0                     ##   Call between Ltmp0 and Ltmp3\n\t.long\tLset3\nLset4 = Ltmp4-Lfunc_begin0              ##     jumps to Ltmp4\n\t.long\tLset4\n\t.byte\t0                       ##   On action: cleanup\nLset5 = Ltmp3-Lfunc_begin0              ## >> Call Site 3 <<\n\t.long\tLset5\nLset6 = Lfunc_end0-Ltmp3                ##   Call between Ltmp3 and Lfunc_end0\n\t.long\tLset6\n\t.long\t0                       ##     has no landing pad\n\t.byte\t0                       ##   On action: cleanup\n\t.p2align\t2\n                                        ## -- End function\n\t.section\t__TEXT,__text,regular,pure_instructions\n\t.globl\t__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## -- Begin function _ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m\n\t.weak_def_can_be_hidden\t__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m\n\t.p2align\t4, 0x90\n__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m: ## @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m\nLfunc_begin1:\n\t.cfi_startproc\n\t.cfi_personality 155, ___gxx_personality_v0\n\t.cfi_lsda 16, Lexception1\n## BB#0:\n\tpushq\t%rbp\nLcfi8:\n\t.cfi_def_cfa_offset 16\nLcfi9:\n\t.cfi_offset %rbp, -16\n\tmovq\t%rsp, %rbp\nLcfi10:\n\t.cfi_def_cfa_register %rbp\n\tpushq\t%r15\n\tpushq\t%r14\n\tpushq\t%r13\n\tpushq\t%r12\n\tpushq\t%rbx\n\tsubq\t$40, %rsp\nLcfi11:\n\t.cfi_offset %rbx, -56\nLcfi12:\n\t.cfi_offset %r12, -48\nLcfi13:\n\t.cfi_offset %r13, -40\nLcfi14:\n\t.cfi_offset %r14, -32\nLcfi15:\n\t.cfi_offset %r15, -24\n\tmovq\t%rdx, %r14\n\tmovq\t%rsi, %r15\n\tmovq\t%rdi, %rbx\nLtmp5:\n\tleaq\t-80(%rbp), %rdi\n\tmovq\t%rbx, %rsi\n\tcallq\t__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_\nLtmp6:\n## BB#1:\n\tcmpb\t$0, -80(%rbp)\n\tje\tLBB1_10\n## BB#2:\n\tmovq\t(%rbx), %rax\n\tmovq\t-24(%rax), %rax\n\tleaq\t(%rbx,%rax), %r12\n\tmovq\t40(%rbx,%rax), %rdi\n\tmovl\t8(%rbx,%rax), %r13d\n\tmovl\t144(%rbx,%rax), %eax\n\tcmpl\t$-1, %eax\n\tjne\tLBB1_7\n## BB#3:\nLtmp8:\n\tmovq\t%rdi, -64(%rbp)         ## 8-byte Spill\n\tleaq\t-56(%rbp), %rdi\n\tmovq\t%r12, %rsi\n\tcallq\t__ZNKSt3__18ios_base6getlocEv\nLtmp9:\n## BB#4:\nLtmp10:\n\tmovq\t__ZNSt3__15ctypeIcE2idE@GOTPCREL(%rip), %rsi\n\tleaq\t-56(%rbp), %rdi\n\tcallq\t__ZNKSt3__16locale9use_facetERNS0_2idE\nLtmp11:\n## BB#5:\n\tmovq\t(%rax), %rcx\nLtmp12:\n\tmovl\t$32, %esi\n\tmovq\t%rax, %rdi\n\tcallq\t*56(%rcx)\n\tmovb\t%al, -41(%rbp)          ## 1-byte Spill\nLtmp13:\n## BB#6:\n\tleaq\t-56(%rbp), %rdi\n\tcallq\t__ZNSt3__16localeD1Ev\n\tmovsbl\t-41(%rbp), %eax         ## 1-byte Folded Reload\n\tmovl\t%eax, 144(%r12)\n\tmovq\t-64(%rbp), %rdi         ## 8-byte Reload\nLBB1_7:\n\taddq\t%r15, %r14\n\tandl\t$176, %r13d\n\tcmpl\t$32, %r13d\n\tmovq\t%r15, %rdx\n\tcmoveq\t%r14, %rdx\nLtmp15:\n\tmovsbl\t%al, %r9d\n\tmovq\t%r15, %rsi\n\tmovq\t%r14, %rcx\n\tmovq\t%r12, %r8\n\tcallq\t__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_\nLtmp16:\n## BB#8:\n\ttestq\t%rax, %rax\n\tjne\tLBB1_10\n## BB#9:\n\tmovq\t(%rbx), %rax\n\tmovq\t-24(%rax), %rax\n\tleaq\t(%rbx,%rax), %rdi\n\tmovl\t32(%rbx,%rax), %esi\n\torl\t$5, %esi\nLtmp18:\n\tcallq\t__ZNSt3__18ios_base5clearEj\nLtmp19:\nLBB1_10:\n\tleaq\t-80(%rbp), %rdi\n\tcallq\t__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev\nLBB1_11:\n\tmovq\t%rbx, %rax\n\taddq\t$40, %rsp\n\tpopq\t%rbx\n\tpopq\t%r12\n\tpopq\t%r13\n\tpopq\t%r14\n\tpopq\t%r15\n\tpopq\t%rbp\n\tretq\nLBB1_12:\nLtmp20:\n\tjmp\tLBB1_15\nLBB1_13:\nLtmp14:\n\tmovq\t%rax, %r14\n\tleaq\t-56(%rbp), %rdi\n\tcallq\t__ZNSt3__16localeD1Ev\n\tjmp\tLBB1_16\nLBB1_14:\nLtmp17:\nLBB1_15:\n\tmovq\t%rax, %r14\nLBB1_16:\n\tleaq\t-80(%rbp), %rdi\n\tcallq\t__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev\n\tjmp\tLBB1_18\nLBB1_17:\nLtmp7:\n\tmovq\t%rax, %r14\nLBB1_18:\n\tmovq\t%r14, %rdi\n\tcallq\t___cxa_begin_catch\n\tmovq\t(%rbx), %rax\n\tmovq\t%rbx, %rdi\n\taddq\t-24(%rax), %rdi\nLtmp21:\n\tcallq\t__ZNSt3__18ios_base33__set_badbit_and_consider_rethrowEv\nLtmp22:\n## BB#19:\n\tcallq\t___cxa_end_catch\n\tjmp\tLBB1_11\nLBB1_20:\nLtmp23:\n\tmovq\t%rax, %rbx\nLtmp24:\n\tcallq\t___cxa_end_catch\nLtmp25:\n## BB#21:\n\tmovq\t%rbx, %rdi\n\tcallq\t__Unwind_Resume\nLBB1_22:\nLtmp26:\n\tmovq\t%rax, %rdi\n\tcallq\t___clang_call_terminate\nLfunc_end1:\n\t.cfi_endproc\n\t.section\t__TEXT,__gcc_except_tab\n\t.p2align\t2\nGCC_except_table1:\nLexception1:\n\t.byte\t255                     ## @LPStart Encoding = omit\n\t.byte\t155                     ## @TType Encoding = indirect pcrel sdata4\n\t.asciz\t\"\\213\\201\"              ## @TType base offset\n\t.byte\t3                       ## Call site Encoding = udata4\n\t.ascii\t\"\\202\\001\"              ## Call site table length\nLset7 = Ltmp5-Lfunc_begin1              ## >> Call Site 1 <<\n\t.long\tLset7\nLset8 = Ltmp6-Ltmp5                     ##   Call between Ltmp5 and Ltmp6\n\t.long\tLset8\nLset9 = Ltmp7-Lfunc_begin1              ##     jumps to Ltmp7\n\t.long\tLset9\n\t.byte\t1                       ##   On action: 1\nLset10 = Ltmp8-Lfunc_begin1             ## >> Call Site 2 <<\n\t.long\tLset10\nLset11 = Ltmp9-Ltmp8                    ##   Call between Ltmp8 and Ltmp9\n\t.long\tLset11\nLset12 = Ltmp17-Lfunc_begin1            ##     jumps to Ltmp17\n\t.long\tLset12\n\t.byte\t1                       ##   On action: 1\nLset13 = Ltmp10-Lfunc_begin1            ## >> Call Site 3 <<\n\t.long\tLset13\nLset14 = Ltmp13-Ltmp10                  ##   Call between Ltmp10 and Ltmp13\n\t.long\tLset14\nLset15 = Ltmp14-Lfunc_begin1            ##     jumps to Ltmp14\n\t.long\tLset15\n\t.byte\t1                       ##   On action: 1\nLset16 = Ltmp15-Lfunc_begin1            ## >> Call Site 4 <<\n\t.long\tLset16\nLset17 = Ltmp16-Ltmp15                  ##   Call between Ltmp15 and Ltmp16\n\t.long\tLset17\nLset18 = Ltmp17-Lfunc_begin1            ##     jumps to Ltmp17\n\t.long\tLset18\n\t.byte\t1                       ##   On action: 1\nLset19 = Ltmp18-Lfunc_begin1            ## >> Call Site 5 <<\n\t.long\tLset19\nLset20 = Ltmp19-Ltmp18                  ##   Call between Ltmp18 and Ltmp19\n\t.long\tLset20\nLset21 = Ltmp20-Lfunc_begin1            ##     jumps to Ltmp20\n\t.long\tLset21\n\t.byte\t1                       ##   On action: 1\nLset22 = Ltmp19-Lfunc_begin1            ## >> Call Site 6 <<\n\t.long\tLset22\nLset23 = Ltmp21-Ltmp19                  ##   Call between Ltmp19 and Ltmp21\n\t.long\tLset23\n\t.long\t0                       ##     has no landing pad\n\t.byte\t0                       ##   On action: cleanup\nLset24 = Ltmp21-Lfunc_begin1            ## >> Call Site 7 <<\n\t.long\tLset24\nLset25 = Ltmp22-Ltmp21                  ##   Call between Ltmp21 and Ltmp22\n\t.long\tLset25\nLset26 = Ltmp23-Lfunc_begin1            ##     jumps to Ltmp23\n\t.long\tLset26\n\t.byte\t0                       ##   On action: cleanup\nLset27 = Ltmp22-Lfunc_begin1            ## >> Call Site 8 <<\n\t.long\tLset27\nLset28 = Ltmp24-Ltmp22                  ##   Call between Ltmp22 and Ltmp24\n\t.long\tLset28\n\t.long\t0                       ##     has no landing pad\n\t.byte\t0                       ##   On action: cleanup\nLset29 = Ltmp24-Lfunc_begin1            ## >> Call Site 9 <<\n\t.long\tLset29\nLset30 = Ltmp25-Ltmp24                  ##   Call between Ltmp24 and Ltmp25\n\t.long\tLset30\nLset31 = Ltmp26-Lfunc_begin1            ##     jumps to Ltmp26\n\t.long\tLset31\n\t.byte\t1                       ##   On action: 1\nLset32 = Ltmp25-Lfunc_begin1            ## >> Call Site 10 <<\n\t.long\tLset32\nLset33 = Lfunc_end1-Ltmp25              ##   Call between Ltmp25 and Lfunc_end1\n\t.long\tLset33\n\t.long\t0                       ##     has no landing pad\n\t.byte\t0                       ##   On action: cleanup\n\t.byte\t1                       ## >> Action Record 1 <<\n                                        ##   Catch TypeInfo 1\n\t.byte\t0                       ##   No further actions\n                                        ## >> Catch TypeInfos <<\n\t.long\t0                       ## TypeInfo 1\n\t.p2align\t2\n                                        ## -- End function\n\t.section\t__TEXT,__text,regular,pure_instructions\n\t.private_extern\t__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ ## -- Begin function _ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_\n\t.globl\t__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_\n\t.weak_def_can_be_hidden\t__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_\n\t.p2align\t4, 0x90\n__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_: ## @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_\nLfunc_begin2:\n\t.cfi_startproc\n\t.cfi_personality 155, ___gxx_personality_v0\n\t.cfi_lsda 16, Lexception2\n## BB#0:\n\tpushq\t%rbp\nLcfi16:\n\t.cfi_def_cfa_offset 16\nLcfi17:\n\t.cfi_offset %rbp, -16\n\tmovq\t%rsp, %rbp\nLcfi18:\n\t.cfi_def_cfa_register %rbp\n\tpushq\t%r15\n\tpushq\t%r14\n\tpushq\t%r13\n\tpushq\t%r12\n\tpushq\t%rbx\n\tsubq\t$72, %rsp\nLcfi19:\n\t.cfi_offset %rbx, -56\nLcfi20:\n\t.cfi_offset %r12, -48\nLcfi21:\n\t.cfi_offset %r13, -40\nLcfi22:\n\t.cfi_offset %r14, -32\nLcfi23:\n\t.cfi_offset %r15, -24\n\tmovq\t%r8, %r14\n\tmovq\t%rcx, %r12\n\tmovq\t%rdi, %r13\n\ttestq\t%r13, %r13\n\tje\tLBB2_17\n## BB#1:\n\tmovl\t%r9d, -44(%rbp)         ## 4-byte Spill\n\tmovq\t%r12, %rax\n\tsubq\t%rsi, %rax\n\tmovq\t24(%r14), %rcx\n\txorl\t%r15d, %r15d\n\tsubq\t%rax, %rcx\n\tcmovgq\t%rcx, %r15\n\tmovq\t%rdx, -104(%rbp)        ## 8-byte Spill\n\tmovq\t%rdx, %rbx\n\tsubq\t%rsi, %rbx\n\ttestq\t%rbx, %rbx\n\tjle\tLBB2_3\n## BB#2:\n\tmovq\t(%r13), %rax\n\tmovq\t%r13, %rdi\n\tmovq\t%rbx, %rdx\n\tcallq\t*96(%rax)\n\tcmpq\t%rbx, %rax\n\tjne\tLBB2_17\nLBB2_3:\n\ttestq\t%r15, %r15\n\tjle\tLBB2_13\n## BB#4:\n\tmovq\t%r12, -88(%rbp)         ## 8-byte Spill\n\tmovq\t%r14, -96(%rbp)         ## 8-byte Spill\n\txorps\t%xmm0, %xmm0\n\tmovaps\t%xmm0, -80(%rbp)\n\tmovq\t$0, -64(%rbp)\n\tcmpq\t$23, %r15\n\tjae\tLBB2_8\n## BB#5:\n\tmovl\t%r15d, %eax\n\taddb\t%al, %al\n\tmovb\t%al, -80(%rbp)\n\tleaq\t-79(%rbp), %r14\n\tmovq\t%r14, %r12\n\tjmp\tLBB2_9\nLBB2_8:\n\tleaq\t16(%r15), %rbx\n\tandq\t$-16, %rbx\n\tmovq\t%rbx, %rdi\n\tcallq\t__Znwm\n\tmovq\t%rax, %r12\n\tmovq\t%r12, -64(%rbp)\n\torq\t$1, %rbx\n\tmovq\t%rbx, -80(%rbp)\n\tmovq\t%r15, -72(%rbp)\n\tleaq\t-79(%rbp), %r14\nLBB2_9:\n\tmovl\t-44(%rbp), %eax         ## 4-byte Reload\n\tmovzbl\t%al, %esi\n\tmovq\t%r12, %rdi\n\tmovq\t%r15, %rdx\n\tcallq\t_memset\n\tmovb\t$0, (%r12,%r15)\n\ttestb\t$1, -80(%rbp)\n\tcmovneq\t-64(%rbp), %r14\n\tmovq\t(%r13), %rax\nLtmp27:\n\tmovq\t%r13, %rdi\n\tmovq\t%r14, %rsi\n\tmovq\t%r15, %rdx\n\tcallq\t*96(%rax)\n\tmovq\t%rax, %rbx\nLtmp28:\n## BB#10:\n\ttestb\t$1, -80(%rbp)\n\tmovq\t-96(%rbp), %r14         ## 8-byte Reload\n\tmovq\t-88(%rbp), %r12         ## 8-byte Reload\n\tje\tLBB2_12\n## BB#11:\n\tmovq\t-64(%rbp), %rdi\n\tcallq\t__ZdlPv\nLBB2_12:\n\tcmpq\t%r15, %rbx\n\tjne\tLBB2_17\nLBB2_13:\n\tmovq\t-104(%rbp), %rsi        ## 8-byte Reload\n\tsubq\t%rsi, %r12\n\ttestq\t%r12, %r12\n\tjle\tLBB2_15\n## BB#14:\n\tmovq\t(%r13), %rax\n\tmovq\t%r13, %rdi\n\tmovq\t%r12, %rdx\n\tcallq\t*96(%rax)\n\tcmpq\t%r12, %rax\n\tjne\tLBB2_17\nLBB2_15:\n\tmovq\t$0, 24(%r14)\n\tjmp\tLBB2_18\nLBB2_17:\n\txorl\t%r13d, %r13d\nLBB2_18:\n\tmovq\t%r13, %rax\n\taddq\t$72, %rsp\n\tpopq\t%rbx\n\tpopq\t%r12\n\tpopq\t%r13\n\tpopq\t%r14\n\tpopq\t%r15\n\tpopq\t%rbp\n\tretq\nLBB2_19:\nLtmp29:\n\tmovq\t%rax, %rbx\n\ttestb\t$1, -80(%rbp)\n\tje\tLBB2_21\n## BB#20:\n\tmovq\t-64(%rbp), %rdi\n\tcallq\t__ZdlPv\nLBB2_21:\n\tmovq\t%rbx, %rdi\n\tcallq\t__Unwind_Resume\nLfunc_end2:\n\t.cfi_endproc\n\t.section\t__TEXT,__gcc_except_tab\n\t.p2align\t2\nGCC_except_table2:\nLexception2:\n\t.byte\t255                     ## @LPStart Encoding = omit\n\t.byte\t155                     ## @TType Encoding = indirect pcrel sdata4\n\t.byte\t41                      ## @TType base offset\n\t.byte\t3                       ## Call site Encoding = udata4\n\t.byte\t39                      ## Call site table length\nLset34 = Lfunc_begin2-Lfunc_begin2      ## >> Call Site 1 <<\n\t.long\tLset34\nLset35 = Ltmp27-Lfunc_begin2            ##   Call between Lfunc_begin2 and Ltmp27\n\t.long\tLset35\n\t.long\t0                       ##     has no landing pad\n\t.byte\t0                       ##   On action: cleanup\nLset36 = Ltmp27-Lfunc_begin2            ## >> Call Site 2 <<\n\t.long\tLset36\nLset37 = Ltmp28-Ltmp27                  ##   Call between Ltmp27 and Ltmp28\n\t.long\tLset37\nLset38 = Ltmp29-Lfunc_begin2            ##     jumps to Ltmp29\n\t.long\tLset38\n\t.byte\t0                       ##   On action: cleanup\nLset39 = Ltmp28-Lfunc_begin2            ## >> Call Site 3 <<\n\t.long\tLset39\nLset40 = Lfunc_end2-Ltmp28              ##   Call between Ltmp28 and Lfunc_end2\n\t.long\tLset40\n\t.long\t0                       ##     has no landing pad\n\t.byte\t0                       ##   On action: cleanup\n\t.p2align\t2\n                                        ## -- End function\n\t.section\t__TEXT,__text,regular,pure_instructions\n\t.private_extern\t___clang_call_terminate ## -- Begin function __clang_call_terminate\n\t.globl\t___clang_call_terminate\n\t.weak_def_can_be_hidden\t___clang_call_terminate\n\t.p2align\t4, 0x90\n___clang_call_terminate:                ## @__clang_call_terminate\n## BB#0:\n\tpushq\t%rax\n\tcallq\t___cxa_begin_catch\n\tcallq\t__ZSt9terminatev\n                                        ## -- End function\n\t.section\t__TEXT,__const\n\t.p2align\t2               ## @_ZZ4mainE5array\nl__ZZ4mainE5array:\n\t.long\t2700                    ## 0xa8c\n\t.long\t2314                    ## 0x90a\n\t.long\t8429                    ## 0x20ed\n\t.long\t7726                    ## 0x1e2e\n\t.long\t4817                    ## 0x12d1\n\t.long\t8716                    ## 0x220c\n\t.long\t3598                    ## 0xe0e\n\t.long\t6255                    ## 0x186f\n\t.long\t5056                    ## 0x13c0\n\t.long\t8653                    ## 0x21cd\n\t.long\t8571                    ## 0x217b\n\t.long\t5028                    ## 0x13a4\n\t.long\t1259                    ## 0x4eb\n\t.long\t3315                    ## 0xcf3\n\t.long\t2896                    ## 0xb50\n\t.long\t1411                    ## 0x583\n\t.long\t3847                    ## 0xf07\n\t.long\t879                     ## 0x36f\n\t.long\t7353                    ## 0x1cb9\n\t.long\t8056                    ## 0x1f78\n\t.long\t8765                    ## 0x223d\n\t.long\t2344                    ## 0x928\n\t.long\t6349                    ## 0x18cd\n\t.long\t4156                    ## 0x103c\n\t.long\t8350                    ## 0x209e\n\t.long\t4164                    ## 0x1044\n\t.long\t4783                    ## 0x12af\n\t.long\t6800                    ## 0x1a90\n\t.long\t8887                    ## 0x22b7\n\t.long\t267                     ## 0x10b\n\t.long\t4478                    ## 0x117e\n\t.long\t6327                    ## 0x18b7\n\t.long\t58                      ## 0x3a\n\t.long\t7961                    ## 0x1f19\n\t.long\t756                     ## 0x2f4\n\t.long\t5654                    ## 0x1616\n\t.long\t9546                    ## 0x254a\n\t.long\t5132                    ## 0x140c\n\t.long\t247                     ## 0xf7\n\t.long\t5514                    ## 0x158a\n\t.long\t7098                    ## 0x1bba\n\t.long\t1156                    ## 0x484\n\t.long\t795                     ## 0x31b\n\t.long\t2502                    ## 0x9c6\n\t.long\t367                     ## 0x16f\n\t.long\t5330                    ## 0x14d2\n\t.long\t2261                    ## 0x8d5\n\t.long\t8692                    ## 0x21f4\n\t.long\t2460                    ## 0x99c\n\t.long\t4823                    ## 0x12d7\n\t.long\t8968                    ## 0x2308\n\t.long\t4976                    ## 0x1370\n\t.long\t1929                    ## 0x789\n\t.long\t1051                    ## 0x41b\n\t.long\t9249                    ## 0x2421\n\t.long\t9713                    ## 0x25f1\n\t.long\t2803                    ## 0xaf3\n\t.long\t1743                    ## 0x6cf\n\t.long\t3681                    ## 0xe61\n\t.long\t93                      ## 0x5d\n\t.long\t4967                    ## 0x1367\n\t.long\t2245                    ## 0x8c5\n\t.long\t198                     ## 0xc6\n\t.long\t896                     ## 0x380\n\t.long\t6372                    ## 0x18e4\n\t.long\t4413                    ## 0x113d\n\t.long\t2615                    ## 0xa37\n\t.long\t6130                    ## 0x17f2\n\t.long\t5766                    ## 0x1686\n\t.long\t5306                    ## 0x14ba\n\t.long\t1236                    ## 0x4d4\n\t.long\t888                     ## 0x378\n\t.long\t8050                    ## 0x1f72\n\t.long\t7080                    ## 0x1ba8\n\t.long\t3460                    ## 0xd84\n\t.long\t3473                    ## 0xd91\n\t.long\t1720                    ## 0x6b8\n\t.long\t3913                    ## 0xf49\n\t.long\t3449                    ## 0xd79\n\t.long\t8420                    ## 0x20e4\n\t.long\t1814                    ## 0x716\n\t.long\t1261                    ## 0x4ed\n\t.long\t1368                    ## 0x558\n\t.long\t167                     ## 0xa7\n\t.long\t7938                    ## 0x1f02\n\t.long\t4483                    ## 0x1183\n\t.long\t4843                    ## 0x12eb\n\t.long\t4682                    ## 0x124a\n\t.long\t3301                    ## 0xce5\n\t.long\t4038                    ## 0xfc6\n\t.long\t709                     ## 0x2c5\n\t.long\t8655                    ## 0x21cf\n\t.long\t598                     ## 0x256\n\t.long\t3857                    ## 0xf11\n\t.long\t6285                    ## 0x188d\n\t.long\t2961                    ## 0xb91\n\t.long\t6817                    ## 0x1aa1\n\t.long\t1031                    ## 0x407\n\t.long\t4007                    ## 0xfa7\n\t.long\t1392                    ## 0x570\n\t.long\t5717                    ## 0x1655\n\t.long\t5837                    ## 0x16cd\n\t.long\t5695                    ## 0x163f\n\t.long\t9511                    ## 0x2527\n\t.long\t8891                    ## 0x22bb\n\t.long\t7883                    ## 0x1ecb\n\t.long\t7035                    ## 0x1b7b\n\t.long\t2349                    ## 0x92d\n\t.long\t5752                    ## 0x1678\n\t.long\t3139                    ## 0xc43\n\t.long\t2442                    ## 0x98a\n\t.long\t3966                    ## 0xf7e\n\t.long\t2007                    ## 0x7d7\n\t.long\t9205                    ## 0x23f5\n\t.long\t8434                    ## 0x20f2\n\t.long\t5065                    ## 0x13c9\n\t.long\t3795                    ## 0xed3\n\t.long\t6890                    ## 0x1aea\n\t.long\t2715                    ## 0xa9b\n\t.long\t1                       ## 0x1\n\t.long\t5106                    ## 0x13f2\n\t.long\t5083                    ## 0x13db\n\n\t.section\t__TEXT,__cstring,cstring_literals\nL_.str:                                 ## @.str\n\t.space\t1\n\nL_.str.1:                               ## @.str.1\n\t.asciz\t\"hello, world\"\n\n\n.subsections_via_symbols\n\n```\n\n```assembly\n\t.section\t__TEXT,__text,regular,pure_instructions\n\t.macosx_version_min 10, 13\n\t.globl\t_main                   ## -- Begin function main\n\t.p2align\t4, 0x90\n_main:                                  ## @main\nLfunc_begin0:\n\t.cfi_startproc\n\t.cfi_personality 155, ___gxx_personality_v0\n\t.cfi_lsda 16, Lexception0\n## BB#0:\n\tpushq\t%rbp\nLcfi0:\n\t.cfi_def_cfa_offset 16\nLcfi1:\n\t.cfi_offset %rbp, -16\n\tmovq\t%rsp, %rbp\nLcfi2:\n\t.cfi_def_cfa_register %rbp\n\tpushq\t%r15\n\tpushq\t%r14\n\tpushq\t%r13\n\tpushq\t%r12\n\tpushq\t%rbx\n\tsubq\t$504, %rsp              ## imm = 0x1F8\nLcfi3:\n\t.cfi_offset %rbx, -56\nLcfi4:\n\t.cfi_offset %r12, -48\nLcfi5:\n\t.cfi_offset %r13, -40\nLcfi6:\n\t.cfi_offset %r14, -32\nLcfi7:\n\t.cfi_offset %r15, -24\n\tleaq\tl__ZZ4mainE5array(%rip), %rsi\n\tleaq\t-536(%rbp), %rdi\n\tmovl\t$488, %edx              ## imm = 0x1E8\n\tcallq\t_memcpy\n\tmovl\t$2700, %eax             ## imm = 0xA8C\n\tmovl\t$4, %r14d\n\tmovq\t__ZNSt3__14coutE@GOTPCREL(%rip), %r15\n\tleaq\tL_.str(%rip), %rbx\n\tcmpl\t$1001, %eax             ## imm = 0x3E9\n\tjl\tLBB0_6\n\tjmp\tLBB0_2\n\t.p2align\t4, 0x90\nLBB0_7:                                 ##   in Loop: Header=BB0_6 Depth=1\n\tmovl\t-536(%rbp,%r14), %eax\n\taddq\t$4, %r14\n\tcmpl\t$1001, %eax             ## imm = 0x3E9\n\tjl\tLBB0_6\nLBB0_2:\n\txorl\t%edx, %edx\n\tmovq\t%r15, %rdi\n\tmovq\t%rbx, %rsi\n\tcallq\t__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m\n\tcmpl\t$5330, -540(%rbp,%r14)  ## imm = 0x14D2\n\tjne\tLBB0_6\n## BB#3:\n\tmovl\t$12, %edx\n\tmovq\t%r15, %r12\n\tmovq\t%r15, %rdi\n\tleaq\tL_.str.1(%rip), %rsi\n\tcallq\t__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m\n\tmovq\t%rax, %r15\n\tmovq\t(%r15), %rax\n\tmovq\t-24(%rax), %rsi\n\taddq\t%r15, %rsi\n\tleaq\t-48(%rbp), %r13\n\tmovq\t%r13, %rdi\n\tcallq\t__ZNKSt3__18ios_base6getlocEv\nLtmp0:\n\tmovq\t%r13, %rdi\n\tmovq\t__ZNSt3__15ctypeIcE2idE@GOTPCREL(%rip), %rsi\n\tcallq\t__ZNKSt3__16locale9use_facetERNS0_2idE\nLtmp1:\n## BB#4:\n\tmovq\t(%rax), %rcx\nLtmp2:\n\tmovl\t$10, %esi\n\tmovq\t%rax, %rdi\n\tcallq\t*56(%rcx)\n\tmovl\t%eax, %r13d\nLtmp3:\n## BB#5:\n\tleaq\t-48(%rbp), %rdi\n\tcallq\t__ZNSt3__16localeD1Ev\n\tmovsbl\t%r13b, %esi\n\tmovq\t%r15, %rdi\n\tcallq\t__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc\n\tmovq\t%r15, %rdi\n\tcallq\t__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv\n\tmovq\t%r12, %r15\nLBB0_6:                                 ## =>This Inner Loop Header: Depth=1\n\tcmpq\t$488, %r14              ## imm = 0x1E8\n\tjne\tLBB0_7\n## BB#8:\n\txorl\t%eax, %eax\n\taddq\t$504, %rsp              ## imm = 0x1F8\n\tpopq\t%rbx\n\tpopq\t%r12\n\tpopq\t%r13\n\tpopq\t%r14\n\tpopq\t%r15\n\tpopq\t%rbp\n\tretq\nLBB0_9:\nLtmp4:\n\tmovq\t%rax, %rbx\n\tleaq\t-48(%rbp), %rdi\n\tcallq\t__ZNSt3__16localeD1Ev\n\tmovq\t%rbx, %rdi\n\tcallq\t__Unwind_Resume\nLfunc_end0:\n\t.cfi_endproc\n\t.section\t__TEXT,__gcc_except_tab\n\t.p2align\t2\nGCC_except_table0:\nLexception0:\n\t.byte\t255                     ## @LPStart Encoding = omit\n\t.byte\t155                     ## @TType Encoding = indirect pcrel sdata4\n\t.byte\t41                      ## @TType base offset\n\t.byte\t3                       ## Call site Encoding = udata4\n\t.byte\t39                      ## Call site table length\nLset0 = Lfunc_begin0-Lfunc_begin0       ## >> Call Site 1 <<\n\t.long\tLset0\nLset1 = Ltmp0-Lfunc_begin0              ##   Call between Lfunc_begin0 and Ltmp0\n\t.long\tLset1\n\t.long\t0                       ##     has no landing pad\n\t.byte\t0                       ##   On action: cleanup\nLset2 = Ltmp0-Lfunc_begin0              ## >> Call Site 2 <<\n\t.long\tLset2\nLset3 = Ltmp3-Ltmp0                     ##   Call between Ltmp0 and Ltmp3\n\t.long\tLset3\nLset4 = Ltmp4-Lfunc_begin0              ##     jumps to Ltmp4\n\t.long\tLset4\n\t.byte\t0                       ##   On action: cleanup\nLset5 = Ltmp3-Lfunc_begin0              ## >> Call Site 3 <<\n\t.long\tLset5\nLset6 = Lfunc_end0-Ltmp3                ##   Call between Ltmp3 and Lfunc_end0\n\t.long\tLset6\n\t.long\t0                       ##     has no landing pad\n\t.byte\t0                       ##   On action: cleanup\n\t.p2align\t2\n                                        ## -- End function\n\t.section\t__TEXT,__text,regular,pure_instructions\n\t.globl\t__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m ## -- Begin function _ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m\n\t.weak_def_can_be_hidden\t__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m\n\t.p2align\t4, 0x90\n__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m: ## @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m\nLfunc_begin1:\n\t.cfi_startproc\n\t.cfi_personality 155, ___gxx_personality_v0\n\t.cfi_lsda 16, Lexception1\n## BB#0:\n\tpushq\t%rbp\nLcfi8:\n\t.cfi_def_cfa_offset 16\nLcfi9:\n\t.cfi_offset %rbp, -16\n\tmovq\t%rsp, %rbp\nLcfi10:\n\t.cfi_def_cfa_register %rbp\n\tpushq\t%r15\n\tpushq\t%r14\n\tpushq\t%r13\n\tpushq\t%r12\n\tpushq\t%rbx\n\tsubq\t$40, %rsp\nLcfi11:\n\t.cfi_offset %rbx, -56\nLcfi12:\n\t.cfi_offset %r12, -48\nLcfi13:\n\t.cfi_offset %r13, -40\nLcfi14:\n\t.cfi_offset %r14, -32\nLcfi15:\n\t.cfi_offset %r15, -24\n\tmovq\t%rdx, %r14\n\tmovq\t%rsi, %r15\n\tmovq\t%rdi, %rbx\nLtmp5:\n\tleaq\t-80(%rbp), %rdi\n\tmovq\t%rbx, %rsi\n\tcallq\t__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_\nLtmp6:\n## BB#1:\n\tcmpb\t$0, -80(%rbp)\n\tje\tLBB1_10\n## BB#2:\n\tmovq\t(%rbx), %rax\n\tmovq\t-24(%rax), %rax\n\tleaq\t(%rbx,%rax), %r12\n\tmovq\t40(%rbx,%rax), %rdi\n\tmovl\t8(%rbx,%rax), %r13d\n\tmovl\t144(%rbx,%rax), %eax\n\tcmpl\t$-1, %eax\n\tjne\tLBB1_7\n## BB#3:\nLtmp8:\n\tmovq\t%rdi, -64(%rbp)         ## 8-byte Spill\n\tleaq\t-56(%rbp), %rdi\n\tmovq\t%r12, %rsi\n\tcallq\t__ZNKSt3__18ios_base6getlocEv\nLtmp9:\n## BB#4:\nLtmp10:\n\tmovq\t__ZNSt3__15ctypeIcE2idE@GOTPCREL(%rip), %rsi\n\tleaq\t-56(%rbp), %rdi\n\tcallq\t__ZNKSt3__16locale9use_facetERNS0_2idE\nLtmp11:\n## BB#5:\n\tmovq\t(%rax), %rcx\nLtmp12:\n\tmovl\t$32, %esi\n\tmovq\t%rax, %rdi\n\tcallq\t*56(%rcx)\n\tmovb\t%al, -41(%rbp)          ## 1-byte Spill\nLtmp13:\n## BB#6:\n\tleaq\t-56(%rbp), %rdi\n\tcallq\t__ZNSt3__16localeD1Ev\n\tmovsbl\t-41(%rbp), %eax         ## 1-byte Folded Reload\n\tmovl\t%eax, 144(%r12)\n\tmovq\t-64(%rbp), %rdi         ## 8-byte Reload\nLBB1_7:\n\taddq\t%r15, %r14\n\tandl\t$176, %r13d\n\tcmpl\t$32, %r13d\n\tmovq\t%r15, %rdx\n\tcmoveq\t%r14, %rdx\nLtmp15:\n\tmovsbl\t%al, %r9d\n\tmovq\t%r15, %rsi\n\tmovq\t%r14, %rcx\n\tmovq\t%r12, %r8\n\tcallq\t__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_\nLtmp16:\n## BB#8:\n\ttestq\t%rax, %rax\n\tjne\tLBB1_10\n## BB#9:\n\tmovq\t(%rbx), %rax\n\tmovq\t-24(%rax), %rax\n\tleaq\t(%rbx,%rax), %rdi\n\tmovl\t32(%rbx,%rax), %esi\n\torl\t$5, %esi\nLtmp18:\n\tcallq\t__ZNSt3__18ios_base5clearEj\nLtmp19:\nLBB1_10:\n\tleaq\t-80(%rbp), %rdi\n\tcallq\t__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev\nLBB1_11:\n\tmovq\t%rbx, %rax\n\taddq\t$40, %rsp\n\tpopq\t%rbx\n\tpopq\t%r12\n\tpopq\t%r13\n\tpopq\t%r14\n\tpopq\t%r15\n\tpopq\t%rbp\n\tretq\nLBB1_12:\nLtmp20:\n\tjmp\tLBB1_15\nLBB1_13:\nLtmp14:\n\tmovq\t%rax, %r14\n\tleaq\t-56(%rbp), %rdi\n\tcallq\t__ZNSt3__16localeD1Ev\n\tjmp\tLBB1_16\nLBB1_14:\nLtmp17:\nLBB1_15:\n\tmovq\t%rax, %r14\nLBB1_16:\n\tleaq\t-80(%rbp), %rdi\n\tcallq\t__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev\n\tjmp\tLBB1_18\nLBB1_17:\nLtmp7:\n\tmovq\t%rax, %r14\nLBB1_18:\n\tmovq\t%r14, %rdi\n\tcallq\t___cxa_begin_catch\n\tmovq\t(%rbx), %rax\n\tmovq\t%rbx, %rdi\n\taddq\t-24(%rax), %rdi\nLtmp21:\n\tcallq\t__ZNSt3__18ios_base33__set_badbit_and_consider_rethrowEv\nLtmp22:\n## BB#19:\n\tcallq\t___cxa_end_catch\n\tjmp\tLBB1_11\nLBB1_20:\nLtmp23:\n\tmovq\t%rax, %rbx\nLtmp24:\n\tcallq\t___cxa_end_catch\nLtmp25:\n## BB#21:\n\tmovq\t%rbx, %rdi\n\tcallq\t__Unwind_Resume\nLBB1_22:\nLtmp26:\n\tmovq\t%rax, %rdi\n\tcallq\t___clang_call_terminate\nLfunc_end1:\n\t.cfi_endproc\n\t.section\t__TEXT,__gcc_except_tab\n\t.p2align\t2\nGCC_except_table1:\nLexception1:\n\t.byte\t255                     ## @LPStart Encoding = omit\n\t.byte\t155                     ## @TType Encoding = indirect pcrel sdata4\n\t.asciz\t\"\\213\\201\"              ## @TType base offset\n\t.byte\t3                       ## Call site Encoding = udata4\n\t.ascii\t\"\\202\\001\"              ## Call site table length\nLset7 = Ltmp5-Lfunc_begin1              ## >> Call Site 1 <<\n\t.long\tLset7\nLset8 = Ltmp6-Ltmp5                     ##   Call between Ltmp5 and Ltmp6\n\t.long\tLset8\nLset9 = Ltmp7-Lfunc_begin1              ##     jumps to Ltmp7\n\t.long\tLset9\n\t.byte\t1                       ##   On action: 1\nLset10 = Ltmp8-Lfunc_begin1             ## >> Call Site 2 <<\n\t.long\tLset10\nLset11 = Ltmp9-Ltmp8                    ##   Call between Ltmp8 and Ltmp9\n\t.long\tLset11\nLset12 = Ltmp17-Lfunc_begin1            ##     jumps to Ltmp17\n\t.long\tLset12\n\t.byte\t1                       ##   On action: 1\nLset13 = Ltmp10-Lfunc_begin1            ## >> Call Site 3 <<\n\t.long\tLset13\nLset14 = Ltmp13-Ltmp10                  ##   Call between Ltmp10 and Ltmp13\n\t.long\tLset14\nLset15 = Ltmp14-Lfunc_begin1            ##     jumps to Ltmp14\n\t.long\tLset15\n\t.byte\t1                       ##   On action: 1\nLset16 = Ltmp15-Lfunc_begin1            ## >> Call Site 4 <<\n\t.long\tLset16\nLset17 = Ltmp16-Ltmp15                  ##   Call between Ltmp15 and Ltmp16\n\t.long\tLset17\nLset18 = Ltmp17-Lfunc_begin1            ##     jumps to Ltmp17\n\t.long\tLset18\n\t.byte\t1                       ##   On action: 1\nLset19 = Ltmp18-Lfunc_begin1            ## >> Call Site 5 <<\n\t.long\tLset19\nLset20 = Ltmp19-Ltmp18                  ##   Call between Ltmp18 and Ltmp19\n\t.long\tLset20\nLset21 = Ltmp20-Lfunc_begin1            ##     jumps to Ltmp20\n\t.long\tLset21\n\t.byte\t1                       ##   On action: 1\nLset22 = Ltmp19-Lfunc_begin1            ## >> Call Site 6 <<\n\t.long\tLset22\nLset23 = Ltmp21-Ltmp19                  ##   Call between Ltmp19 and Ltmp21\n\t.long\tLset23\n\t.long\t0                       ##     has no landing pad\n\t.byte\t0                       ##   On action: cleanup\nLset24 = Ltmp21-Lfunc_begin1            ## >> Call Site 7 <<\n\t.long\tLset24\nLset25 = Ltmp22-Ltmp21                  ##   Call between Ltmp21 and Ltmp22\n\t.long\tLset25\nLset26 = Ltmp23-Lfunc_begin1            ##     jumps to Ltmp23\n\t.long\tLset26\n\t.byte\t0                       ##   On action: cleanup\nLset27 = Ltmp22-Lfunc_begin1            ## >> Call Site 8 <<\n\t.long\tLset27\nLset28 = Ltmp24-Ltmp22                  ##   Call between Ltmp22 and Ltmp24\n\t.long\tLset28\n\t.long\t0                       ##     has no landing pad\n\t.byte\t0                       ##   On action: cleanup\nLset29 = Ltmp24-Lfunc_begin1            ## >> Call Site 9 <<\n\t.long\tLset29\nLset30 = Ltmp25-Ltmp24                  ##   Call between Ltmp24 and Ltmp25\n\t.long\tLset30\nLset31 = Ltmp26-Lfunc_begin1            ##     jumps to Ltmp26\n\t.long\tLset31\n\t.byte\t1                       ##   On action: 1\nLset32 = Ltmp25-Lfunc_begin1            ## >> Call Site 10 <<\n\t.long\tLset32\nLset33 = Lfunc_end1-Ltmp25              ##   Call between Ltmp25 and Lfunc_end1\n\t.long\tLset33\n\t.long\t0                       ##     has no landing pad\n\t.byte\t0                       ##   On action: cleanup\n\t.byte\t1                       ## >> Action Record 1 <<\n                                        ##   Catch TypeInfo 1\n\t.byte\t0                       ##   No further actions\n                                        ## >> Catch TypeInfos <<\n\t.long\t0                       ## TypeInfo 1\n\t.p2align\t2\n                                        ## -- End function\n\t.section\t__TEXT,__text,regular,pure_instructions\n\t.private_extern\t__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ ## -- Begin function _ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_\n\t.globl\t__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_\n\t.weak_def_can_be_hidden\t__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_\n\t.p2align\t4, 0x90\n__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_: ## @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_\nLfunc_begin2:\n\t.cfi_startproc\n\t.cfi_personality 155, ___gxx_personality_v0\n\t.cfi_lsda 16, Lexception2\n## BB#0:\n\tpushq\t%rbp\nLcfi16:\n\t.cfi_def_cfa_offset 16\nLcfi17:\n\t.cfi_offset %rbp, -16\n\tmovq\t%rsp, %rbp\nLcfi18:\n\t.cfi_def_cfa_register %rbp\n\tpushq\t%r15\n\tpushq\t%r14\n\tpushq\t%r13\n\tpushq\t%r12\n\tpushq\t%rbx\n\tsubq\t$72, %rsp\nLcfi19:\n\t.cfi_offset %rbx, -56\nLcfi20:\n\t.cfi_offset %r12, -48\nLcfi21:\n\t.cfi_offset %r13, -40\nLcfi22:\n\t.cfi_offset %r14, -32\nLcfi23:\n\t.cfi_offset %r15, -24\n\tmovq\t%r8, %r14\n\tmovq\t%rcx, %r12\n\tmovq\t%rdi, %r13\n\ttestq\t%r13, %r13\n\tje\tLBB2_17\n## BB#1:\n\tmovl\t%r9d, -44(%rbp)         ## 4-byte Spill\n\tmovq\t%r12, %rax\n\tsubq\t%rsi, %rax\n\tmovq\t24(%r14), %rcx\n\txorl\t%r15d, %r15d\n\tsubq\t%rax, %rcx\n\tcmovgq\t%rcx, %r15\n\tmovq\t%rdx, -104(%rbp)        ## 8-byte Spill\n\tmovq\t%rdx, %rbx\n\tsubq\t%rsi, %rbx\n\ttestq\t%rbx, %rbx\n\tjle\tLBB2_3\n## BB#2:\n\tmovq\t(%r13), %rax\n\tmovq\t%r13, %rdi\n\tmovq\t%rbx, %rdx\n\tcallq\t*96(%rax)\n\tcmpq\t%rbx, %rax\n\tjne\tLBB2_17\nLBB2_3:\n\ttestq\t%r15, %r15\n\tjle\tLBB2_13\n## BB#4:\n\tmovq\t%r12, -88(%rbp)         ## 8-byte Spill\n\tmovq\t%r14, -96(%rbp)         ## 8-byte Spill\n\txorps\t%xmm0, %xmm0\n\tmovaps\t%xmm0, -80(%rbp)\n\tmovq\t$0, -64(%rbp)\n\tcmpq\t$23, %r15\n\tjae\tLBB2_8\n## BB#5:\n\tmovl\t%r15d, %eax\n\taddb\t%al, %al\n\tmovb\t%al, -80(%rbp)\n\tleaq\t-79(%rbp), %r14\n\tmovq\t%r14, %r12\n\tjmp\tLBB2_9\nLBB2_8:\n\tleaq\t16(%r15), %rbx\n\tandq\t$-16, %rbx\n\tmovq\t%rbx, %rdi\n\tcallq\t__Znwm\n\tmovq\t%rax, %r12\n\tmovq\t%r12, -64(%rbp)\n\torq\t$1, %rbx\n\tmovq\t%rbx, -80(%rbp)\n\tmovq\t%r15, -72(%rbp)\n\tleaq\t-79(%rbp), %r14\nLBB2_9:\n\tmovl\t-44(%rbp), %eax         ## 4-byte Reload\n\tmovzbl\t%al, %esi\n\tmovq\t%r12, %rdi\n\tmovq\t%r15, %rdx\n\tcallq\t_memset\n\tmovb\t$0, (%r12,%r15)\n\ttestb\t$1, -80(%rbp)\n\tcmovneq\t-64(%rbp), %r14\n\tmovq\t(%r13), %rax\nLtmp27:\n\tmovq\t%r13, %rdi\n\tmovq\t%r14, %rsi\n\tmovq\t%r15, %rdx\n\tcallq\t*96(%rax)\n\tmovq\t%rax, %rbx\nLtmp28:\n## BB#10:\n\ttestb\t$1, -80(%rbp)\n\tmovq\t-96(%rbp), %r14         ## 8-byte Reload\n\tmovq\t-88(%rbp), %r12         ## 8-byte Reload\n\tje\tLBB2_12\n## BB#11:\n\tmovq\t-64(%rbp), %rdi\n\tcallq\t__ZdlPv\nLBB2_12:\n\tcmpq\t%r15, %rbx\n\tjne\tLBB2_17\nLBB2_13:\n\tmovq\t-104(%rbp), %rsi        ## 8-byte Reload\n\tsubq\t%rsi, %r12\n\ttestq\t%r12, %r12\n\tjle\tLBB2_15\n## BB#14:\n\tmovq\t(%r13), %rax\n\tmovq\t%r13, %rdi\n\tmovq\t%r12, %rdx\n\tcallq\t*96(%rax)\n\tcmpq\t%r12, %rax\n\tjne\tLBB2_17\nLBB2_15:\n\tmovq\t$0, 24(%r14)\n\tjmp\tLBB2_18\nLBB2_17:\n\txorl\t%r13d, %r13d\nLBB2_18:\n\tmovq\t%r13, %rax\n\taddq\t$72, %rsp\n\tpopq\t%rbx\n\tpopq\t%r12\n\tpopq\t%r13\n\tpopq\t%r14\n\tpopq\t%r15\n\tpopq\t%rbp\n\tretq\nLBB2_19:\nLtmp29:\n\tmovq\t%rax, %rbx\n\ttestb\t$1, -80(%rbp)\n\tje\tLBB2_21\n## BB#20:\n\tmovq\t-64(%rbp), %rdi\n\tcallq\t__ZdlPv\nLBB2_21:\n\tmovq\t%rbx, %rdi\n\tcallq\t__Unwind_Resume\nLfunc_end2:\n\t.cfi_endproc\n\t.section\t__TEXT,__gcc_except_tab\n\t.p2align\t2\nGCC_except_table2:\nLexception2:\n\t.byte\t255                     ## @LPStart Encoding = omit\n\t.byte\t155                     ## @TType Encoding = indirect pcrel sdata4\n\t.byte\t41                      ## @TType base offset\n\t.byte\t3                       ## Call site Encoding = udata4\n\t.byte\t39                      ## Call site table length\nLset34 = Lfunc_begin2-Lfunc_begin2      ## >> Call Site 1 <<\n\t.long\tLset34\nLset35 = Ltmp27-Lfunc_begin2            ##   Call between Lfunc_begin2 and Ltmp27\n\t.long\tLset35\n\t.long\t0                       ##     has no landing pad\n\t.byte\t0                       ##   On action: cleanup\nLset36 = Ltmp27-Lfunc_begin2            ## >> Call Site 2 <<\n\t.long\tLset36\nLset37 = Ltmp28-Ltmp27                  ##   Call between Ltmp27 and Ltmp28\n\t.long\tLset37\nLset38 = Ltmp29-Lfunc_begin2            ##     jumps to Ltmp29\n\t.long\tLset38\n\t.byte\t0                       ##   On action: cleanup\nLset39 = Ltmp28-Lfunc_begin2            ## >> Call Site 3 <<\n\t.long\tLset39\nLset40 = Lfunc_end2-Ltmp28              ##   Call between Ltmp28 and Lfunc_end2\n\t.long\tLset40\n\t.long\t0                       ##     has no landing pad\n\t.byte\t0                       ##   On action: cleanup\n\t.p2align\t2\n                                        ## -- End function\n\t.section\t__TEXT,__text,regular,pure_instructions\n\t.private_extern\t___clang_call_terminate ## -- Begin function __clang_call_terminate\n\t.globl\t___clang_call_terminate\n\t.weak_def_can_be_hidden\t___clang_call_terminate\n\t.p2align\t4, 0x90\n___clang_call_terminate:                ## @__clang_call_terminate\n## BB#0:\n\tpushq\t%rax\n\tcallq\t___cxa_begin_catch\n\tcallq\t__ZSt9terminatev\n                                        ## -- End function\n\t.section\t__TEXT,__const\n\t.p2align\t2               ## @_ZZ4mainE5array\nl__ZZ4mainE5array:\n\t.long\t2700                    ## 0xa8c\n\t.long\t2314                    ## 0x90a\n\t.long\t8429                    ## 0x20ed\n\t.long\t7726                    ## 0x1e2e\n\t.long\t4817                    ## 0x12d1\n\t.long\t8716                    ## 0x220c\n\t.long\t3598                    ## 0xe0e\n\t.long\t6255                    ## 0x186f\n\t.long\t5056                    ## 0x13c0\n\t.long\t8653                    ## 0x21cd\n\t.long\t8571                    ## 0x217b\n\t.long\t5028                    ## 0x13a4\n\t.long\t1259                    ## 0x4eb\n\t.long\t3315                    ## 0xcf3\n\t.long\t2896                    ## 0xb50\n\t.long\t1411                    ## 0x583\n\t.long\t3847                    ## 0xf07\n\t.long\t879                     ## 0x36f\n\t.long\t7353                    ## 0x1cb9\n\t.long\t8056                    ## 0x1f78\n\t.long\t8765                    ## 0x223d\n\t.long\t2344                    ## 0x928\n\t.long\t6349                    ## 0x18cd\n\t.long\t4156                    ## 0x103c\n\t.long\t8350                    ## 0x209e\n\t.long\t4164                    ## 0x1044\n\t.long\t4783                    ## 0x12af\n\t.long\t6800                    ## 0x1a90\n\t.long\t8887                    ## 0x22b7\n\t.long\t267                     ## 0x10b\n\t.long\t4478                    ## 0x117e\n\t.long\t6327                    ## 0x18b7\n\t.long\t58                      ## 0x3a\n\t.long\t7961                    ## 0x1f19\n\t.long\t756                     ## 0x2f4\n\t.long\t5654                    ## 0x1616\n\t.long\t9546                    ## 0x254a\n\t.long\t5132                    ## 0x140c\n\t.long\t247                     ## 0xf7\n\t.long\t5514                    ## 0x158a\n\t.long\t7098                    ## 0x1bba\n\t.long\t1156                    ## 0x484\n\t.long\t795                     ## 0x31b\n\t.long\t2502                    ## 0x9c6\n\t.long\t367                     ## 0x16f\n\t.long\t5330                    ## 0x14d2\n\t.long\t2261                    ## 0x8d5\n\t.long\t8692                    ## 0x21f4\n\t.long\t2460                    ## 0x99c\n\t.long\t4823                    ## 0x12d7\n\t.long\t8968                    ## 0x2308\n\t.long\t4976                    ## 0x1370\n\t.long\t1929                    ## 0x789\n\t.long\t1051                    ## 0x41b\n\t.long\t9249                    ## 0x2421\n\t.long\t9713                    ## 0x25f1\n\t.long\t2803                    ## 0xaf3\n\t.long\t1743                    ## 0x6cf\n\t.long\t3681                    ## 0xe61\n\t.long\t93                      ## 0x5d\n\t.long\t4967                    ## 0x1367\n\t.long\t2245                    ## 0x8c5\n\t.long\t198                     ## 0xc6\n\t.long\t896                     ## 0x380\n\t.long\t6372                    ## 0x18e4\n\t.long\t4413                    ## 0x113d\n\t.long\t2615                    ## 0xa37\n\t.long\t6130                    ## 0x17f2\n\t.long\t5766                    ## 0x1686\n\t.long\t5306                    ## 0x14ba\n\t.long\t1236                    ## 0x4d4\n\t.long\t888                     ## 0x378\n\t.long\t8050                    ## 0x1f72\n\t.long\t7080                    ## 0x1ba8\n\t.long\t3460                    ## 0xd84\n\t.long\t3473                    ## 0xd91\n\t.long\t1720                    ## 0x6b8\n\t.long\t3913                    ## 0xf49\n\t.long\t3449                    ## 0xd79\n\t.long\t8420                    ## 0x20e4\n\t.long\t1814                    ## 0x716\n\t.long\t1261                    ## 0x4ed\n\t.long\t1368                    ## 0x558\n\t.long\t167                     ## 0xa7\n\t.long\t7938                    ## 0x1f02\n\t.long\t4483                    ## 0x1183\n\t.long\t4843                    ## 0x12eb\n\t.long\t4682                    ## 0x124a\n\t.long\t3301                    ## 0xce5\n\t.long\t4038                    ## 0xfc6\n\t.long\t709                     ## 0x2c5\n\t.long\t8655                    ## 0x21cf\n\t.long\t598                     ## 0x256\n\t.long\t3857                    ## 0xf11\n\t.long\t6285                    ## 0x188d\n\t.long\t2961                    ## 0xb91\n\t.long\t6817                    ## 0x1aa1\n\t.long\t1031                    ## 0x407\n\t.long\t4007                    ## 0xfa7\n\t.long\t1392                    ## 0x570\n\t.long\t5717                    ## 0x1655\n\t.long\t5837                    ## 0x16cd\n\t.long\t5695                    ## 0x163f\n\t.long\t9511                    ## 0x2527\n\t.long\t8891                    ## 0x22bb\n\t.long\t7883                    ## 0x1ecb\n\t.long\t7035                    ## 0x1b7b\n\t.long\t2349                    ## 0x92d\n\t.long\t5752                    ## 0x1678\n\t.long\t3139                    ## 0xc43\n\t.long\t2442                    ## 0x98a\n\t.long\t3966                    ## 0xf7e\n\t.long\t2007                    ## 0x7d7\n\t.long\t9205                    ## 0x23f5\n\t.long\t8434                    ## 0x20f2\n\t.long\t5065                    ## 0x13c9\n\t.long\t3795                    ## 0xed3\n\t.long\t6890                    ## 0x1aea\n\t.long\t2715                    ## 0xa9b\n\t.long\t1                       ## 0x1\n\t.long\t5106                    ## 0x13f2\n\t.long\t5083                    ## 0x13db\n\n\t.section\t__TEXT,__cstring,cstring_literals\nL_.str:                                 ## @.str\n\t.space\t1\n\nL_.str.1:                               ## @.str.1\n\t.asciz\t\"hello, world\"\n\n\n.subsections_via_symbols\n\n```\n\n此时，我们依然可以通过搜索 `cmpl $1001, %eax`，此时你会发现在每份汇编中都有两处与 1001 的比较，而且通过生成的汇编代码的行数判断，其实我们可以大胆的出生成的结果基本一致。\n\n如果这个例子还不是很明显，可以看下面的代码：\n\n```cpp\n#include <iostream>\n\nint main()\n{\n    size_t sum = 0;\n    for (size_t i = 1; i <= 100; ++i)\n    {\n        sum += i;\n    }\n\n    std::cout << sum << std::endl;\n    return 0;\n}\n```\n\nO3 优化后的关键代码：\n\n```assembly\nLcfi4:\n\t.cfi_offset %r14, -24\n\tmovq\t__ZNSt3__14coutE@GOTPCREL(%rip), %rdi\n\tmovl\t$5050, %esi             ## imm = 0x13BA\n\tcallq\t__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm\n\tmovq\t%rax, %rbx\n\tmovq\t(%rbx), %rax\n\tmovq\t-24(%rax), %rsi\n\taddq\t%rbx, %rsi\n\tleaq\t-24(%rbp), %r14\n\tmovq\t%r14, %rdi\n\tcallq\t__ZNKSt3__18ios_base6getlocEv\n```\n\n这个 5050 是从何而来？\n\n## 结论\n\n唯一的结论只能是 **你写的代码只是一个建议，编译器怎么实现，如何实现，按不按照你写的代码编不是你说的**\n\n所以我认为没有必要牺牲代码的可读性而去做一些自以为是的优化，如果你用位运算实现的（+）运算比编译器直接将普通（+）运算编译的代码性能好的话，你应该去砍写编译器的人，而不是喷用正常写法的人菜。\n"},{"title":"浅谈iOS Device ID的修改","url":"/2018/07/09/浅谈iOS Device ID的修改/","content":"\n# 浅谈 iOS Device ID 的修改\n\n![](https://i.imgur.com/w6Sekbs.jpg \"Dark side of the Force\")\n\n最近有一篇 [文章](https://juejin.im/post/5b0a252d51882538b63af5c3) 介绍了如何实现 AppStore App 自动下载，笔者看后收获良多。不过文中只介绍了如何去模拟用户的操作来完成下载，并没有涉及抹机、IP 更换等内容。所以笔者打算在此分享一下自己对这些方面的经验。\n\n---\n\n##FBI WARNING\n\n1. 以下内容可能会引起很多人不适，请读者自酌。\n2. 18 岁以下请在家长陪同下观看！\n3. 部分内容可能违反你所在地相关法律，请谨慎模仿\n\n## 为什么要修改 iOS Device ID ？\n\n修改设备唯一可识别标识可以做很多事前，比如防止根据 UUID 的追踪，避免大数据「杀熟」等。但是在 iOS 设备上目前想做到修改的前提是越狱，所以为了多领几个美团红包而选择承担越狱的风险，是否值得还是要考虑清楚的。\n不过在业界有大量应用这种技术的产业，比如积分墙、ASO 刷榜…… 不过这些产业就属于「灰黑产」了，涉及到了原力的黑暗面，所以笔者不建议涉世不深的读者继续阅读下去。\n\n> 当你凝视深渊，深渊也在凝视着你。\n\n## 现状\n\n在开始讲如何做之前，笔者决定先简单介绍一下业界现在已经能做什么：\n![一款常见的改机软件](https://i.imgur.com/Yxtn2PJ.png)\n\n如图所示，这是一款在业内非常常见的改机软件。由于作者不可考（不过理应如此，毕竟为了自己的人生安全）、源码遗失、以及 iOS 版本的多次更新，现在已经不值钱了。但是麻雀虽小五脏俱全，它能够修改设备的五码、机型、配置 Apple ID 和一键越狱等。\n前人的成功告诉了我们这是可行的，剩下的只是模仿，因此笔者深入逆向并研究了这款软件，在当我看到了一大堆用汇编写的混淆之后…… 放弃了。\n所以下面的内容都是笔者编的，大家有兴趣看个开心就好，基本上可以点关闭按钮了 (●°u°●)​ 」\n\n## 如何破解一款程序？\n\n笔者依稀记得 [狗神](http://bbs.iosre.com/u/snakeninny) 在他那本著名的 [小黄书](https://baike.baidu.com/item/iOS%E5%BA%94%E7%94%A8%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B%EF%BC%9A%E5%88%86%E6%9E%90%E4%B8%8E%E5%AE%9E%E6%88%98) 中提到，逆向一款软件最重要的不是最终成品的代码，而是过程的分析与思路。所以经常可以看到一款软件的破解代码重要的也许只有两三行，但是过程有多艰辛也许只有破解者才知道。例如破解 Mac 版 QQ 音乐下载需要 VIP 权限的限制的代码也许加上注释也不到一百行：\n\n```obj-c\n/* How to Hook with Logos\nHooks are written with syntax similar to that of an Objective-C @implementation.\nYou don't need to #include <substrate.h>, it will be done automatically, as will\nthe generation of a class list and an automatic constructor.\n\n%hook ClassName\n\n// Hooking a class method\n+ (id)sharedInstance {\n\treturn %orig;\n}\n\n// Hooking an instance method with an argument.\n- (void)messageName:(int)argument {\n\t%log; // Write a message about this call, including its class, name and arguments, to the system log.\n\n\t%orig; // Call through to the original function with its original arguments.\n\t%orig(nil); // Call through to the original function with a custom argument.\n\n\t// If you use %orig(), you MUST supply all arguments (except for self and _cmd, the automatically generated ones.)\n}\n\n// Hooking an instance method with no arguments.\n- (id)noArguments {\n\t%log;\n\tid awesome = %orig;\n\t[awesome doSomethingElse];\n\n\treturn awesome;\n}\n\n// Always make sure you clean up after yourself; Not doing so could have grave consequences!\n%end\n*/\n\n\n%config(generator = internal)\n\n#import <Foundation/Foundation.h>\n#include <substrate.h>\n\n%hook DownLoadTask\n\n- (BOOL)checkHaveRightToDownload:(int)argument {\n\treturn YES;\n}\n\n%end\n\nunsigned int (*old_GetFlexBOOL)(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8);\nunsigned int  new_GetFlexBOOL(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)\n{\n  return 1;\n}\n\n%ctor {\n    NSLog(@\"!!!!!!inject success!!!!!!!\");\n\n    void * Symbol = MSFindSymbol(MSGetImageByName(\"/Applications/QQMusic.app/Contents/MacOS/QQMusic\"), \"_GetFlexBOOL\");\n    MSHookFunction(Symbol, &new_GetFlexBOOL, (void *)&old_GetFlexBOOL);\n}\n```\n\n而真正重要的是找出思路和逆向分析的过程，操作系统本质上也是一个软件，修改 Device ID 其实和破解一款音乐 VIP 限制本质上是一样的，只是一个只需要把 `checkHaveRightToDownload` 的返回值改成 `YES` ，另一个则需要与操作系统斗智斗勇罢了。\n\n## 思路\n\n综上所述，在我们对操作系统下黑手之前应该先理清思路。顺便再说一次以下内容皆是我瞎编的，如有雷同实属巧合：\n\n![](https://i.imgur.com/kKWdR0w.png \"思路\")\n\n\n如图所示，显而易见，如果只是简简单单的修改某个 App 中用到的 Device ID，极大几率只需要勾住「再封装的私有 API」就行了。\n\n而在众多私有 API 中，最著名的当然是大名鼎鼎的 `MGCopyAnswer`。\n\n## MGCopyAnswer\n\n```objc\n// Common form: MGCopyAnswer(CFStringRef string);\nCFStringRef value = MGCopyAnswer(kMGDeviceColor);\nNSLog(@\"Value: %@\", value);\nCFRelease(value);\n```\n\n基本上平时从 `UIDevice` 还是其他大部分途径获取 Device ID，皆是通过调用 libMobileGestalt 中的 `MGCopyAnswer` 函数来获取的。所以只需要勾住 `MGCopyAnswer`，使其返回的 Device ID 为我们所要的值即可，非常简单明了。\n\n不过虽说思路很简单，但是一个萌新想要勾 `MGCopyAnswer` 还是会绕很多弯路的，比如最常见的就是「挂短钩」。\n\n#### 挂短钩\n\n在 ARM64 架构下，直接对 `MGCopyAnswer` 挂钩的话会立即使进程崩溃 `invalid instruction`。如果通过反汇编手段分析 libMobileGestalt 库：\n\n```assembly\n01 00 80 d2        movz x1, #0\n01 00 00 14        b    MGCopyAnswer_internal\n```\n\n易知 `MGCopyAnswer` 实际上在内部调用了另一个私有无符号的函数 `MGCopyAnswer_internal` 来实现其功能。因此 `MGCopyAnswer` 这个函数实际上非常短，只有 8 个字节，而我们使用 [Cydia Substrate](http://www.cydiasubstrate.com/) 对一个 C 函数挂钩的话，它要求被勾函数[至少有 16 个字节](https://stackoverflow.com/questions/37903788/libmobilegestalt-dylib-crashed-when-hooking-mgcopyanswer-for-arm64)。因此直接勾住 `MGCopyAnswer` 时，`MGCopyAnswer` 函数地址开始的 16 个字节都会被改为 `goto`，从而破坏了相邻函数的前 8 个字节，使进程崩溃。\n因此，当我们吭哧吭哧读完汇编之后，首先想到的方法自然是去勾这个被调用的子函数 `MGCopyAnswer_internal`，虽说该函数并没有符号，但是在我们吭哧吭哧读了汇编之后，发现其函数地址与 `MGCopyAnswer` 相差 8 字节。故可以很简单粗暴的写出如下代码：\n\n```objc\nstatic CFPropertyListRef (*orig_MGCopyAnswer_internal)(CFStringRef prop, uint32_t* outTypeCode);\nCFPropertyListRef new_MGCopyAnswer_internal(CFStringRef prop, uint32_t* outTypeCode) {\n    return orig_MGCopyAnswer_internal(prop, outTypeCode);\n}\n\nextern \"C\" MGCopyAnswer(CFStringRef prop);\n\nstatic CFPropertyListRef (*orig_MGCopyAnswer)(CFStringRef prop);\nCFPropertyListRef new_MGCopyAnswer(CFStringRef prop) {\n    return orig_MGCopyAnswer(prop);\n}\n\n%ctor {\n    uint8_t MGCopyAnswer_arm64_impl[8] = {0x01, 0x00, 0x80, 0xd2, 0x01, 0x00, 0x00, 0x14};\n    const uint8_t* MGCopyAnswer_ptr = (const uint8_t*) MGCopyAnswer;\n    if (memcmp(MGCopyAnswer_ptr, MGCopyAnswer_arm64_impl, 8) == 0) {\n        MSHookFunction(MGCopyAnswer_ptr + 8, (void*)new_MGCopyAnswer_internal, (void**)&orig_MGCopyAnswer_internal);\n    } else {\n        MSHookFunction(MGCopyAnswer_ptr, (void*)new_MGCopyAnswer, (void**)&orig_MGCopyAnswer);\n    }\n}\n```\n\n显然这段代码除了简单粗暴、没有任何框架检测与异常处理之外完美实现了挂钩任务，但是基于相对偏移量来获取函数地址也并不是很稳。\n\n好在[张总](http://bbs.iosre.com/u/zhang/summary)在他的一篇[博文](http://mayuyu.io/2017/06/26/HookingMGCopyAnswerLikeABoss/)中提到可以使用 [Capstone Engine](http://mayuyu.io/2017/06/26/HookingMGCopyAnswerLikeABoss/),一款基于 LLVM MC 的多平台多架构支持的反汇编框架来帮助我们找到 `MGCopyAnswer_internal` 的「符号」。\n\n```objc\nstatic CFStringRef (*old_MGCA)(CFStringRef Key);\nCFStringRef new_MGCA(CFStringRef Key) {\n    CFStringRef Ret = old_MGCA(Key);\n    NSLog(@\"MGHooker:%@\\nReturn Value:%@\", Key, Ret);\n    return Ret;\n}\n\n%ctor {\n    void *Symbol = MSFindSymbol(MSGetImageByName(\"/usr/lib/libMobileGestalt.dylib\"), \"_MGCopyAnswer\");\n    NSLog(@\"MG: %p\", Symbol);\n    csh           handle;\n    cs_insn *     insn;\n    cs_insn       BLInstruction;\n    size_t        count;\n    unsigned long realMGAddress = 0;\n    // MSHookFunction(Symbol,(void*)new_MGCA, (void**)&old_MGCA);\n    if (cs_open(CS_ARCH_ARM64, CS_MODE_ARM, &handle) == CS_ERR_OK) {\n        /*cs_disasm(csh handle,\n              const uint8_t *code, size_t code_size,\n              uint64_t address,\n              size_t count,\n              cs_insn **insn);*/\n        count = cs_disasm(handle, (const uint8_t *)Symbol, 0x1000, (uint64_t)Symbol, 0, &insn);\n        if (count > 0) {\n            NSLog(@\"Found %lu instructions\", count);\n            for (size_t j = 0; j < count; j++) {\n                NSLog(@\"0x%\" PRIx64 \":\\t%s\\t\\t%s\\n\", insn[j].address, insn[j].mnemonic, insn[j].op_str);\n                if (insn[j].id == ARM64_INS_B) {\n                    BLInstruction = insn[j];\n                    sscanf(BLInstruction.op_str, \"#%lx\", &realMGAddress);\n                    break;\n                }\n            }\n\n            cs_free(insn, count);\n        }\n        else {\n            NSLog(@\"ERROR: Failed to disassemble given code!%i \\n\", cs_errno(handle));\n        }\n\n        cs_close(&handle);\n\n        // Now perform actual hook\n        MSHookFunction((void *)realMGAddress, (void *)new_MGCA, (void **)&old_MGCA);\n    }\n    else {\n        NSLog(@\"MGHooker: CSE Failed\");\n    }\n}\n```\n\n废话不多说了，我们的正题并不在这里。\n\n## 如何修改 iOS Device ID\n\n接下来的东西我是真的就不会了，但是为了不太斧头蛇尾，我就再瞎掰一段吧。\n谈到修改的话，我们首先要弄清楚的一点是我们打算要从哪一层修改？比如 [ECID](https://www.theiphonewiki.com/wiki/ECID)，众所周知它是烧在芯片上的。讲道理的话要修改 ECID 是要对硬件动手的，但是我们一般不需要做的这么彻底，而是结合具体需求具体分析。例如一个普通、简单的积分墙，我们只需要对积分墙调用的 `MGCopyAnswer` 挂钩，就可以愉快的玩耍了。但是如果想对 AppStore 或者 iTunes 下手呢？自然仅仅勾个 `MGCopyAnswer` 是不行的。\n例如我们想让手机连接 iTunes 时，iTunes 获取的 Device ID 是伪造的，那么就需要勾住处理手机与电脑间 USB 通信的守护进程——比如说 [lockdownd](http://iphonedevwiki.net/index.php/Lockdownd)。因为 iTunes 并不会直接读取手机的设备信息，而是从手机上运行的守护进程中请求数据。那么我们是不是只需要在这个守护进程安装一个钩子即可？\n\n```objc\ntypedef void *LockdownConnectionRef;\ntypedef int   kern_return_t;\n\ntypedef unsigned int              __darwin_natural_t;\ntypedef __darwin_natural_t        __darwin_mach_port_name_t;\ntypedef __darwin_mach_port_name_t __darwin_mach_port_t;\ntypedef __darwin_mach_port_t      mach_port_t;\ntypedef mach_port_t               io_object_t;\ntypedef io_object_t               io_registry_entry_t;\n\ntypedef char         io_name_t[128];\ntypedef unsigned int IOOptionBits;\n\nstatic kern_return_t (*oldIORegistryEntryGetName)(io_registry_entry_t entry, io_name_t name);\nkern_return_t newIORegistryEntryGetName(io_registry_entry_t entry, io_name_t name) {\n    int ret = oldIORegistryEntryGetName(entry, name);\n    NSLog(@\"\\n\\nGetName:\\n\\tentry:%zd\\n\\tio_name_t%s\\n\\tret:%d\", entry, name, ret);\n    return ret;\n}\n\nstatic CFTypeRef (*oldIORegistryEntrySearchCFProperty)(\n    io_registry_entry_t entry, const io_name_t plane, CFStringRef key, CFTypeRef allocator, IOOptionBits options);\nCFTypeRef newIORegistryEntrySearchCFProperty(\n    io_registry_entry_t entry, const io_name_t plane, CFStringRef key, CFTypeRef allocator, IOOptionBits options) {\n    CFTypeRef ret = oldIORegistryEntrySearchCFProperty(entry, plane, key, allocator, options);\n    NSLog(@\"\\n\\nSearchCFProperty:\\n\\tkey:%@\\n\\tret:%@\\n\\t%lu\", key, ret, CFGetTypeID(ret));\n    return ret;\n}\n\nstatic CFPropertyListRef (*old_lockdown_copy_value)(LockdownConnectionRef connection,\n                                                    CFStringRef           domain,\n                                                    CFStringRef           key);\nCFPropertyListRef new_lockdown_copy_value(LockdownConnectionRef connection, CFStringRef domain, CFStringRef Key) {\n    CFPropertyListRef Ret = old_lockdown_copy_value(connection, domain, Key);\n    NSLog(@\"LDHooker:%@\\nReturn Value:%@\", Key, Ret);\n    return old_lockdown_copy_value(connection, domain, Key);\n}\n\n% ctor {\n    void *SymbolGN =\n        MSFindSymbol(MSGetImageByName(\"/System/Library/Frameworks/IOKit.framework/IOKit\"), \"_IORegistryEntryGetName\");\n    NSLog(@\"GName: %p\", SymbolGN);\n    MSHookFunction((void *)SymbolGN, (void *)newIORegistryEntryGetName, (void **)&oldIORegistryEntryGetName);\n\n    void *SymbolSC = MSFindSymbol(MSGetImageByName(\"/System/Library/Frameworks/IOKit.framework/IOKit\"),\n                                  \"_IORegistryEntrySearchCFProperty\");\n    NSLog(@\"SPropertey: %p\", SymbolSC);\n    MSHookFunction(\n        (void *)SymbolSC, (void *)newIORegistryEntrySearchCFProperty, (void **)&oldIORegistryEntrySearchCFProperty);\n    }\n    else {\n        NSLog(@\"MGHooker: CSE Failed\");\n    }\n}\n```\n\n其实我想大家应该猜到我下面想做什么了，既然都已经对守护进程下手了，要不干脆我们自己也开一个守护进程的了，加个 root 权限，对所有其他进程安装钩子，如果调用了 Device ID 相关的 API，把返回值魔改掉，岂不美滋滋！代码如下：\n\n```objc\n#import <Foundation/Foundation.h>\n\nint main(int argc, const char * argv[]) {\n    @autoreleasepool {\n        // 红红火火恍恍惚惚\n        NSLog(@\"想不到吧，这次我真的编不出来了😂\");\n    }\n    return 0;\n}\n```\n\n那么今天的代码就写到这里了，下台鞠躬！\n\n---\n\n_注：以上所有代码全是瞎掰，如能运行，纯属巧合。_\n\n---\n\n> [如何实现 AppStore App 的自动下载](https://juejin.im/post/5b0a252d51882538b63af5c3)\n>\n> [Hooking MGCopyAnswer Like A Boss](http://mayuyu.io/2017/06/26/HookingMGCopyAnswerLikeABoss/)\n"},{"title":"使用 Haskell 将十进制数字转成罗马数字","url":"/2018/07/01/使用 Haskell 将十进制数字转成罗马数字/","content":"\n最近一边看「[Haskell 函数式编程入门](https://www.epubit.com/book/detail/20794)」一边自学 Haskell。函数式编程对笔者这种受OOP毒害颇深（虽然我完全不会 Java，但是经常会被别人来自 Java 背景的_(:_」∠)_）的菜鸟来说，还是很难适应的。想着目前主力语言是 C++，一种多范式编程语言，学习 Haskell 也算是自然而然吧。\n学一门新语言还是很痛苦的，但是如果能做出什么的话还是很高兴的！废话就不多说了。\n\n## 已知\n罗马数字像是一种很有趣的五进制，说是五进制，但还不准确。在罗马数字中，i 为 1，v 为 5，x 为 10，l 为 50，c 为 100，但是 4、 9、40、90 分别用 iv、ix、xl、xc 来表示，将小一级的罗马数字放在左边表示减法。1∼10 罗马数字为:i、ii、iii、iv、v、vi、vii、viii、ix、x。\n\n## 求解\n在此笔者和「[Haskell函数式编程入门](https://www.epubit.com/book/detail/20794)」作者一样只考虑 5000 以内的罗马数字。首先将几个特殊的罗马数字和与之对应的十进制数放在一起：\n\n```Haskell\nromeNotation :: [String]\nromeNotation =\n    [\"M\", \"CM\", \"D\", \"CD\", \"C\", \"XC\", \"L\", \"XL\", \"X\", \"IX\", \"V\", \"IV\", \"I\"]\n\nromeAmount :: [Int]\nromeAmount = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1]\n\npair :: [(Int, String)]\npair = zip romeAmount romeNotation\n```\n\n为什么是倒序的，请看下面的代码：\n\n```Haskell\nsubtrahend :: Int -> (Int, String)\nsubtrahend n = head (dropWhile (\\(a, _) -> a > n) pair)\n```\n\n不难看出当给这个函数传入一个不大于 5000 的正整数时，它将从 pair 列表中取得第一个比这个正整数小的数字，通过 dropWhile 将 pair 中比给定正整数大的元组去掉，再取得列表第一个元素。有了这个元素，我们就能获取到这个正整数对应的罗马数字。那么剩下的就简单了，只需要先将传入的正整数减去这个元素对应的数字，然后再将差递归地转换成罗马数字即可。\n\n```Haskell\n> subtrahend 5\n(5,\"V\")\n> subtrahend 86\n(50,\"L\")\n```\n\n下面定义函数 convert 来将十进制数转换为罗马数字，首先定义递归的基本条件。如果转换的数字是 0，那么返回空列表，因为罗马数字中没有表示 0 的符号，只需要返回 (0,\"\") 即可。 0 在数字中其实是一个非常抽象的概念。在当时，也许罗马人也不知道用什么来表示 0，这 里用的空字符串。下面再定义递归函数，使用 subtrahend 得到了减数，得到了对应的罗马数字 rome 与对应的数字 m，再递归地调用 convert 函数转换余下的十进制数，即 convert (n-m)，最后返回未转换的部分和两个罗马数字字符串连接：\n\n```Haskell\nconvert :: Int -> String\nconvert 0 = \"\"\nconvert n = let (rome, m) = subtrahend n in m ++ convert (n - rome)\n\n> convert 12\n\"XII\"\n> convert 109\n\"CIX\"\n> convert 1925\n\"MCMXXV\"\n> convert 4567\n\"MMMMDLXVII\"\n```\n\n是不是很简单？😂几个小时前的笔者是跪了的╮(╯▽╰)╭，所以笔者决定贴心的用等式推导来演算一下 convert 17 的计算过程：\n\n```Haskell\n  convert 17\n= \"X\" ++ convert (17 - 10)\n= \"X\" ++ \"V\" ++ convert (7 - 5)\n= \"X\" ++ \"V\" ++ \"I\" convert (2 - 1)\n= \"X\" ++ \"V\" ++ \"I\" ++ \"I\" convert (1 - 1)\n= \"X\" ++ \"V\" ++ \"I\" ++ \"I\" ++ \"\"\n= \"XVII\"\n```\n\n聪明的各位应该已经看出来问题了，在计算的时候，要暂时存储中间的值。\"X\", \"V\", \"I\", \"I\" 这些中间的值在计算到达基本条件前没有任何的用处。显然，这样对于内存空间的使用效率是不高的。所以应该将 convert 改成尾递归的形式。不过笔者比较菜，聪明的你可以试试。\n\n## 扩展\n那么既然已经可以把十进制数字转成罗马数字了，理所当然也应该将一个 5000 以内的罗马数字转换为一个十进制数字。\n思路也很简单，首先从大到小匹配罗马数字是否以 [\"M\", \"CM\", \"D\", \"CD\", \"C\", \"XC\", \"L\", \"XL\", \"X\", \"IX\", \"V\", \"IV\", \"I\"] 中的字符串开头，只需要找到第一个符合的字符串，就知道对应的十进制正整数，然后截断罗马数字，把剩下的罗马数字字符串递归执行同一函数，直到罗马数字全部处理完，此时所有十进制正整数相加即可。\n所以我们只需要稍微修改一下 subtrahend 和 convert 即可：\n\n```Haskell\nimport           Data.List\nimport           Data.Maybe\n\nsubtrahend' :: String -> (Int, String)\nsubtrahend' n = head (dropWhile (\\(_, a) -> not (a `isPrefixOf` n)) pair)\n\nconvert' :: String -> Int\nconvert' [] = 0\nconvert' n =\n    let (rome, m) = subtrahend' n\n    in  rome + convert' (fromMaybe \"\" (stripPrefix m n))\n    \n    \n> convert' \"XII\"\n12\n> convert' \"CIX\"\n109\n> convert' \"MCMXXV\"\n1925\n> convert' \"MMMMDLXVII\"\n4567\n```\n\n当然也可以改成尾递归，而且还应该有异常处理，但这里就不继续展开了。\n\n## 后记\n相信看到这里，大家也对 Haskell 这么语言有一定的了解了吧。在没学 Haskell 之前经常听说函数在 Haskell 中是一等公民，不是很理解，现在看何止是一等公民啊，是压根就一个公民_(:_」∠)_\n而且在 Haskell 中也没有 for loop 这种迭代利器，所以很多时间逼着你考虑递归，但是野语有之曰：\n\n> \"To iterate is human, to recur, divine.\" - L. Peter Deutsch\n\n递归这种神迹对于笔者这样的菜鸡凡人还是很难的，所以要学好 Haskell 还是任重而道远啊。\n\n"},{"title":"Haskell 在 macOS 下的环境搭建","url":"/2018/06/22/Haskell 在 macOS 下的环境搭建/","content":"\nHaskell 作为一个冷门语言，并没有一个简单好用傻瓜式的 IDE。所以笔者记录了自己搭建环境的过程，希望对大家有所帮助。\n\n## 准备工作\n\n1. 一个好的网络环境，至少与 GitHub 保持通畅连接\n2. [Homebrew](https://brew.sh/)\n\n## 开发环境的搭建\n\n### 编译器(GHC)、解释器(GHCI)等 Haskell 工具链\n\n在笔者踩过无数坑之后，无脑推荐[Haskell Stack](https://docs.haskellstack.org/en/stable/README/)，喜欢挑战的读者可以自行尝试使用 GHC+GHCI+[Cabal](https://www.haskell.org/cabal/)开发环境\n`brew install haskell-stack`\n\n### 编辑器\n\n目前主流的编辑器有 vim, emacs, sublime, atom, visual studio code 等，笔者平日开发中只在修改配置文件或者替换某个字符串时用到它们故先按下不表。\n\n### IDE\n\n因为宇宙最强 IDE——[Visual Studio](https://www.visualstudio.com/)在 Mac 上发力较晚并表现不佳，故笔者建议使用[IntelliJ IDEA](https://www.jetbrains.com/idea/)(虽说笔者非常讨厌 Java 这门语言，但是不得不承认 Java 写出来的工具还是有不少好用的)\n\n#### HaskForce\n\nIntelliJ IDEA 有两个第三方插件提供了对 Haskell 的支持，笔者建议使用评分较高的[HaskForce](http://haskforce.com/)，目前这款插件已经无人维护(存疑，但也侧面反映了 Haskell 社区的现状)\n\n-   安装\n\n    1. 在 IntelliJ IDEA 中按下 ⌘ + , 进入偏好设置界面\n    2. > Plugins > Browse repositories > HaskForce\n\n-   使用\n    由于 HaskForce 插件自身的局限性，需要在终端中通过 Haskell Stack 创建项目。\n    1. `stack new 项目名称 模版名称 路径(默认当前路径)`\n    2. `cd 项目名称`\n    3. `stack setup`\n    4. `stack build`\n\n_注意如果在创建项目中提示参数不足的警告，可以在~/.stack/config.yaml 中配置_\n\n```yaml\ntemplates:\n    params:\n        author-name: your-name\n        author-email: your-email\n        copyright: \"Copyright (c) 2018 0x11901\"\n        github-username: \"0x11901\"\n        category: categories\n```\n\n_不建议在此写死模版名称，如果不是很确定要用什么模版，可以在新建项目时传 simple_\n\n-   使用 IntelliJ IDEA 导入创建的 Haskell Stack 项目\n\n1.  路径选择项目的根目录，注意一下是不是选择了 Stack 模块\n2.  然后一直下一步\n3.  配置下 configurations\n4.  `> add > Haskell Stack Run > Executable: 项目名称`\n5.  Executable 一定要填写\n\n-   点击 run 就能运行你的 Haskell 程序了！\n\n### 相关工具\n\n如果仅仅只有这些虽然就能愉快的编码了，但是笔者认为是完全不够的。毕竟如果没有代码格式化工具和静态代码分析工具，笔者是不会写代码的。所以怎么能少了这些呢！！！\n刚好 HaskForce 整合了 hlint, ghc-mod, hindente 等相关 Haskell 工具，可以很好地与 IntelliJ IDEA 结合。它们的安装也十分简单，可以直接使用 Haskell Stack 安装，当然 hlint 也可以使用 Homebrew 安装，不过笔者建议使用统一的安装方式方便将来管理。\n\n`stack install hlint hindente stylish-haskell`\n\n其中 ghc-mod 的安装值得特别说一下，目前新建的 Haskell Stack 工程默认的 resolver 是 lts-11.6 , 其 GHC 的版本号是 8.2.2 , 而 ghc-mod 的主工程由于[技术问题](https://github.com/DanielG/ghc-mod/issues/900)一直没有支持这套环境，所以想要成功编译出来是很麻烦的。所以如果大家想使用这款令人愉悦的黑客工作，可以按照下列步骤来编译。\n\n    1. 推荐建立一个独立的目录来存储接下来要使用的文件，编译完成后即可删除\n    2. cd 你刚刚建的目录\n    3. git clone https://github.com/DanielG/ghc-mod.git -b ghc802\n    4. git clone https://github.com/DanielG/cabal-helper.git\n    5. cd ghc-mod ; touch stack.yaml\n\n因为通过 Haskell Stack 来编译 ghc-mod 需要配置一个 stack.yaml , 所以用你最喜欢的编译器打开 stack.yaml 并写上下面的内容：\n\n```yaml\nresolver: lts-11.6 # current resolver\n\npackages:\n    - location: .\n    - location: ./core # seems like ghc-mod-core got integrated\n    - location: ../cabal-helper\n      extra-dep: true\n\nextra-deps:\n    - extra-1.6.6 # escapeJSON was missing with 1.5.3\n    - monad-journal-0.7.2\n    - optparse-applicative-0.13.2.0\n    - unix-compat-0.4.3.1\n    - either-4.4.1.1\n    - cabal-plan-0.3.0.0\n\nflags: {}\n\nextra-package-dbs: []\n\nallow-newer: true # so it builds / too lazy to pinpoint exact versions\n```\n\n现在在当前目录使用 `stack install` 命令即可正常编译出 ghc-mod 与 ghc-modi 并会被放在 `~/.local/bin` 目录下，你可以将这个目录加入 shell 的环境变量中也可以把它们移到已经加到 shell 的环境变量的目录下。\n\n最后打开 IntelliJ IDEA 的进入偏好设置界面界面，找到 Haskell Tools 一栏，然后找到你想要使用的工具，点击 Auto Find 按钮然后确认，就能在 IntelliJ IDEA 使用这些工具了！\n\n### Haskell IDE Engine\n\n笔者最近在 GitHub 上发现了这个[新项目](https://github.com/haskell/haskell-ide-engine)，相对于 HaskForce 无人维护的状态，该项目正在如火如荼地开发中。正如该项目介绍所说，这款 Haskell 引擎笔者分析集成了上述所说的所有工具，而且安装配置更加傻瓜化。考虑到维护性，笔者建议考虑配置 Haskell 环境的同学应使用这个解决方案。\n\n#### Haskell IDE Engine 与 Visual Studio Code 集成\n\n从 Haskell IDE Engine 的介绍中可以看出，作者是按照“编辑器 + HIE”这种模式来设计的，故这次笔者尝试了 Haskell IDE Engine + Visual Studio Code 的组合。选择 [Visual Studio Code](https://code.visualstudio.com) 的原因主要是免费，毕竟笔者很穷。\n他们的集成也很简单：\n先从 [VSCode 市场](https://marketplace.visualstudio.com/items?itemName=alanz.vscode-hie-server) 安装 Haskell Language Server ,然后再自行编译 HIE。\n可以根据自己所用的 GHC 版本选择编译 HIE , 但是根据 Haskell Language Server 的说法，建议全部编译，故笔者选择全编译：\n\n```bash\ngit clone https://github.com/haskell/haskell-ide-engine --recursive\ncd haskell-ide-engine && make build-all\n```\n\n-   需要你的 Haskell Stack version >= 1.7.1\n-   一个流畅的网络\n\n编译成功后二进制文件会放在 `~/.local/bin`，建议将这个路径加入到 \\$PATH 中。\n最后只需要打开 VSCode 的偏好设置，在 JSON 中配置一下即可，具体可以看一下 [Haskell Language Server](https://github.com/alanz/vscode-hie-server) 的文档，基本上默认的配置就可以，但是也有 `\"languageServerHaskell.useHieWrapper\": true` 字段可以选择打开，如果你没有把 HIE 的二进制文件加入 \\$PATH 中，还需要配置 `\"languageServerHaskell.hieExecutablePath\": \"\"` 字段。\n\n现在就能使用 VSCode 愉快地撸码了。\n\n#### 后记\n\nHaskell IDE Engine 还支持很多编辑器，适应性很广。虽说现在用起来不如 HaskForce + IntelliJ IDEA 的组合，但是已发展的眼光来看，未来应该是 Haskell IDE Engine 占主流地位的。所以笔者建议大家都可以试试，总之目前用着还是比较满意的，以上。\n"},{"title":"利用 iCloud Drive 来同步 Xcode 配置","url":"/2018/05/11/利用 iCloud Drive 来同步 Xcode 配置/","content":"\n## 前言\n\n多年以前一位老程序员告诉笔者代码片段（code snippets）是程序员的财富，他有一个 U 盘，里面装着他的财富。每当他需要切换电脑写代码的时候，他就会把把精心配置的字体、主题、代码片段等部署到新电脑上，然后开始高速编码。每次看他写代码都是一种享受，不过这是另一个故事了。\n\n## 需求\n\n多年之后，笔者也终于凑够了钱买了自己的 Mac，闲暇无事的时候也会写写代码祭奠下逝去的青春。但是某些时候总会觉得很别扭，例如感觉字体和单位的有细小的差距，或者一个代码片段怎么也按不出来——最后发现是没有在这台电脑配置这段代码片段。这种事发生的事情多了之后，就会感觉厌烦，同样的操作为什么得重复两次、三次？或者拿出吃了几年灰的 U 盘抽插在各地的电脑上人工同步？就不能有什么办法可以一次更改多次应用？笔者稍微一拍脑门，想到了今天的主角——iCloud Drive\n\n1. 为什么使用 iCloud Drive？\n    - 因为这是苹果本家的网盘，嵌入系统中，只要开启我们就无需关心上传下载，正如 OneDrive 在 Windows 一样，我们只需要把文件放进去，他就会自动开始上传，并在你的每一台苹果设备上同步。利用这点我们就能方便的做到在不同的设备上同步 Xcode 配置文件，无需手动同步或者上传下载。\n2. 其他的替代方案\n    - GitHub 之类的大型同性交友网站\n        - 目前想来用 git 应该更好更方便，不过实现起来有点复杂，有能力的朋友可以自己动手\n    - OneDrive/坚果云等网盘\n        - 我觉得能有自带的还是用自带的吧\n\n## 思路\n\n总所周知 Xcode 的代码片段是保存在`~/Library/Developer/Xcode/UserData/CodeSnippets`路径下的，附近位置还有主题等配置信息。基于笔者的经验我们只需要备份同级目录下的 CodeSnippets、FontAndColorThemes 和 KeyBindings 三个子目录就行了。每当我们修改了代码片段、主题或者快捷键，把对应的文件放在 iCloud Drive 同步，当在其他电脑上时就使用最新的覆盖到对应目录即可。\n\n## 脚本\n\n虽说思路如此，但是笔者肯定不敢把这种三岁小孩子就能分析出来的东西发出来糊弄人。所以为了简化这个繁琐而又机械的操作，笔者编写了这样一个脚本：\n\n```bash\n#!/usr/bin/env bash\n\nset -euo pipefail\n\n################# variable define ##########\nnow=`date \"+%Y%m%d%H%M%S\"`\n\nred=`tput setaf 1`\ngreen=`tput setaf 2`\nyellow=`tput setaf 3`\nreset=`tput sgr0`\n\nxcode_dir=\"${HOME}/Library/Developer/Xcode/UserData\"\ncloud_backup_dir=\"${HOME}/Library/Mobile Documents/com~apple~CloudDocs/XcodeBackup\"\nlocal_backup_dir=\"${HOME}/资源/归档/XcodeBackup\"\n\ncode_snippets=\"CodeSnippets\"\nfont_and_color_themes=\"FontAndColorThemes\"\nkey_bindings=\"KeyBindings\"\n\n########### MAIN ##################\n# check directory exist\nif [ ! -d \"${cloud_backup_dir}\" ]; then\n    echo \"${red}iCloud Drive备份路径不存在！${reset}\"\n    mkdir -p \"${cloud_backup_dir}\"\n    echo \"${green}自动创建iCloud Drive备份路径：${reset}${cloud_backup_dir}\"\n    else\n    echo \"${green}iCloud Drive备份路径:${reset}${cloud_backup_dir}\"\nfi\n\nif [ ! -d \"${local_backup_dir}\" ]; then\n    echo \"${red}本地备份路径不存在！${reset}\"\n    mkdir -p \"${local_backup_dir}\"\n    echo \"${green}自动创建本地备份路径：${reset}${local_backup_dir}\"\n    else\n    echo \"${green}本地备份路径:${reset}${cloud_backup_dir}\"\nfi\n\n# zip files\ncd \"${xcode_dir}\"\nzip -r \"${cloud_backup_dir}/XcodeBackup+${now}.zip\" \"${code_snippets}\" \"${font_and_color_themes}\" \"${key_bindings}\" &\nzip -r \"${local_backup_dir}/XcodeBackup+${now}.zip\" \"${code_snippets}\" \"${font_and_color_themes}\" \"${key_bindings}\" &\n\nwait\n\n# delete unnecessary backup files\nnum=`ls -l \"${cloud_backup_dir}\" |grep \"^-\"|wc -l`\nif [ ${num} -gt 5 ]; then\n    num=`expr ${num} - 5`\n    cd \"${cloud_backup_dir}\"\n    ls -tr \"${cloud_backup_dir}\" | head -${num} | xargs rm\nfi\n\nnum=`ls -l \"${local_backup_dir}\" |grep \"^-\"|wc -l`\nif [ ${num} -gt 5 ]; then\n    num=`expr ${num} - 5`\n    cd \"${local_backup_dir}\"\n    ls -tr \"${local_backup_dir}\" | head -${num} | xargs rm\nfi\n```\n\n简化了这个繁琐的操作，仅需在开机的时候跑一下，就能达到自动备份的效果。功能也是十分的简单：\n\n1. 首先创建了两个备份 Xcode 配置文件的路径，一个在云端，一个在本地（本地路径大家可以自行配置，一般也不会用上）。\n2. 然后把 Xcode 归档到这两处各一份，笔者这里选用 zip 包而不是更高压缩比的 7zip 等是因为想做通用一点便于大家开箱即用，不需要额外安装其他软件。\n3. 最后将多次运行后生成的老包删除，只保留最新的 5 个，以便节约宝贵的空间（毕竟笔者比较穷只舍得用免费的 5g 版）\n\n有了这个脚本之后，大家只需要坚持开机的时候跑一跑就行了。笔者喜欢每天开机就更新下 cocoapods、brew、brew cask 这类的，所以就写了个脚本，刚好顺便也就备份一下。脚本思路大致如下，因为和主题无关就不细说了。\n\n```bash\n#!/usr/bin/env bash\n\nopen 自用魔法丝袜之影\n\nwait\n\npod repo update --verbose &\n更新Homebrew cask &\n备份各种币钱包 &\n\n备份Xcode等IDE配置文件 &\n\nwait\n\nkillall 自用魔法丝袜之影\n```\n\n不过这样其实也不是很方便，毕竟打开 terminal 输入指令都很烦了，难道还要手动计算这台电脑的配置是否是最新的？然后再考虑是不是需要把云盘里面的配置解压到指定的位置覆盖？而且很有可能在做这些前已经把这台电脑的配置当最新版上传到云盘里了。\n\n## 让所有的电脑用同一个版本的配置\n\n笔者再次进行了思考。如果可以根据这些文件的最后修改日期和备份的文件进行比较，谁新就用哪个版本，那么不就实现了吗？只要我们确保每次修改都跑一次脚本，每次开机都跑一次，就能达到我们想要的效果了。至于如何判断文件的最后修改时间，笔者认为只需要一个根据文件名生成的 key 和一个对应的文件的最后修改时间做 value 的数据结构就行了（虽说也可以把备份的文件展开比较，但是因为笔者才疏学浅，尚不知如何操作，就只能通过键值对来判断了）\n不过实际操作起来，再次彰显了笔者的才疏学浅，笔者也不知道如何在 bash 中创建一个高效并能持久化的键值对，如果哪位大佬知道请务必告诉笔者。\n最后笔者想到 Mac 自带的 SQLite3，虽说这样一个小小的功能上数据库是有一点高射炮打蚊子，但是能跑就行吧。脚本如下；\n\n```bash\n#!/usr/bin/env bash\n\nset -euo pipefail\n\n################# variable define ##########\nnow=`date \"+%Y%m%d%H%M%S\"`\n\nred=`tput setaf 1`\ngreen=`tput setaf 2`\nyellow=`tput setaf 3`\nreset=`tput sgr0`\n\nxcode_dir=\"${HOME}/Library/Developer/Xcode/UserData\"\ncloud_backup_dir=\"${HOME}/Library/Mobile Documents/com~apple~CloudDocs/XcodeBackup\"\nlocal_backup_dir=\"${HOME}/资源/归档/XcodeBackup\"\n\nxcode_backup_database=\"${HOME}/Library/Mobile Documents/com~apple~CloudDocs/.BackupDatabase\"\n\ncode_snippets=\"CodeSnippets\"\nfont_and_color_themes=\"FontAndColorThemes\"\nkey_bindings=\"KeyBindings\"\n\ntemp=\"DoNotModify\"\ndatabase=\"${xcode_backup_database}/${temp}\"\n\n########### MAIN ##################\n# check directory exist\nif [ ! -d \"${cloud_backup_dir}\" ]; then\n    echo \"${red}iCloud Drive备份路径不存在！${reset}\"\n    mkdir -p \"${cloud_backup_dir}\"\n    echo \"${green}自动创建iCloud Drive备份路径：${reset}${cloud_backup_dir}\"\nelse\n    echo \"${green}iCloud Drive备份路径:${reset}${cloud_backup_dir}\"\nfi\n\nif [ ! -d \"${local_backup_dir}\" ]; then\n    echo \"${red}本地备份路径不存在！${reset}\"\n    mkdir -p \"${local_backup_dir}\"\n    echo \"${green}自动创建本地备份路径：${reset}${local_backup_dir}\"\nelse\n    echo \"${green}本地备份路径:${reset}${cloud_backup_dir}\"\nfi\n\nif [ ! -d \"${xcode_backup_database}\" ]; then\n    echo \"${red}同步数据库路径不存在！${reset}\"\n    mkdir -p \"${xcode_backup_database}\"\n    echo \"${green}自动创建数据库路径：${reset}${local_backup_dir}\"\nelse\n    echo \"${green}数据库路径:${reset}${cloud_backup_dir}\"\nfi\n\nsqlite3 \"${database}\" 'create table if not exists backupXcode(id integer primary key not NULL,key integer unique not NULL,value integer not NULL);'\n\n#获取最后修改时间\ncd \"${xcode_dir}\"\nif [ -d \"./${code_snippets}\" ]; then\n    find \"./${code_snippets}\" -type f >> ${temp}\nfi\nif [ -d \"./${font_and_color_themes}\" ]; then\n    find \"./${font_and_color_themes}\" -type f >> ${temp}\nfi\nif [ -d \"./${key_bindings}\" ]; then\n    find \"./${key_bindings}\" -type f >> ${temp}\nfi\n\nwhile read path; do\n    key=`md5 -q -s \"${path}\"`\n    value=`stat -f \"%m\" \"${path}\"`\n    isModify=`sqlite3 \"${database}\" \"select value from backupXcode where key == '${key}';\"`\n    if [ -z ${isModify} ]; then\n        echo \"${yellow}本地Xcode配置尚未同步${reset}！\"\n        num=`ls -l \"${cloud_backup_dir}\" |grep \"^-\"|wc -l`\n        if [ ${num} -ge 1 ]; then\n            echo \"${green}找到最新的Xcode配置，开始自动替换${reset}！\"\n\n            cd \"${xcode_dir}\"\n            ## backup before\n            zip -r \"XcodeBackup.zip\" \"${code_snippets}\" \"${font_and_color_themes}\" \"${key_bindings}\" &\n            wait\n\n            cd \"${cloud_backup_dir}\"\n            newBackup=`ls -t | head -1`\n\n            unzip -u \"${newBackup}\" -d \"${xcode_dir}\" &\n            wait\n\n            cd \"${xcode_dir}\"\n            rm ${temp}\n            if [ -d \"./${code_snippets}\" ]; then\n                find \"./${code_snippets}\" -type f >> ${temp}\n            fi\n            if [ -d \"./${font_and_color_themes}\" ]; then\n                find \"./${font_and_color_themes}\" -type f >> ${temp}\n            fi\n            if [ -d \"./${key_bindings}\" ]; then\n                find \"./${key_bindings}\" -type f >> ${temp}\n            fi\n            echo 更新数据库...\n            while read path; do\n                key=`md5 -q -s \"${path}\"`\n                value=`stat -f \"%m\" \"${path}\"`\n                sqlite3 \"${database}\" \"insert or replace into backupXcode values(NULL,'${key}',${value});\" &\n            done < ${temp}\n        fi\n        break\n    fi\n    if [ ${isModify} != ${value} ]; then\n        if [ ${isModify} -gt ${value} ]; then\n            echo \"${yellow}本地Xcode配置超前${reset}！\"\n        else\n            echo \"${yellow}本地Xcode配置已经过期${reset}！\"\n\n            num=`ls -l \"${cloud_backup_dir}\" |grep \"^-\"|wc -l`\n            if [ ${num} -ge 1 ]; then\n                echo \"${green}找到最新的Xcode配置，开始自动替换${reset}！\"\n\n                cd \"${xcode_dir}\"\n                ## backup before\n                zip -r \"XcodeBackup.zip\" \"${code_snippets}\" \"${font_and_color_themes}\" \"${key_bindings}\" &\n                wait\n\n                cd \"${cloud_backup_dir}\"\n                newBackup=`ls -t | head -1`\n\n                unzip -o \"${newBackup}\" -d \"${xcode_dir}\" &\n                wait\n            fi\n        fi\n        cd \"${xcode_dir}\"\n        rm ${temp}\n        if [ -d \"./${code_snippets}\" ]; then\n            find \"./${code_snippets}\" -type f >> ${temp}\n        fi\n        if [ -d \"./${font_and_color_themes}\" ]; then\n            find \"./${font_and_color_themes}\" -type f >> ${temp}\n        fi\n        if [ -d \"./${key_bindings}\" ]; then\n            find \"./${key_bindings}\" -type f >> ${temp}\n        fi\n        echo 更新数据库...\n        while read path; do\n            key=`md5 -q -s \"${path}\"`\n            value=`stat -f \"%m\" \"${path}\"`\n            sqlite3 \"${database}\" \"insert or replace into backupXcode values(NULL,'${key}',${value});\"\n        done < ${temp}\n        break\n    fi\ndone < ${temp}\n\nwait\nrm ${temp}\n\n# zip files\ncd \"${xcode_dir}\"\nzip -r \"${cloud_backup_dir}/XcodeBackup+${now}.zip\" \"${code_snippets}\" \"${font_and_color_themes}\" \"${key_bindings}\" &\nzip -r \"${local_backup_dir}/XcodeBackup+${now}.zip\" \"${code_snippets}\" \"${font_and_color_themes}\" \"${key_bindings}\" &\n\nwait\n\n# delete unnecessary backup files\nnum=`ls -l \"${cloud_backup_dir}\" |grep \"^-\"|wc -l`\nif [ ${num} -gt 5 ]; then\n    num=`expr ${num} - 5`\n    cd \"${cloud_backup_dir}\"\n    ls -tr \"${cloud_backup_dir}\" | head -${num} | xargs rm\nfi\n\nnum=`ls -l \"${local_backup_dir}\" |grep \"^-\"|wc -l`\nif [ ${num} -gt 5 ]; then\n    num=`expr ${num} - 5`\n    cd \"${local_backup_dir}\"\n    ls -tr \"${local_backup_dir}\" | head -${num} | xargs rm\nfi\n```\n\n## 后记\n\n笔者简单测试了一下，基本上能用。以此思路，应该也可用在 Alfred、vimrc 等配置文件。不过依旧不是很方便，不过笔者才疏学浅，目前也就这个水平了，希望能对大家有所帮助，不知道大家有没有什么好的建议？笔者认为可以在 Xcode 关闭时自动运行本脚本，但是尚未找到好的胡克点*(:*」∠)\\_，如果大家有什么好的建议，欢迎[PR](https://github.com/0x11901/Scripts/blob/master/BackupXcode.sh)\n\n就这样吧，下台鞠躬！！！\n"},{"title":"如何使用 Logos 优雅的注入 Mac app","url":"/2018/02/10/如何使用 Logos 优雅的注入 Mac app/","content":"\n## 前言\n\nLogos 是 [Theos](https://github.com/theos/theos) 的一个组件，它允许程序员使用一组特殊的预处理器指令来编写钩子，简洁高效。\n做过 iOS 逆向开发的朋友应该非常熟悉，这里笔者将介绍如何在 Mac app 上使用 Logos。\n\n## 可能用到的工具\n\n1.  [Theos](https://github.com/theos/theos)\n2.  [optool](https://github.com/alexzielenski/optool)/[insert_dylib](https://github.com/Tyilo/insert_dylib)\n3.  [unsign](https://github.com/steakknife/unsign) (optional)\n\n---\n\n## 一个简单的例子\n\n-   编写一个简单的 demo，大概就是软件正中一个按钮，点击之后 alert(\"hi!\")。核心代码如下：\n\n    ```objc\n    #import \"ViewController.h\"\n\n    @implementation ViewController\n\n    - (void)viewDidLoad {\n        [super viewDidLoad];\n\n        // Do any additional setup after loading the view.\n    }\n\n    - (IBAction)sayHi:(NSButton *)sender {\n        NSAlert *alert = NSAlert.new;\n        alert.messageText = @\"hi!\";\n        alert.alertStyle = NSAlertStyleInformational;\n        [alert runModal];\n    }\n\n    - (void)setRepresentedObject:(id)representedObject {\n        [super setRepresentedObject:representedObject];\n\n        // Update the view, if already loaded.\n    }\n\n    @end\n    ```\n\n    ![效果图](https://i.imgur.com/ao2FHon.png)\n\n我们的目标是注入 sayHi 这个方法，使点击按钮之后不再说“hi!”，而是“hello world!”\n\n-   编写 Logos\n\n    ```objc\n    %config(generator=internal)\n\n    // You don't need to #include <substrate.h>, it will be done automatically, as will\n    // the generation of a class list and an automatic constructor.\n    #import <Foundation/Foundation.h>\n\n    %hook ViewController\n\n    // Hooking an instance method with an argument.\n    - (void)sayHi:(id)argument {\n        NSAlert *r15 = [[NSAlert alloc] init];\n        [r15 setMessageText:@\"hello world!\"];\n        [r15 setAlertStyle:0x1];\n        [r15 runModal];\n    }\n\n    // Always make sure you clean up after yourself; Not doing so could have grave consequences!\n    %end\n\n    %ctor {\n        NSLog(@\"!!!!!!inject success!!!!!!!\");\n    }\n    ```\n\n将以上代码保存为一个 Tweak.xm 文件(名字后缀名随意)，放在与 SayHi.app 同级目录下，便于后续操作。\n\n-   然后我们使用 Theos 的语法分析来把 Logos 转换成普通代码\n    `$THEOS/bin/logos.pl Tweak.xm > abc.mm`\n    _注意 abc 应该有 mm 作为后缀名，用于告诉 clang 目标语言类型_\n\n-   使用 clang 编译转换后的普通代码，并将结果放到 app 包内\n    `clang -shared -undefined dynamic_lookup -o ./SayHi.app/Contents/MacOS/lib.dylib ./abc.mm`\n\n-   使用 optool/insert_dylib 往 SayHi 的 MachO 头部添加我们刚刚编译的 lib.dylib\n    `optool install -c load -p @executable_path/lib.dylib -t ./SayHi.app/Contents/MacOS/SayHi`\n\n如果你的 Mac app 没有签名的话，此时应该已经达成我们的需求了。但是实践中我们肯定不是对自己导出的未签名 Mac app 下黑手。所以需要去掉这个签名或重签名。因为笔者没有钱买开发者账号，故不知道如何重签名。\n\n-   使用 codesign 去除签名\n    `codesign --remove-signature SayHi.app`\n\n此时我们的需求已经达成\n\n![大成功](https://i.imgur.com/pcCawwB.png)\n\n但是 codesign 有一个 bug，在删除代码签名之后没有修复 MachO Header 的偏移，会导致生成的 MachO 文件畸形。笔者曾经就遇见一个不到 1m 的小程序在移除签名后膨胀到 2g 大小。\n所以笔者建议使用开源社区的代替方案——[unsign](https://github.com/steakknife/unsign)\n\n## 后记\n\n笔者把上面的繁琐命令行操作整合为一个脚本，在这里也顺便分享出来\n\n```bash\n#!/usr/bin/env bash\n\n#将xm和文件app包放在同一个目录，运行本脚步进行注入\n\npath=`ls | grep *.app | head -1`\ntweak=`ls | grep *.xm | head -1`\ntemp='x11901'\nname=${path%.app}\n\n$THEOS/bin/logos.pl \"./${tweak}\" > \"./${temp}.m\"\nclang -shared -undefined dynamic_lookup -o \"./${path}/Contents/MacOS/lib.dylib\" \"./${temp}.mm\"\noptool install -c load -p @executable_path/lib.dylib -t \"./${path}/Contents/MacOS/${name}\"\n\nrm -f ${temp}.m\n\n# 使用unsign效果可能更好，codesign --remove-signature 在删除代码签名之后没有修复MachO Header的偏移，导致生成的MachO文件畸形\n# codesign --remove-signature ${name}\nif [ ! -e \"./${path}/Contents/MacOS/${name}.ori\" ]; then\n    unsign \"./${path}/Contents/MacOS/${name}\"\n    mv \"./${path}/Contents/MacOS/${name}\" \"./${path}/Contents/MacOS/${name}.ori\"\n    mv \"./${path}/Contents/MacOS/${name}.unsigned\" \"./${path}/Contents/MacOS/${name}\"\nfi\n\nopen \"./${path}/Contents/MacOS/${name}\"\n```\n\n---\n\n[下载 Demo](https://github.com/0x11901/SayHi)\n"},{"title":"重温《EVA》TV 版 25、26 集有感","url":"/2018/02/07/重温《EVA》TV 版 25、26 集有感/","content":"\n![](https://i.imgur.com/dW7INPG.jpg)\n\n《**新世纪福音战士**》，简称《**EVA**》是我非常喜爱的一部动漫。最近在闲暇之余重温了其 TV 版 25、26 话，比起年少时多了几分感慨，故记录下来，方便日后回味\n\n虽说是想写点什么，但是实际写的时候完全不知从何下笔，所以按照影片的时间顺序结合我个人的分析起笔吧。但是在继续这个话题之前，我提出两个假设，以下的观点讲建立在这两个假设之下：\n\n1.  TV 版 25、26 话与剧场版《The End of Evangelion》（简称 EoE）讲诉了同一个故事，只是表现形式不同，即 TV 版描述了 EoE 中真嗣等人在“人类补完计划”前后的心理活动\n\n    _注：本条假设基于 24 话下集预告中出现的分镜和解说与剧场版 Air 高度一致，证明剧场版剧本早已完成_\n\n    ![Air](https://i.imgur.com/FM8ksVx.png \"Air\")\n\n2.  作者主要以真嗣的心理\n\n## 真嗣\n\n25 话一开头就打出了 _存在理由、レゾンデートル_ 一行白字，除了告诉观众我们已经没钱了之外，也揭示了本小结的主题——真嗣存在的理由？![*存在理由、レゾンデートル* ](https://i.imgur.com/GpjbvEn.png \"*存在理由、レゾンデートル* \")\n\n> 存在的理由，可以待在这里的理由，碇真嗣他的情况\n>\n> 少年期望的死亡\n>\n> 少年达成他的愿望\n>\n> 最后的使徒消灭了\n> 可是，碇真嗣很苦脑\n> 为什么杀掉\n> ……\n\n结合以前的剧情，很容易知道真嗣认为自己是不应该继续存在于这个世界的，正如太宰治的“生而为人，我很抱歉“，此时的真嗣是消极厌世的，他认为渚薰才是应该活下来的，而不是自己（哪怕为此牺牲了全人类）。他也不能接受自己杀了渚薰，认为自己杀了人，所以没有资格再活下去。\n\n> 真嗣：因为没有其他方法啊\n> 为什么杀掉\n> 真嗣：因为他是使徒啊\n> 即使同为人类？\n> 真嗣：不对，是使徒，他是我们的敌人\n> 即使同为人类？\n> 即使同为人类？\n> 真嗣：不对，不对，不对啊\n> 丽：明明跟我同样是人类啊\n> 真嗣：不对，他是使徒啊\n> 丽：所以杀掉\n> 真嗣：没错，不那样的话我们会死掉，大家都会被杀掉\n> 丽：所以杀掉\n> 真嗣：我也不想那么做，可是没有办法啊\n\n这里可以看出真嗣内心已经接近崩溃，虽然找出了很多理由来辩解为什么自己应该存在，辩解自己为什么应该杀死渚薰，但是反复出现的“所以杀掉”暗示了真嗣内心是不接受自己的辩解的，于是他选择了向他人求助，告诉他杀死渚薰、自己活下来的理由\n\n![help](https://i.imgur.com/lIHFQeR.png \"help\")\n\n然后画面闪回了 24 话末真嗣与美里在夜晚的湖边交谈\n\n> 真嗣：没错，活下来的应该是薰才对，他比我这种人不知道好多少倍，应该是薰活下来才对\n> 美里：不对，能活下来的只有怀抱生存意志的人，放弃生存的意思，把一切寄托在徒具表像的希望上，真嗣你没有错\n\n但是基于第一个假设，我认为 25 话应发生在交谈之后，所以此处除了省钱之外，应该算作回忆，美里的解释并不是真嗣想要的答案，不过我认为这是作者想要呈现给观众的答案\n\n​ _顺便说一下，这时的真嗣去医院寻找了明日香的帮助，但是并没有得到帮助，而是……对于这样下流的主角，我只能说放开那个女孩，这种罪孽让我来承受_\n\n![OGC](https://i.imgur.com/j1DH1mz.png \"OGC\")\n\n紧接着又是一连串字幕\n\n![](https://i.imgur.com/93afLoi.png)\n\n大概这就是真嗣现在的想法，他认为自己正在被灌输正义，实际上无论何种解释，自己都没有理由在存活于世，不如死去。\n\n![](https://i.imgur.com/FbnQZvr.png)\n\n> 不安\n> 真嗣：这样真的好吗？\n> 强迫观念\n> 真嗣：我不知道，我该怎么办才好，该怎么办才好啊？\n> 在害怕什么？\n> 真嗣：害怕什么\n>\n> 在害怕什么？\n> 真嗣：自已\n> 在害怕什么？\n> 真嗣：怕被讨厌\n> 在害怕什么\n> 真嗣：被谁\n> 在害怕什么\n> 真嗣：谁呢？\n> 在害怕什么\n> 真嗣：那是…爸爸。我被爸爸拋弃，被爸爸讨厌\n> 真嗣：被讨厌的话该怎么办，怎么办才好\n\n接下来的这一段内心独白，说明了真嗣害怕被碇源渡讨厌，一个简单而又单纯的理由，折射的却是一个自幼被抛弃、残缺而破碎的内心。虽说每个人的一生难免都会被父母所伤害，但是真嗣的个人经历正是造成他性格的重要原因。对于一个 14 岁的少年，一次又一次的被父亲逼着“杀人”，正常情况下谁都会崩溃，真嗣的内心一遍遍的追问自己为什么害怕，而他的自卑、罪恶感也一步步把自己推向崩溃的边缘\n\n随着镜头一转，来到一片白雾中\n\n![白雾](https://i.imgur.com/14LOGhP.png \"迷蒙\")\n\n象征了此时的真嗣已经迷失自我\n\n> 真嗣：这是那里，我该去那里才好，什么都看不见，什么都不知道\n>\n> 美里小姐，那个，你到那里去了\n>\n> 那个，接下来我该去那里\n>\n> 美里小姐，明日香，丽，冬二，剑介，加持先生，律子小姐，爸爸…妈妈…谁来告诉我，告诉我到底该怎么办才好\n\n迷蒙中真嗣渴望得到别人的帮助，但是这是无济于事的。依据第二个假设，真嗣内心中出现的他人只是自己根据记忆构建的他人形象，虽然说出来的台词很像他人真正所说的，不过毕竟是自己所构建的。自己永远不可能欺骗自己，除非自己放弃了\n\n此时画面中出现了初号机，并一把抓住了真嗣\n\n![省钱镜头的致敬](https://i.imgur.com/jyvebI7.png \"省钱镜头的致敬\")\n\n> EVA 初号机，结果，我只能驾驶它吗？甚至还要杀掉喜欢的人，照爸爸还有大家说的，再次驾驶著它去战斗吗？妈妈，说说话吧　回答我啊\n\n此时突然出现的初号机，我认为有两层含义，一个是根据《EoE》的剧情，真嗣在美里留下“大人的吻”之后来到了初号机面前，但是他并没有坐上驾驶室，这里也许说明了他为什么不愿意再驾驶 EVA，任凭我香如何呼喊\n\n![](https://i.imgur.com/qgkyRNP.png)\n\n第二层意思我认为是紧接上面，害怕被父亲讨厌的真嗣为了讨好父亲，成为大家眼中的乖孩子，不自愿地驾驶 EVA，驾驶 EVA 是他为了博得父亲好感的一个也是唯一一个途径，哪怕一次次被伤害，一次次逃走，最终他都会回来驾驶 EVA。而这一次 EVA 又来到了他的眼前，说明了他内心的绝望与矛盾……人生也何尝不是如此\n\n> 为什么驾驶 EVA\n> 真嗣：因为大家要我驾驶\n> 所以就驾驶 EVA?\n> 真嗣：那是为了大家啊，有什么不对\n> 你是为了大家，为了他人驾驶 EVA 吗？\n> 真嗣：没错啊，这不是件好事吗？不是一件非常好的事情吗？这样大家就会称赞我，就会重视我\n>\n> 明日香：骗人，你是白痴吗？结果还不是为了自己，你总是这样动不动就为自己辩解\n> 真嗣：是吗\n> 明日香：为了他人而努力这种想法，本身就是一种轻松的生活方式\n> 真嗣：是这样吗？\n>\n> 明日香：简言之，真嗣你很寂寞\n> 真嗣：是吗\n>\n> 明日香：你这样不过是一种依赖罢了\n> 真嗣：或许真是这样吧\n> 明日香：你只是一昧盼著自己被人需要不是吗\n> 真嗣：也许是吧\n\n纵观整部作品，真嗣大部分时间都不是自愿驾驶 EVA 的，有时为了帮助他人有时是为了自己。正如明日香所说，真嗣选择了一个轻松的活法——通过取得别人的认同而实现自己的人生价值。根据弗洛伊德精神分析学的基本原则\n\n> 包括遗传的性格构造在内，人心理的发展是由幼时的经历决定的\n\n造成目前真嗣这一性格很有可能是因为真嗣的童年经历。为了自己不再被抛弃，真嗣拼命寻找一个存在于此的理由——驾驶 EVA，但是当他已经无法再驾驶 EVA 的时候，既是自己再次成为无用之物的时候（潜意识中真嗣认为自己将会再次被抛弃）\n\n虽说我们都知道事实并不如此，但是这也是局外人的观点，此时此刻真嗣是既不愿意再驾驶 EVA，又不得不驾驶 EVA，也许这也能解释真嗣为何在此时选择轻生。\n\n顺便提一下这里明日香的观点十分有趣，让我想到了正义的伙伴——卫宫士郎\n\n![正义的伙伴](https://i.imgur.com/hgi91uH.jpg \"正义的伙伴\")\n\n也许是奈须蘑菇受到了痞子的启发，卫宫士郎的理想就被人评价为“偷来的理想”，而在这里真嗣被明日香说成了是寂寞\n\n> 寂寞是想要别人理解你\n>\n> 孤独是没有人能理解你\n\n可谓是一针见血，真嗣渴望被关注，渴望被爱，也曾经努力过，试图改变过，不过最后他认为自己失败了\n\n> 明日香：你只是一种等待別人给你幸福不是吗？给你虚假的幸福？\n> 丽：这方面你不也一样吗？\n> 明日香：啊？\n\n这时话锋一转，突然出现的绫波丽把矛头指向了明日香画面切到了水中的二号机（正好能和剧场版中昏迷的明日香同二号机一起沉入湖底避难）\n\n## 明日香与绫波丽\n\n> 明日香：不知不觉我又坐上了 EVA，又被放了上来，反正这个废物也不会动了，不…废物应该是我吧，没人需要我这种人了，我这种人已经没人要了，没有人需要无法驾驶 EVA 的驾驶员\n> 丽：你在別人心中追寻自己呢\n>\n> 明日香：少啰嗦\n> 害怕分离\n> 丽：你害怕独自一人对吧？\n>\n> 改变话题，场景\n>\n> 害怕分离\n> 丽：你是因为自己也会和別人一起消失才害怕的吧？\n>\n> 害怕分离\n> 幼年的明日香：所以才驾驶 EVA\n\n明日香在剧中一贯给人开朗活泼的感觉，但是随着剧情的发展，明日香的精神状态急转直下。无法驾驶 EVA 的明日香离家出走并割腕自杀，说起来真的和真嗣很像。不过真嗣应属于被动型人格，明日香则正好相反，但是本质上他们都因为童年的阴影\n\n> 明日香：少啰嗦\n> 固执\n> 明日香：少啰嗦、少啰嗦，我才不想被妳这种人偶说教\n\n---\n"}]